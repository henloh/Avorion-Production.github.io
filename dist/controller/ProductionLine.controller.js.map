{"version":3,"file":"ProductionLine.controller.js","names":["BaseController","formatter","Factory","Game","Product","treeGood","constructor","good","game","parent","Name","Dangerous","Illegal","AvgPrice","Level","Customers","Manufacturer","factoryOptions","subs","getId","replace","getActiveFactory","facs","factory","active","concat","getActiveSubs","indexOf","push","getExportFactory","result","requiredProducts","product","getSubGoods","getAllGoods","setActiveFactory","length","select","control","getContent","setSelectedKey","setFactoryActive","lowest","compare","getMaterialLevelCombined","setActiveFactoryRecursiv","Material","newFactoryName","console","log","id","checkMaterialList","buildControl","panellevel","Panel","getPanelId","expanded","expandable","headerText","addStyleClass","deathZone","factories","getFactoriesForProduct","newFactory","treeFactory","error","warn","setExpandable","addContent","newSelect","Select","selectedItem","items","path","template","Item","text","key","templateShareable","change","that","selectFactory","newButton","Button","press","setBaseFactory","ProductionCap","Cost","Products","Materials","selectid","getProduct","allGoods","requiredProduct","goodLvl","Title","width","visible","mats","getMaterialsForFactory","mat","newMat","reqMaterial","factoryGame","goods","availableGoods","reqFactories","prodTree","products","panelCount","setTargetFactory","factoryName","targetFactory","getFactory","newGood","treeitem","clearDeathZone","destroy","getActiveFactories","baseitem","Set","index","element","undefined","splice","getExportTree","exportTree","name","setAvailableGood","ProductionLine","onInit","Model","JSONModel","setData","TargetFactory","getView","setModel","getRouter","getRoute","attachPatternMatched","onPatternMatched","inputF","byId","setFilterFunction","sTerm","oItem","getText","match","RegExp","generateProductionLine","event","view","viewModel","getModel","getProperty","TargetFactoryName","getValue","setProperty","getProductsFromFactory","addItem","sort","getSource","item","getParameters","getBindingPath","i","button","substring","lastIndexOf","getSelectedItem","addAvailableGood","oView","selectDialog","open","Fragment","load","controller","then","dialog","bind","onDialogClose","aContexts","getParameter","map","oContext","getObject","getBinding","filter","onSearch","sValue","oFilter","Filter","FilterOperator","Contains","oBinding","handleDownloadPress","data","requiredFactories","basicTree","jsonString","JSON","stringify","File","save","openUploadDialog","importDialog","closeDialog","close","handleUploadPress","file","getFileObject","reader","FileReader","readAsText","onload","parse","MessageBox","show"],"sources":["../../src/controller/ProductionLine.controller.ts"],"sourcesContent":["import MessageBox from \"sap/m/MessageBox\";\r\nimport BaseController from \"./BaseController\";\r\nimport formatter from \"../model/formatter\";\r\nimport Event from \"sap/ui/base/Event\";\r\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\r\nimport Input from \"sap/m/Input\";\r\nimport SuggestionItem from \"sap/m/SuggestionItem\";\r\nimport { Factory, Game, Product } from \"./Types\";\r\nimport VBox from \"sap/m/VBox\";\r\nimport Control from \"sap/ui/core/Control\";\r\nimport Panel from \"sap/m/Panel\";\r\nimport Select from \"sap/m/Select\";\r\nimport Item from \"sap/ui/core/Item\";\r\nimport Title from \"sap/m/Title\";\r\nimport Button from \"sap/m/Button\";\r\nimport Fragment from \"sap/ui/core/Fragment\";\r\nimport SelectDialog from \"sap/m/SelectDialog\";\r\nimport Filter from \"sap/ui/model/Filter\";\r\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\r\nimport File from \"sap/ui/core/util/File\";\r\nimport Dialog from \"sap/m/Dialog\";\r\n\r\n/**\r\n * @namespace de.henloh.prodts.controller\r\n */\r\n/*\r\n.########..########...#######..########..##.....##..######..########\r\n.##.....##.##.....##.##.....##.##.....##.##.....##.##....##....##...\r\n.##.....##.##.....##.##.....##.##.....##.##.....##.##..........##...\r\n.########..########..##.....##.##.....##.##.....##.##..........##...\r\n.##........##...##...##.....##.##.....##.##.....##.##..........##...\r\n.##........##....##..##.....##.##.....##.##.....##.##....##....##...\r\n.##........##.....##..#######..########...#######...######.....##...\r\n*/\r\nclass treeGood extends Product {\r\n\tfactoryOptions: treeFactory[]; \r\n\tid: string;\r\n\tcontrol: Control;\r\n\tparent: object;\r\n\tsubs: {[k: string]: treeFactory};\r\n\tgame: factoryGame;\r\n\tconstructor(good: Product, game: factoryGame, parent: object) {\r\n\t\tsuper(good.Name, good.Dangerous, good.Illegal, good.AvgPrice, good.Level, good.Customers, good.Manufacturer);\r\n\r\n\t\tthis.parent = parent;\r\n\t\tthis.game = game;\r\n\t\tthis.factoryOptions = [];\r\n\t\tthis.subs = {};\r\n\t}\r\n\tpublic getId():string {\r\n\t\t// Parent ist entweder game oder factory\r\n\t\t//@ts-ignore\r\n\t\tif(this.parent.getId) {\r\n\t\t\t//@ts-ignore\r\n\t\t\treturn this.parent.getId() + \"/\" + this.Name.replace(/\\s/g, '');\r\n\t\t} else {\r\n\t\t\treturn this.Name.replace(/\\s/g, '');\r\n\t\t}\r\n\t}\r\n\tpublic getActiveFactory(): string[] {\r\n\t\tvar facs:string[] = []\r\n\t\tfor (const factory of this.factoryOptions) {\r\n\t\t\tif (factory.active) {\r\n\t\t\t\tfacs = facs.concat(factory.getActiveSubs());\r\n\t\t\t\tfacs.indexOf(factory.Name) === -1 ? facs.push(factory.Name) : null;\r\n\t\t\t\treturn facs;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tpublic getExportFactory(): any { \r\n\t\tvar result:any = {};\r\n\t\tfor (const factory of this.factoryOptions) {\r\n\t\t\tif (factory.active) {\r\n\t\t\t\tresult.Name = factory.Name;\r\n\t\t\t\tresult.requiredProducts = []\r\n\t\t\t\tfor (const product of factory.requiredProducts) {\r\n\t\t\t\t\tresult.requiredProducts.push({\r\n\t\t\t\t\t\tName: product.Name,\r\n\t\t\t\t\t\tFactory: product.getExportFactory()\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tpublic getSubGoods(): treeGood[] {\r\n\t\tvar result:treeGood[] = [];\r\n\t\tfor (const factory of this.factoryOptions) {\r\n\t\t\tresult = result.concat(factory.getAllGoods());\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tpublic setActiveFactory(Name: string) {\r\n\t\tif(!(this.factoryOptions.length > 0)) return;\r\n\t\tfor (const factory of this.factoryOptions) {\r\n\t\t\tfactory.active = false;\r\n\t\t\tif (factory.Name == Name) {\r\n\t\t\t\tfactory.active = true;\r\n\t\t\t\tif (this.factoryOptions.length > 1) {\r\n\t\t\t\t\t// first content is select\r\n\t\t\t\t\tvar select = (this.control as Panel).getContent()[0] as Select;\r\n\t\t\t\t\tselect.setSelectedKey(factory.Name.replace(/\\s/g, ''));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// initial build select one\r\n\tprivate setFactoryActive():treeFactory {\r\n\t\tif(this.factoryOptions.length == 1) {\r\n\t\t\tthis.factoryOptions[0].active = true;\r\n\t\t\treturn this.factoryOptions[0];\r\n\t\t} else if(this.factoryOptions.length > 1) {\r\n\t\t\tvar lowest = this.factoryOptions[0];\r\n\t\t\tfor (const factory of this.factoryOptions) {\r\n\t\t\t\tvar compare = lowest.getMaterialLevelCombined();\r\n\t\t\t\tif (factory.getMaterialLevelCombined() < compare) {\r\n\t\t\t\t\tlowest = factory;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlowest.active = true;\r\n\t\t\treturn lowest;\r\n\t\t}\r\n\t}\r\n\tpublic setActiveFactoryRecursiv(Material: string, newFactoryName: string) {\r\n\t\tif(this.Name == Material) {\r\n\t\t\tthis.setActiveFactory(newFactoryName);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(this.factoryOptions.length > 0) {\r\n\t\t\tfor (const factory of this.factoryOptions) {\r\n\t\t\t\tconsole.log(factory.id);\r\n\t\t\t\tfactory.checkMaterialList(Material, newFactoryName);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tpublic buildControl(panellevel: number) {\r\n\t\tthis.id = this.getId();\r\n\t\tthis.control = new Panel(this.Name.replace(/\\s/g, '') + this.game.getPanelId(), {\r\n\t\t\texpanded: false,\r\n\t\t\texpandable: true,\r\n\t\t\theaderText: `{View>/game/subs/${this.id}/Name}`\r\n\t\t});\r\n\t\tthis.control.addStyleClass(\"avlevel\" + panellevel);\r\n\t\tthis.game.deathZone.push(this.control);\r\n\r\n\t\tpanellevel++;\r\n\t\tvar factories = this.game.getFactoriesForProduct(this.Name);\r\n\t\ttry {\r\n\t\t\tfor (const factory of factories) {\r\n\t\t\t\tvar newFactory = new treeFactory(factory, this.game, this);\r\n\t\t\t\tthis.factoryOptions.push(newFactory);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.warn(\"No factory for \"+ this.Name);\r\n\t\t\t(this.control as Panel).setExpandable(false);\r\n\t\t\t(this.control as Panel).addStyleClass(\"dontShowContent\");\r\n\t\t}\r\n\t\tif (this.factoryOptions.length == 1) {\r\n\t\t\tthis.factoryOptions[0].buildControl(this.Level, panellevel);\r\n\t\t\t(this.control as Panel).addContent(this.factoryOptions[0].control);\r\n\t\t\t// used for binding /LaserHead/LaserHeadFactory/Glass/GlassManufacturer/Ore/Name\r\n\t\t\t//@ts-ignore\r\n\t\t\tthis[this.factoryOptions[0].Name.replace(/\\s/g, '')] = this.factoryOptions[0];\r\n\t\t\tthis.setFactoryActive();\r\n\t\t} else if(this.factoryOptions.length > 1) {\r\n\t\t\tvar newSelect = new Select(this.Name.replace(/\\s/g, '') + this.game.getPanelId(), {\r\n\t\t\t\tselectedItem: `View>/game/subs/${this.id}/activeChild`,\r\n\t\t\t\titems: {\r\n\t\t\t\t\tpath: `View>/game/subs/${this.id}/factoryOptions`,\r\n\t\t\t\t\ttemplate: new Item({\r\n\t\t\t\t\t\ttext: \"{View>Name}\",\r\n\t\t\t\t\t\tkey: \"{View>selectid}\"\r\n\t\t\t\t\t}),\r\n\t\t\t\t\ttemplateShareable: true\r\n\t\t\t\t},\r\n\t\t\t\tchange: this.game.that.selectFactory\r\n\t\t\t});\r\n\t\t\tthis.game.deathZone.push(newSelect);\r\n\t\t\tvar lowest = this.setFactoryActive();\r\n\t\t\tnewSelect.setSelectedKey(lowest.Name.replace(/\\s/g, ''));\r\n\r\n\t\t\tvar newButton = new Button(this.Name.replace(/\\s/g, '') + this.game.getPanelId(), {\r\n\t\t\t\ttext: `Apply to all {View>/game/subs/${this.id}/Name} facilities.`,\r\n\t\t\t\tpress: this.game.that.setBaseFactory\r\n\t\t\t}).addStyleClass(\"sapUiSmallMarginBegin\");\r\n\t\t\tthis.game.deathZone.push(newButton);\r\n\r\n\t\t\t(this.control as Panel).addContent(newSelect);\r\n\t\t\t(this.control as Panel).addContent(newButton);\r\n\t\t\t\r\n\t\t\tfor (var factory of this.factoryOptions) {\r\n\t\t\t\tfactory.buildControl(this.Level, panellevel);\r\n\t\t\t\t// used for binding /LaserHead/LaserHeadFactory/Glass/GlassManufacturer/Ore/Name\r\n\t\t\t\t//@ts-ignore\r\n\t\t\t\tthis[factory.Name.replace(/\\s/g, '')] = factory;\r\n\t\t\t\t(this.control as Panel).addContent(factory.control);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n/*\r\n.########....###.....######..########..#######..########..##....##\r\n.##.........##.##...##....##....##....##.....##.##.....##..##..##.\r\n.##........##...##..##..........##....##.....##.##.....##...####..\r\n.######...##.....##.##..........##....##.....##.########.....##...\r\n.##.......#########.##..........##....##.....##.##...##......##...\r\n.##.......##.....##.##....##....##....##.....##.##....##.....##...\r\n.##.......##.....##..######.....##.....#######..##.....##....##...\r\n*/\r\nclass treeFactory extends Factory {\r\n\trequiredProducts: treeGood[];\r\n\tid: string;\r\n\tselectid: string;\r\n\tcontrol: Control;\r\n\tactive: boolean;\r\n\tparent: treeGood;\r\n\tsubs: {[k: string]: treeGood};\r\n\tgame: factoryGame;\r\n\tconstructor(factory: Factory, game: factoryGame, parent: treeGood) {\r\n\t\tsuper(factory.Name,factory.ProductionCap,factory.Cost,factory.Products,factory.Materials);\r\n\r\n\t\tthis.parent = parent;\r\n\t\tthis.game = game;\r\n\t\tthis.selectid = factory.Name.replace(/\\s/g, '');\r\n\t\tthis.requiredProducts = [];\r\n\t\tthis.active = false;\r\n\t\tthis.subs = {};\r\n\t}\r\n\tpublic getId() {\r\n\t\treturn this.parent.getId() + \"/\" + this.Name.replace(/\\s/g, '');\r\n\t}\r\n\tpublic getMaterialLevelCombined(): int {\r\n\t\tvar result: int = 0;\r\n\t\tfor (const product of this.Materials) {\r\n\t\t\tresult += this.game.getProduct(product).Level;\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\tpublic getAllGoods(): treeGood[] {\r\n\t\tvar allGoods:treeGood[] = [];\r\n\t\tfor (const good of this.requiredProducts) {\r\n\t\t\tallGoods.push(good);\r\n\t\t\tallGoods = allGoods.concat(good.getSubGoods())\r\n\t\t}\r\n\t\treturn allGoods;\r\n\t}\r\n\tpublic getActiveSubs(): string[] {\r\n\t\tvar facs:string[] = [];\r\n\t\tfor (const requiredProduct of this.requiredProducts) {\r\n\t\t\tfacs = facs.concat(requiredProduct.getActiveFactory());\r\n\t\t}\r\n\t\treturn facs\r\n\t}\r\n\tpublic checkMaterialList(Material: string, newFactoryName: string) {\r\n\t\tif (this.Products.indexOf(Material) >= 0) this.active = (this.Name == newFactoryName);\r\n\t\tfor (const requiredProduct of this.requiredProducts) {\r\n\t\t\tif(requiredProduct.Name == Material) {\r\n\t\t\t\trequiredProduct.setActiveFactory(newFactoryName);\r\n\t\t\t}\r\n\t\t\trequiredProduct.setActiveFactoryRecursiv(Material, newFactoryName);\r\n\t\t}\r\n\t}\r\n\tpublic buildControl(goodLvl: number, panellevel: number) {\r\n\t\tthis.id = this.getId();\r\n\t\tif (goodLvl == 0) {\r\n\t\t\tthis.control = new Title(this.Name.replace(/\\s/g, '') + this.game.getPanelId(), {\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\t// bool from binding\r\n\t\t\t\t//@ts-ignore\r\n\t\t\t\tvisible: `{View>/game/subs/${this.id}/active}`,\r\n\t\t\t\ttext: `{View>/game/subs/${this.id}/Name}`\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.control = new Panel(this.Name.replace(/\\s/g, '') + this.game.getPanelId(), {\r\n\t\t\t\texpanded: true,\r\n\t\t\t\texpandable: true,\r\n\t\t\t\t// bool from binding\r\n\t\t\t\t//@ts-ignore\r\n\t\t\t\tvisible: `{View>/game/subs/${this.id}/active}`,\r\n\t\t\t\theaderText: `{View>/game/subs/${this.id}/Name}`\r\n\t\t\t});\r\n\t\t\tvar mats = this.game.getMaterialsForFactory(this.Name);\r\n\t\t\tfor (const mat of mats) {\r\n\t\t\t\tvar newMat = new treeGood(mat, this.game, this);\r\n\t\t\t\tthis.requiredProducts.push(newMat)\r\n\t\t\t}\r\n\t\t\tfor (var reqMaterial of this.requiredProducts) {\r\n\t\t\t\treqMaterial.buildControl(panellevel);\r\n\t\t\t\t(this.control as Panel).addContent(reqMaterial.control);\r\n\t\t\t\t// used for binding /LaserHead/LaserHeadFactory/Glass/GlassManufacturer/Ore/Name\r\n\t\t\t\t//@ts-ignore\r\n\t\t\t\tthis[reqMaterial.Name.replace(/\\s/g, '')] = reqMaterial;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.game.deathZone.push(this.control);\r\n\t}\r\n}\r\n/*\r\n..######......###....##.....##.########\r\n.##....##....##.##...###...###.##......\r\n.##.........##...##..####.####.##......\r\n.##...####.##.....##.##.###.##.######..\r\n.##....##..#########.##.....##.##......\r\n.##....##..##.....##.##.....##.##......\r\n..######...##.....##.##.....##.########\r\n*/\r\nclass factoryGame extends Game {\r\n\tprivate panelCount: number;\r\n\tthat: ProductionLine;\r\n\tavailableGoods: string[];\r\n\treqFactories: treeFactory[];\r\n\tprodTree: treeGood[];\r\n\tproducts: Product[];\r\n\ttargetFactory: Factory;\r\n\tdeathZone: Control[];\r\n\tsubs: {[k: string]: treeGood};\r\n\r\n\tconstructor(goods: Product[], factories: Factory[]) {\r\n\t\tsuper(goods, factories);\r\n\t\tthis.deathZone = [];\r\n\t\tthis.availableGoods = [];\r\n\t\tthis.reqFactories = [];\r\n\t\tthis.prodTree = [];\r\n\t\tthis.products = [];\r\n\t\tthis.panelCount = 0;\r\n\t\tthis.subs = {};\r\n\t}\r\n\tpublic setTargetFactory(factoryName: string): {[k: string]: treeGood} {\r\n\t\tthis.targetFactory = this.getFactory(factoryName);\r\n\t\tthis.products = this.getMaterialsForFactory(this.targetFactory.Name);\r\n\r\n\t\tfor (const good of this.products) {\r\n\t\t\tvar newGood = new treeGood(good, this, this);\r\n\t\t\tthis.prodTree.push(newGood);\r\n\t\t}\r\n\r\n\t\t// to get a Binding /tree/id/attribut \r\n\t\t// the array need to be changed ot objects \r\n\t\tfor (var treeitem of this.prodTree) {\r\n\t\t\ttreeitem.buildControl(0);\r\n\t\t\tthis.subs[treeitem.id] = treeitem;\r\n\t\t}\r\n\r\n\t\treturn this.subs;\r\n\t}\r\n\tpublic clearDeathZone(): void {\r\n\t\tfor (const control of this.deathZone) {\r\n\t\t\tcontrol.destroy();\r\n\t\t}\r\n\t}\r\n\tpublic getActiveFactories(): string[] {\r\n\t\tvar facs:string[] = [];\r\n\t\tfor (var baseitem of this.prodTree) {\r\n\t\t\tfacs = facs.concat(baseitem.getActiveFactory())\r\n\t\t}\r\n\t\t// only Uniques\r\n\t\tfacs = [...new Set(facs)]\r\n\t\tfor (let index = facs.length - 1; index > -1; index--) {\r\n\t\t\tconst element = facs[index];\r\n\t\t\tif (element == undefined) facs.splice(index, 1);\r\n\t\t}\r\n\t\treturn facs;\r\n\t}\r\n\tpublic getExportTree(): any {\r\n\t\tvar exportTree = {};\r\n\t\tfor (var baseitem of this.prodTree) {\r\n\t\t\t//@ts-ignore\r\n\t\t\texportTree[baseitem.Name] = {\r\n\t\t\t\tName: baseitem.Name,\r\n\t\t\t\tFactory: baseitem.getExportFactory()\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn exportTree;\r\n\t}\r\n\tpublic setBaseFactory(Material:string, newFactoryName:string) {\r\n\t\tfor (var name in this.subs) {\r\n\t\t\tthis.subs[name].setActiveFactoryRecursiv(Material, newFactoryName);\r\n\t\t}\r\n\t}\r\n\tpublic setAvailableGood(Name: string) {\r\n\t\tthis.availableGoods.push(Name);\r\n\t\tvar allGoods:treeGood[] = [];\r\n\t\tfor (const good of this.prodTree) {\r\n\t\t\tallGoods.push(good);\r\n\t\t\tallGoods = allGoods.concat(good.getSubGoods());\r\n\t\t}\r\n\t\t//console.log(allGoods);\r\n\t\tfor (const good of allGoods) {\r\n\t\t\tif (good.Name == Name) {\r\n\t\t\t\tgood.control.addStyleClass(\"dontShowContent\");\r\n\t\t\t\t(good.control as Panel).setExpandable(false);\r\n\t\t\t\tfor (const factory of good.factoryOptions) {\r\n\t\t\t\t\tfactory.active = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\tpublic getPanelId():number {\r\n\t\tthis.panelCount++;\r\n\t\treturn this.panelCount\r\n\t}\r\n}\r\n/*\r\n..######...#######..##....##.########.########...#######..##.......##.......########.########.\r\n.##....##.##.....##.###...##....##....##.....##.##.....##.##.......##.......##.......##.....##\r\n.##.......##.....##.####..##....##....##.....##.##.....##.##.......##.......##.......##.....##\r\n.##.......##.....##.##.##.##....##....########..##.....##.##.......##.......######...########.\r\n.##.......##.....##.##..####....##....##...##...##.....##.##.......##.......##.......##...##..\r\n.##....##.##.....##.##...###....##....##....##..##.....##.##.......##.......##.......##....##.\r\n..######...#######..##....##....##....##.....##..#######..########.########.########.##.....##\r\n*/\r\nexport default class ProductionLine extends BaseController {\r\n\tprivate formatter = formatter;\r\n\tprivate selectDialog: SelectDialog;\r\n\tprivate importDialog: Dialog;\r\n\tpublic onInit(): void {\r\n\t\tvar Model = new JSONModel();\r\n\t\tModel.setData({\r\n\t\t\tTargetFactory: \"\",\r\n\t\t\tproducts: [],\r\n\t\t\t//mainFactory: {},\r\n\t\t\t//deathZone: [],\r\n\t\t\t//tree: [],\r\n\t\t\t//ownedFactories: [],\r\n\t\t\t//requiredFactories: []\r\n\t\t});\r\n\t\tthis.getView().setModel(Model, \"View\");\r\n\t\tthis.getRouter().getRoute(\"productionLine\").attachPatternMatched(this.onPatternMatched, this);\r\n\r\n\t\tvar inputF = this.byId(\"targetFactoryInput\") as Input;\r\n\t\tinputF.setFilterFunction(function (sTerm: string, oItem:SuggestionItem) {\r\n\t\t\treturn oItem.getText().match(new RegExp(\"^\"+sTerm, \"i\"));\r\n\t\t});\r\n\t}\r\n\t/*\r\n\t.########..########...#######..########..........##.......####.##....##.########\r\n\t.##.....##.##.....##.##.....##.##.....##.........##........##..###...##.##......\r\n\t.##.....##.##.....##.##.....##.##.....##.........##........##..####..##.##......\r\n\t.########..########..##.....##.##.....##.#######.##........##..##.##.##.######..\r\n\t.##........##...##...##.....##.##.....##.........##........##..##..####.##......\r\n\t.##........##....##..##.....##.##.....##.........##........##..##...###.##......\r\n\t.##........##.....##..#######..########..........########.####.##....##.########\r\n\t*/\r\n\tpublic async generateProductionLine(event: Event): Promise<void> {\r\n\t\tvar that = this;\r\n\t\tvar view = this.getView();\r\n\t\tvar viewModel = this.getModel(\"View\") as JSONModel;\r\n\t\tvar game:factoryGame;\r\n\t\ttry {\r\n\t\t\tgame = viewModel.getProperty(\"/game\");\r\n\t\t\tif (game) {\r\n\t\t\t\tgame.clearDeathZone();\r\n\t\t\t}\r\n\t\t\t// Clear\r\n\t\t\tgame = new factoryGame(this.getModel(\"GoodModel\").getProperty(\"/Goods\"), this.getModel(\"FactorieModel\").getProperty(\"/Factories\"));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t\tgame.that = that;\r\n\r\n\t\tvar TargetFactoryName = (view.byId(\"targetFactoryInput\") as Input).getValue();\r\n\t\tviewModel.setProperty(\"/products\", game.getProductsFromFactory(TargetFactoryName));\r\n\t\tgame.setTargetFactory(TargetFactoryName);\r\n\t\tfor (var name in game.subs) {\r\n\t\t\t(that.byId(\"DetailedProdList\") as VBox).addItem(game.subs[name].control);\r\n\t\t\t\r\n\t\t}\r\n\t\t//console.log(xtree);\r\n\t\t\r\n\t\tviewModel.setProperty(\"/game\", game);\r\n\t\tviewModel.setProperty(\"/requiredFactories\", game.getActiveFactories().sort());\r\n\t}\r\n\t/*\r\n\t..######..##.....##....###....##....##..######...########\r\n\t.##....##.##.....##...##.##...###...##.##....##..##......\r\n\t.##.......##.....##..##...##..####..##.##........##......\r\n\t.##.......#########.##.....##.##.##.##.##...####.######..\r\n\t.##.......##.....##.#########.##..####.##....##..##......\r\n\t.##....##.##.....##.##.....##.##...###.##....##..##......\r\n\t..######..##.....##.##.....##.##....##..######...########\r\n\t*/\r\n\tpublic selectFactory(event: Event): void {\r\n\t\tvar select = event.getSource() as Select;\r\n\t\t// getParameters() returns a undefined Object\r\n\t\t//@ts-ignore\r\n\t\tvar item = event.getParameters().selectedItem as Item;\r\n\t\tvar viewModel = this.getModel(\"View\") as JSONModel;\r\n\t\tvar path = select.getBindingPath(\"items\"); // > game/subs/[Material]/.../factoryOptions\r\n\t\tvar factoryOptions = viewModel.getProperty(path);\r\n\t\tfor (var i = 0; i < factoryOptions.length; i++) {\r\n\t\t\tviewModel.setProperty(path+`/${i}/active`, false);\r\n\r\n\t\t\tif (viewModel.getProperty(path+`/${i}/Name`) == item.getText()) {\r\n\t\t\t\tviewModel.setProperty(path+`/${i}/active`, true);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar game = viewModel.getProperty(\"/game\");\r\n\t\tviewModel.setProperty(\"/requiredFactories\", game.getActiveFactories().sort());\r\n\t}\r\n\t/*\r\n\t..######..##.....##....###....##....##..######...########............###....##.......##......\r\n\t.##....##.##.....##...##.##...###...##.##....##..##.................##.##...##.......##......\r\n\t.##.......##.....##..##...##..####..##.##........##................##...##..##.......##......\r\n\t.##.......#########.##.....##.##.##.##.##...####.######...#######.##.....##.##.......##......\r\n\t.##.......##.....##.#########.##..####.##....##..##...............#########.##.......##......\r\n\t.##....##.##.....##.##.....##.##...###.##....##..##...............##.....##.##.......##......\r\n\t..######..##.....##.##.....##.##....##..######...########.........##.....##.########.########\r\n\t*/\r\n\tpublic setBaseFactory(event: Event): void {\r\n\t\tvar viewModel = this.getModel(\"View\") as JSONModel;\t\t\r\n\t\tvar game = viewModel.getProperty(\"/game\") as factoryGame;\r\n\t\tvar button = event.getSource() as Button;\r\n\t\tvar path = button.getBindingPath(\"text\");\r\n\r\n\t\tvar Material = viewModel.getProperty(path);\r\n\t\tvar newFactory = viewModel.getProperty(path.substring(0, path.lastIndexOf(\"/\")));\r\n\t\t// first control is the select\r\n\t\tnewFactory = ((newFactory.control.getContent()[0] as Select).getSelectedItem() as Item).getText();\r\n\t\tconsole.log(Material, newFactory);\r\n\t\tgame.setBaseFactory(Material, newFactory);\r\n\t\t\r\n\t\tviewModel.setProperty(\"/game\", game);\r\n\t\tviewModel.setProperty(\"/requiredFactories\", game.getActiveFactories().sort());\r\n\t}\r\n\t/*\r\n\t.########..####....###....##........#######...######..\r\n\t.##.....##..##....##.##...##.......##.....##.##....##.\r\n\t.##.....##..##...##...##..##.......##.....##.##.......\r\n\t.##.....##..##..##.....##.##.......##.....##.##...####\r\n\t.##.....##..##..#########.##.......##.....##.##....##.\r\n\t.##.....##..##..##.....##.##.......##.....##.##....##.\r\n\t.########..####.##.....##.########..#######...######..\r\n\t*/\r\n\tpublic addAvailableGood(event: Event) {\r\n\t\tvar oView = this.getView();\r\n\t\tvar that = this;\r\n\t\ttry {\r\n\t\t\t(that.selectDialog as SelectDialog).open(\"\")\r\n\t\t} catch (error) {\r\n\t\t\tFragment.load({\r\n\t\t\t\tid: \"speccalDialog\",\r\n\t\t\t\tname: \"de.henloh.prodts.view.Dialog\",\r\n\t\t\t\tcontroller: this\r\n\t\t\t}).then(function (dialog: any){\r\n\t\t\t\t(dialog as SelectDialog).setModel(oView.getModel(\"GoodModel\"));\r\n\t\t\t\t(dialog as SelectDialog).open(\"\");\r\n\t\t\t\tthat.selectDialog = dialog;\r\n\t\t\t}.bind(this));\r\n\t\t}\r\n\t}\r\n\tpublic onDialogClose(event: Event) {\r\n\t\tvar aContexts = event.getParameter(\"selectedContexts\");\r\n\t\tvar viewModel = this.getModel(\"View\") as JSONModel;\t\t\r\n\t\tvar game = viewModel.getProperty(\"/game\") as factoryGame;\r\n\t\tif (aContexts && aContexts.length) {\r\n\t\t\taContexts.map(function (oContext: any) { \r\n\t\t\t\ttry {\r\n\t\t\t\t\tgame.setAvailableGood(oContext.getObject().Name)\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.warn(error);\r\n\t\t\t\t} \r\n\t\t\t})\t\r\n\t\t\tviewModel.setProperty(\"/availableGoods\", game.availableGoods);\r\n\t\t\tviewModel.setProperty(\"/game\", game);\r\n\t\t}\r\n\t\t// Binding is not definied. Filtering is possible here\r\n\t\t//@ts-ignore \r\n\t\t(event.getSource() as SelectDialog).getBinding(\"items\").filter([]);\r\n\t\tviewModel.setProperty(\"/requiredFactories\", game.getActiveFactories().sort());\r\n\t}\r\n\tpublic onSearch(event: Event) {\r\n\t\tvar sValue = event.getParameter(\"value\");\r\n\t\tvar oFilter = new Filter(\"Name\", FilterOperator.Contains, sValue);\r\n\t\tvar oBinding = event.getParameter(\"itemsBinding\");\r\n\t\toBinding.filter([oFilter]);\r\n\t}\r\n\t/*\r\n\t.####.##.....##.########.......####.......########.##.....##.########...#######..########..########\r\n\t..##..###...###.##.....##.....##..##......##........##...##..##.....##.##.....##.##.....##....##...\r\n\t..##..####.####.##.....##......####.......##.........##.##...##.....##.##.....##.##.....##....##...\r\n\t..##..##.###.##.########......####........######......###....########..##.....##.########.....##...\r\n\t..##..##.....##.##...........##..##.##....##.........##.##...##........##.....##.##...##......##...\r\n\t..##..##.....##.##...........##...##......##........##...##..##........##.....##.##....##.....##...\r\n\t.####.##.....##.##............####..##....########.##.....##.##.........#######..##.....##....##...\r\n\t*/\r\n\tpublic handleDownloadPress(): void {\t\r\n\t\t// Convert the JSON data to a string\r\n\t\tvar viewModel = this.getModel(\"View\") as JSONModel;\r\n\t\tvar game = viewModel.getProperty(\"/game\") as factoryGame;\r\n\t\tvar data:any = {\r\n\t\t\ttargetFactory:     viewModel.getProperty(\"/TargetFactory\"),\r\n\t\t\tavailableGoods:    viewModel.getProperty(\"/availableGoods\"),\r\n\t\t\trequiredFactories: viewModel.getProperty(\"/requiredFactories\"),\r\n\t\t\tproducts:          viewModel.getProperty(\"/products\"),\r\n\t\t\tbasicTree: \t\t   game.getExportTree()\r\n\t\t};\r\n\t\tvar jsonString = JSON.stringify(data);\r\n\t\r\n\t\t// Use the FileSaver.js library to trigger a download\r\n\t\tFile.save(jsonString, \"data\", \"json\", \"application/json\", \"utf-8\");\r\n\t}\r\n\tpublic openUploadDialog(event: Event) {\r\n\t\t//var oView = this.getView();\r\n\t\tvar that = this;\r\n\t\ttry {\r\n\t\t\t(that.importDialog as Dialog).open()\r\n\t\t} catch (error) {\r\n\t\t\tFragment.load({\r\n\t\t\t\tid: \"speccalDialog2\",\r\n\t\t\t\tname: \"de.henloh.prodts.view.Import\",\r\n\t\t\t\tcontroller: this\r\n\t\t\t}).then(function (dialog: any){\r\n\t\t\t\t//(dialog as Dialog).setModel(oView.getModel(\"GoodModel\"));\r\n\t\t\t\t(dialog as Dialog).open();\r\n\t\t\t\tthat.importDialog = dialog;\r\n\t\t\t}.bind(this));\r\n\t\t}\r\n\t}\r\n\tpublic closeDialog(event: Event): void { \r\n\t\tthis.importDialog.close()\r\n\t}\r\n\tpublic handleUploadPress(event: Event): void {\r\n\t\t// Get the selected file from the input element\r\n\t\tvar file = event.getParameters().item.getFileObject();\r\n\t\tvar that = this;\r\n\t\tvar reader = new FileReader();\r\n\t\tvar viewModel = this.getModel(\"View\") as JSONModel;\r\n\r\n\t\t// Read the file as text\r\n\t\treader.readAsText(file);\r\n\r\n\t\t// When the file has been read, convert it to a JavaScript object\r\n\t\treader.onload = function() {\r\n\t\t\tvar data = JSON.parse(reader.result as string);\r\n\t\t\t//console.log(data);\r\n\t\t\ttry {\r\n\t\t\t\tviewModel.setProperty(\"/TargetFactory\", data.targetFactory);\r\n\t\t\t\tviewModel.setProperty(\"/availableGoods\", data.availableGoods);\r\n\t\t\t\tviewModel.setProperty(\"/requiredFactories\", data.requiredFactories);\r\n\t\t\t\tviewModel.setProperty(\"/products\", data.products);\r\n\r\n\t\t\t\tvar basicTree: any = data.basicTree;\r\n\r\n\t\t\t\tvar game:factoryGame;\r\n\t\t\t\tgame = viewModel.getProperty(\"/game\");\r\n\t\t\t\tif (game) {\r\n\t\t\t\t\tgame.clearDeathZone();\r\n\t\t\t\t}\r\n\t\t\t\t// Clear\r\n\t\t\t\tgame = new factoryGame(that.getModel(\"GoodModel\").getProperty(\"/Goods\"), that.getModel(\"FactorieModel\").getProperty(\"/Factories\"));\r\n\r\n\t\t\t\tgame.that = that;\r\n\t\t\t\tgame.setTargetFactory(data.targetFactory);\r\n\r\n\t\t\t\tfor (var name in game.subs) {\r\n\t\t\t\t\t(that.byId(\"DetailedProdList\") as VBox).addItem(game.subs[name].control);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tviewModel.setProperty(\"/game\", game);\r\n\r\n\t\t\t} catch (error) {\r\n\t\t\t\tMessageBox.show(\"Uploaded data does not contain a production-tree.\")\r\n\t\t\t}\r\n\t\t\t// Do something with the JavaScript object\r\n\t\t}\r\n\t}\r\n\tpublic onPatternMatched(event: Event): void {\r\n\t\t \r\n\t}\r\n}\r\n"],"mappings":"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"}