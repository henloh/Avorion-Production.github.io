{"version":3,"file":"Permutation.controller.js","names":["BaseController","formatter","Permutation","onInit","Model","JSONModel","document","title","setData","text","getView","setModel","getRouter","getRoute","attachPatternMatched","onPatternMatched","event","clearData","model","getModel","setProperty","downloadCSV","csvContent","getProperty","hiddenElement","createElement","href","encodeURI","target","download","click","generateCSV","data","Final","Obj","JSON","parse","column","columns","dataKeys","Object","keys","rowCount","entry","length","permutatedData","addPart","permutations","options","result","index","permutation","partIndex","resultpart","remainingOptions","stringify","optionData","dataOptionsIndex","permutationOption","optionName","name","columnFillerIndex","columnFillerPartIndex","parts","columnPart","field","hasVoids","row","checkPermutation","checkPermutationText","push","basepermutations","baseoptions","element","fieldname","rows","error","console"],"sources":["../../src/controller/Permutation.controller.ts"],"sourcesContent":["import BaseController from \"./BaseController\";\r\nimport formatter from \"../model/formatter\";\r\nimport Event from \"sap/ui/base/Event\";\r\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\r\nimport Page from \"sap/m/Page\";\r\n\r\n/**\r\n * @namespace de.henloh.prodts.controller\r\n */\r\nexport default class Permutation extends BaseController {\r\n\tprivate formatter = formatter;\r\n\r\n\tpublic onInit(): void {\r\n\t\tvar Model = new JSONModel();\r\n\t\tdocument.title = \"Permutation\";\r\n\t\tModel.setData({text: \"\"});\r\n\t\tthis.getView().setModel(Model, \"View\");\r\n\t\tthis.getRouter().getRoute(\"main\").attachPatternMatched(this.onPatternMatched, this);\r\n\t}\r\n\tpublic onPatternMatched(event: Event): void {\r\n\r\n\t}\r\n\tpublic clearData(event: Event): void {\r\n\t\tvar model = this.getView().getModel(\"View\") as JSONModel;\r\n\t\tmodel.setProperty(\"/Final\", \" \")\r\n\t\tmodel.setProperty(\"/text\", \" \");\r\n\t}\r\n\tpublic downloadCSV(event: Event): void {\r\n\t\tvar model = this.getView().getModel(\"View\") as JSONModel;\r\n\t\tvar csvContent = model.getProperty(\"/Final\");\r\n\t\t\r\n\t\tvar hiddenElement = document.createElement('a');  \r\n\t\thiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csvContent);  \r\n\t\thiddenElement.target = '_blank';  \r\n\t\t  \r\n\t\t//provide the name for the CSV file to be downloaded  \r\n\t\thiddenElement.download = 'generiert.csv';  \r\n\t\thiddenElement.click();\r\n\t}\r\n\tpublic generateCSV(event: Event): void {\r\n\t\tvar model = this.getView().getModel(\"View\") as JSONModel;\r\n\t\tvar data = model.getProperty(\"/text\");\r\n\t\ttry {\r\n\t\t\t// Head\r\n\t\t\tvar Final = \"\";\r\n\t\t\tvar Obj = JSON.parse(data);\r\n\t\t\tfor (const column of Obj.columns) {\r\n\t\t\t\tFinal += column.title + \";\";\r\n\t\t\t}\r\n\t\t\tFinal += \"\\n\";\r\n\t\t\t// Rows\r\n\t\t\tvar dataKeys: string[] = Object.keys(Obj.data);\r\n\t\t\tvar rowCount: int = 0;\r\n\t\t\tfor (const entry of dataKeys) {\r\n\t\t\t\trowCount == 0 ? rowCount = Obj.data[entry].length : rowCount *= Obj.data[entry].length;\r\n\t\t\t}\r\n\r\n\t\t\t// only permutate once\r\n\t\t\tvar permutatedData:string[] = [];\r\n\r\n\t\t\tvar addPart = function(permutations: any, options: any, result: any) {\r\n\t\t\t\tfor (let index = 0; index < permutations.length; index++) {\r\n\t\t\t\t\tvar permutation = permutations[index];\r\n\t\t\t\t\t//console.log(permutations);\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (let partIndex = 0; partIndex < permutation.length; partIndex++) {\r\n\t\t\t\t\t\tvar resultpart = permutation[partIndex];\r\n\t\t\t\t\t\tvar remainingOptions = JSON.parse(JSON.stringify(options));\r\n\t\t\t\t\t\t// console.log(resultpart);\r\n\t\t\t\t\t\tif (resultpart === null) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// console.log(\"optionName\", optionName);\r\n\t\t\t\t\t\t\tvar optionData = remainingOptions[index][partIndex].data;\r\n\t\t\t\t\t\t\t// console.log(\"optionData\", optionData);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfor (let dataOptionsIndex = 0; dataOptionsIndex < optionData.length; dataOptionsIndex++) {\r\n\t\t\t\t\t\t\t\tvar permutationOption = JSON.parse(JSON.stringify(permutations));\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar optionName = options[index][partIndex].name;\r\n\r\n\t\t\t\t\t\t\t\tfor (let columnFillerIndex = 0; columnFillerIndex < Obj.columns.length; columnFillerIndex++) { \r\n\t\t\t\t\t\t\t\t\tfor (let columnFillerPartIndex = 0; columnFillerPartIndex < Obj.columns[columnFillerIndex].parts.length; columnFillerPartIndex++) { \r\n\t\t\t\t\t\t\t\t\t\tvar columnPart =  Obj.columns[columnFillerIndex].parts[columnFillerPartIndex];\r\n\t\t\t\t\t\t\t\t\t\tvar field = Obj.columns[columnFillerIndex].parts[columnFillerPartIndex][1];\r\n\t\t\t\t\t\t\t\t\t\tif (columnPart[0] === optionName && permutationOption[columnFillerIndex][columnFillerPartIndex] === null) {\r\n\t\t\t\t\t\t\t\t\t\t\t// last level of data\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tpermutationOption[columnFillerIndex][columnFillerPartIndex] = optionData[dataOptionsIndex][field];\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// check if all filled then add to result.\r\n\t\t\t\t\t\t\t\tvar hasVoids = false;\r\n\t\t\t\t\t\t\t\tvar row = \"\";\r\n\t\t\t\t\t\t\t\tfor (const checkPermutation of permutationOption) {\r\n\t\t\t\t\t\t\t\t\tfor (const checkPermutationText of checkPermutation) {\r\n\t\t\t\t\t\t\t\t\t\tif (checkPermutationText === null) {\r\n\t\t\t\t\t\t\t\t\t\t\thasVoids = true;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\trow += checkPermutationText;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(hasVoids) break;\r\n\t\t\t\t\t\t\t\t\trow += \";\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\trow += \"\\n\";\r\n\t\t\t\t\t\t\t\tif (!hasVoids) {\r\n\t\t\t\t\t\t\t\t\tresult.push( row );\r\n\t\t\t\t\t\t\t\t\tpermutatedData.push(optionName);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// remove done perms and call again\r\n\t\t\t\t\t\t\t\tif (dataOptionsIndex === optionData.length -1) {\r\n\t\t\t\t\t\t\t\t\t//remainingOptions[index][partIndex] = null;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t//console.log(JSON.stringify(remainingOptions));\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\taddPart(permutationOption, remainingOptions, result)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar basepermutations = [];\r\n\t\t\tvar baseoptions = [];\r\n\t\t\tfor (let index = 0; index < Obj.columns.length; index++) {\r\n\r\n\t\t\t\tbasepermutations.push([]);\r\n\t\t\t\tbaseoptions.push([]);\r\n\r\n\t\t\t\tfor (let partIndex = 0; partIndex < Obj.columns[index].parts.length; partIndex++) {\r\n\t\t\t\t\tconst element = Obj.columns[index].parts[partIndex];\r\n\t\t\t\t\t// element.length = how deep\r\n\t\t\t\t\t// console.log(element);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (element.length === 1) {\r\n\t\t\t\t\t\t// no baseoptions -> direct filling\r\n\t\t\t\t\t\tbasepermutations[index].push(Obj.data[Obj.columns[index].parts[partIndex][0]][0]);\r\n\t\t\t\t\t\tbaseoptions[index].push(null);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t//console.log(\"option added\", element, dataKeys[Obj.columns[index].parts[partIndex][0]]);\r\n\t\t\t\t\t\tvar fieldname = Obj.columns[index].parts[partIndex][0];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbasepermutations[index].push(null);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbaseoptions[index].push({\r\n\t\t\t\t\t\t\tname: fieldname,\r\n\t\t\t\t\t\t\tdata: Obj.data[fieldname]\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// console.log(JSON.stringify(baseoptions));\r\n\t\t\t\r\n\t\t\t// console.log(basepermutations, baseoptions);\r\n\t\t\t// basepermutations: [ [\"string\"], [null],   [\"string\"] ]\r\n\t\t\t//      baseoptions: [ [null],     [object], [null] ]\r\n\t\t\tvar rows = addPart(basepermutations, baseoptions, []);\r\n\t\t\tfor (const row of rows) {\r\n\t\t\t\tFinal += row;\r\n\t\t\t}\r\n\r\n\t\t\tmodel.setProperty(\"/rowCount\", rowCount);\r\n\t\t\t\r\n\t\t\tmodel.setProperty(\"/Final\", Final);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n}\r\n"],"mappings":"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"}