{"version":3,"file":"ProductionLine-dbg.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","formatter","__formatter","Factory","___Types","Game","Product","treeGood","constructor","good","game","parent","Name","Dangerous","Illegal","AvgPrice","Level","Customers","Manufacturer","factoryOptions","subs","getId","replace","getActiveFactory","facs","factory","active","concat","getActiveSubs","indexOf","push","getExportFactory","result","requiredProducts","product","getSubGoods","getAllGoods","setActiveFactory","length","select","control","getContent","setSelectedKey","setFactoryActive","lowest","compare","getMaterialLevelCombined","setActiveFactoryRecursiv","Material","newFactoryName","checkMaterialList","buildControl","panellevel","id","Panel","getPanelId","expanded","expandable","headerText","addStyleClass","deathZone","factories","getFactoriesForProduct","newFactory","treeFactory","error","console","warn","setExpandable","addContent","newSelect","Select","selectedItem","items","path","template","Item","text","key","templateShareable","change","that","selectFactory","newButton","Button","press","setBaseFactory","ProductionCap","Cost","Products","Materials","selectid","getProduct","allGoods","requiredProduct","goodLvl","Title","width","visible","mats","getMaterialsForFactory","mat","newMat","reqMaterial","factoryGame","goods","availableGoods","reqFactories","prodTree","products","panelCount","setTargetFactory","factoryName","targetFactory","getFactory","newGood","treeitem","clearDeathZone","destroy","getActiveFactories","baseitem","Set","index","element","undefined","splice","getExportTree","exportTree","name","setAvailableGood","ProductionLine","onInit","Model","JSONModel","setData","TargetFactory","getView","setModel","getRouter","getRoute","attachPatternMatched","onPatternMatched","inputF","byId","setFilterFunction","sTerm","oItem","getText","match","RegExp","generateProductionLine","event","view","viewModel","getModel","getProperty","TargetFactoryName","getValue","setProperty","getProductsFromFactory","addItem","sort","getSource","item","getParameters","getBindingPath","i","button","substring","lastIndexOf","getSelectedItem","addAvailableGood","oView","selectDialog","open","Fragment","load","controller","then","dialog","bind","onDialogClose","aContexts","getParameter","map","oContext","getObject","getBinding","filter","onSearch","sValue","oFilter","Filter","FilterOperator","Contains","oBinding","handleDownloadPress","data","requiredFactories","basicTree","jsonString","JSON","stringify","File","save","openUploadDialog","importDialog","closeDialog","close","handleUploadPress","file","getFileObject","reader","FileReader","readAsText","onload","parse","MessageBox","show"],"sources":["../../src/controller/ProductionLine.controller.ts"],"sourcesContent":["import MessageBox from \"sap/m/MessageBox\";\r\nimport BaseController from \"./BaseController\";\r\nimport formatter from \"../model/formatter\";\r\nimport Event from \"sap/ui/base/Event\";\r\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\r\nimport Input from \"sap/m/Input\";\r\nimport SuggestionItem from \"sap/m/SuggestionItem\";\r\nimport { Factory, Game, Product } from \"./Types\";\r\nimport VBox from \"sap/m/VBox\";\r\nimport Control from \"sap/ui/core/Control\";\r\nimport Panel from \"sap/m/Panel\";\r\nimport Select from \"sap/m/Select\";\r\nimport Item from \"sap/ui/core/Item\";\r\nimport Title from \"sap/m/Title\";\r\nimport Button from \"sap/m/Button\";\r\nimport Fragment from \"sap/ui/core/Fragment\";\r\nimport SelectDialog from \"sap/m/SelectDialog\";\r\nimport Filter from \"sap/ui/model/Filter\";\r\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\r\nimport File from \"sap/ui/core/util/File\";\r\nimport Dialog from \"sap/m/Dialog\";\r\n\r\n/**\r\n * @namespace de.henloh.prodts.controller\r\n */\r\n/*\r\n.########..########...#######..########..##.....##..######..########\r\n.##.....##.##.....##.##.....##.##.....##.##.....##.##....##....##...\r\n.##.....##.##.....##.##.....##.##.....##.##.....##.##..........##...\r\n.########..########..##.....##.##.....##.##.....##.##..........##...\r\n.##........##...##...##.....##.##.....##.##.....##.##..........##...\r\n.##........##....##..##.....##.##.....##.##.....##.##....##....##...\r\n.##........##.....##..#######..########...#######...######.....##...\r\n*/\r\nclass treeGood extends Product {\r\n\tfactoryOptions: treeFactory[]; \r\n\tid: string;\r\n\tcontrol: Control;\r\n\tparent: object;\r\n\tsubs: {[k: string]: treeFactory};\r\n\tgame: factoryGame;\r\n\tconstructor(good: Product, game: factoryGame, parent: object) {\r\n\t\tsuper(good.Name, good.Dangerous, good.Illegal, good.AvgPrice, good.Level, good.Customers, good.Manufacturer);\r\n\r\n\t\tthis.parent = parent;\r\n\t\tthis.game = game;\r\n\t\tthis.factoryOptions = [];\r\n\t\tthis.subs = {};\r\n\t}\r\n\tpublic getId():string {\r\n\t\t// Parent ist entweder game oder factory\r\n\t\t//@ts-ignore\r\n\t\tif(this.parent.getId) {\r\n\t\t\t//@ts-ignore\r\n\t\t\treturn this.parent.getId() + \"/\" + this.Name.replace(/\\s/g, '');\r\n\t\t} else {\r\n\t\t\treturn this.Name.replace(/\\s/g, '');\r\n\t\t}\r\n\t}\r\n\tpublic getActiveFactory(): string[] {\r\n\t\tvar facs:string[] = []\r\n\t\tfor (const factory of this.factoryOptions) {\r\n\t\t\tif (factory.active) {\r\n\t\t\t\tfacs = facs.concat(factory.getActiveSubs());\r\n\t\t\t\tfacs.indexOf(factory.Name) === -1 ? facs.push(factory.Name) : null;\r\n\t\t\t\treturn facs;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tpublic getExportFactory(): any { \r\n\t\tvar result:any = {};\r\n\t\tfor (const factory of this.factoryOptions) {\r\n\t\t\tif (factory.active) {\r\n\t\t\t\tresult.Name = factory.Name;\r\n\t\t\t\tresult.requiredProducts = []\r\n\t\t\t\tfor (const product of factory.requiredProducts) {\r\n\t\t\t\t\tresult.requiredProducts.push({\r\n\t\t\t\t\t\tName: product.Name,\r\n\t\t\t\t\t\tFactory: product.getExportFactory()\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tpublic getSubGoods(): treeGood[] {\r\n\t\tvar result:treeGood[] = [];\r\n\t\tfor (const factory of this.factoryOptions) {\r\n\t\t\tresult = result.concat(factory.getAllGoods());\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tpublic setActiveFactory(Name: string) {\r\n\t\tif(!(this.factoryOptions.length > 0)) return;\r\n\t\tfor (const factory of this.factoryOptions) {\r\n\t\t\tfactory.active = false;\r\n\t\t\tif (factory.Name == Name) {\r\n\t\t\t\tfactory.active = true;\r\n\t\t\t\tif (this.factoryOptions.length > 1) {\r\n\t\t\t\t\t// first content is select\r\n\t\t\t\t\tvar select = (this.control as Panel).getContent()[0] as Select;\r\n\t\t\t\t\tselect.setSelectedKey(factory.Name.replace(/\\s/g, ''));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// initial build select one\r\n\tprivate setFactoryActive():treeFactory {\r\n\t\tif(this.factoryOptions.length == 1) {\r\n\t\t\tthis.factoryOptions[0].active = true;\r\n\t\t\treturn this.factoryOptions[0];\r\n\t\t} else if(this.factoryOptions.length > 1) {\r\n\t\t\tvar lowest = this.factoryOptions[0];\r\n\t\t\tfor (const factory of this.factoryOptions) {\r\n\t\t\t\tvar compare = lowest.getMaterialLevelCombined();\r\n\t\t\t\tif (factory.getMaterialLevelCombined() < compare) {\r\n\t\t\t\t\tlowest = factory;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlowest.active = true;\r\n\t\t\treturn lowest;\r\n\t\t}\r\n\t}\r\n\tpublic setActiveFactoryRecursiv(Material: string, newFactoryName: string) {\r\n\t\tif(this.Name == Material) {\r\n\t\t\tthis.setActiveFactory(newFactoryName);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(this.factoryOptions.length > 0) {\r\n\t\t\tfor (const factory of this.factoryOptions) {\r\n\t\t\t\t//console.log(factory.id);\r\n\t\t\t\tfactory.checkMaterialList(Material, newFactoryName);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tpublic buildControl(panellevel: number) {\r\n\t\tthis.id = this.getId();\r\n\t\tthis.control = new Panel(this.Name.replace(/\\s/g, '') + this.game.getPanelId(), {\r\n\t\t\texpanded: false,\r\n\t\t\texpandable: true,\r\n\t\t\theaderText: `{View>/game/subs/${this.id}/Name}`\r\n\t\t});\r\n\t\tthis.control.addStyleClass(\"avlevel\" + panellevel);\r\n\t\tthis.game.deathZone.push(this.control);\r\n\r\n\t\tpanellevel++;\r\n\t\tvar factories = this.game.getFactoriesForProduct(this.Name);\r\n\t\ttry {\r\n\t\t\tfor (const factory of factories) {\r\n\t\t\t\tvar newFactory = new treeFactory(factory, this.game, this);\r\n\t\t\t\tthis.factoryOptions.push(newFactory);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.warn(\"No factory for \"+ this.Name);\r\n\t\t\t(this.control as Panel).setExpandable(false);\r\n\t\t\t(this.control as Panel).addStyleClass(\"dontShowContent\");\r\n\t\t}\r\n\t\tif (this.factoryOptions.length == 1) {\r\n\t\t\tthis.factoryOptions[0].buildControl(this.Level, panellevel);\r\n\t\t\t(this.control as Panel).addContent(this.factoryOptions[0].control);\r\n\t\t\t// used for binding /LaserHead/LaserHeadFactory/Glass/GlassManufacturer/Ore/Name\r\n\t\t\t//@ts-ignore\r\n\t\t\tthis[this.factoryOptions[0].Name.replace(/\\s/g, '')] = this.factoryOptions[0];\r\n\t\t\tthis.setFactoryActive();\r\n\t\t} else if(this.factoryOptions.length > 1) {\r\n\t\t\tvar newSelect = new Select(this.Name.replace(/\\s/g, '') + this.game.getPanelId(), {\r\n\t\t\t\tselectedItem: `View>/game/subs/${this.id}/activeChild`,\r\n\t\t\t\titems: {\r\n\t\t\t\t\tpath: `View>/game/subs/${this.id}/factoryOptions`,\r\n\t\t\t\t\ttemplate: new Item({\r\n\t\t\t\t\t\ttext: \"{View>Name}\",\r\n\t\t\t\t\t\tkey: \"{View>selectid}\"\r\n\t\t\t\t\t}),\r\n\t\t\t\t\ttemplateShareable: true\r\n\t\t\t\t},\r\n\t\t\t\tchange: this.game.that.selectFactory\r\n\t\t\t});\r\n\t\t\tthis.game.deathZone.push(newSelect);\r\n\t\t\tvar lowest = this.setFactoryActive();\r\n\t\t\tnewSelect.setSelectedKey(lowest.Name.replace(/\\s/g, ''));\r\n\r\n\t\t\tvar newButton = new Button(this.Name.replace(/\\s/g, '') + this.game.getPanelId(), {\r\n\t\t\t\ttext: `Apply to all {View>/game/subs/${this.id}/Name} facilities.`,\r\n\t\t\t\tpress: this.game.that.setBaseFactory\r\n\t\t\t}).addStyleClass(\"sapUiSmallMarginBegin\");\r\n\t\t\tthis.game.deathZone.push(newButton);\r\n\r\n\t\t\t(this.control as Panel).addContent(newSelect);\r\n\t\t\t(this.control as Panel).addContent(newButton);\r\n\t\t\t\r\n\t\t\tfor (var factory of this.factoryOptions) {\r\n\t\t\t\tfactory.buildControl(this.Level, panellevel);\r\n\t\t\t\t// used for binding /LaserHead/LaserHeadFactory/Glass/GlassManufacturer/Ore/Name\r\n\t\t\t\t//@ts-ignore\r\n\t\t\t\tthis[factory.Name.replace(/\\s/g, '')] = factory;\r\n\t\t\t\t(this.control as Panel).addContent(factory.control);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n/*\r\n.########....###.....######..########..#######..########..##....##\r\n.##.........##.##...##....##....##....##.....##.##.....##..##..##.\r\n.##........##...##..##..........##....##.....##.##.....##...####..\r\n.######...##.....##.##..........##....##.....##.########.....##...\r\n.##.......#########.##..........##....##.....##.##...##......##...\r\n.##.......##.....##.##....##....##....##.....##.##....##.....##...\r\n.##.......##.....##..######.....##.....#######..##.....##....##...\r\n*/\r\nclass treeFactory extends Factory {\r\n\trequiredProducts: treeGood[];\r\n\tid: string;\r\n\tselectid: string;\r\n\tcontrol: Control;\r\n\tactive: boolean;\r\n\tparent: treeGood;\r\n\tsubs: {[k: string]: treeGood};\r\n\tgame: factoryGame;\r\n\tconstructor(factory: Factory, game: factoryGame, parent: treeGood) {\r\n\t\tsuper(factory.Name,factory.ProductionCap,factory.Cost,factory.Products,factory.Materials);\r\n\r\n\t\tthis.parent = parent;\r\n\t\tthis.game = game;\r\n\t\tthis.selectid = factory.Name.replace(/\\s/g, '');\r\n\t\tthis.requiredProducts = [];\r\n\t\tthis.active = false;\r\n\t\tthis.subs = {};\r\n\t}\r\n\tpublic getId() {\r\n\t\treturn this.parent.getId() + \"/\" + this.Name.replace(/\\s/g, '');\r\n\t}\r\n\tpublic getMaterialLevelCombined(): number {\r\n\t\tvar result: number = 0;\r\n\t\tfor (const product of this.Materials) {\r\n\t\t\tresult += this.game.getProduct(product).Level;\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\tpublic getAllGoods(): treeGood[] {\r\n\t\tvar allGoods:treeGood[] = [];\r\n\t\tfor (const good of this.requiredProducts) {\r\n\t\t\tallGoods.push(good);\r\n\t\t\tallGoods = allGoods.concat(good.getSubGoods())\r\n\t\t}\r\n\t\treturn allGoods;\r\n\t}\r\n\tpublic getActiveSubs(): string[] {\r\n\t\tvar facs:string[] = [];\r\n\t\tfor (const requiredProduct of this.requiredProducts) {\r\n\t\t\tfacs = facs.concat(requiredProduct.getActiveFactory());\r\n\t\t}\r\n\t\treturn facs\r\n\t}\r\n\tpublic checkMaterialList(Material: string, newFactoryName: string) {\r\n\t\tif (this.Products.indexOf(Material) >= 0) this.active = (this.Name == newFactoryName);\r\n\t\tfor (const requiredProduct of this.requiredProducts) {\r\n\t\t\tif(requiredProduct.Name == Material) {\r\n\t\t\t\trequiredProduct.setActiveFactory(newFactoryName);\r\n\t\t\t}\r\n\t\t\trequiredProduct.setActiveFactoryRecursiv(Material, newFactoryName);\r\n\t\t}\r\n\t}\r\n\tpublic buildControl(goodLvl: number, panellevel: number) {\r\n\t\tthis.id = this.getId();\r\n\t\tif (goodLvl == 0) {\r\n\t\t\tthis.control = new Title(this.Name.replace(/\\s/g, '') + this.game.getPanelId(), {\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\t// bool from binding\r\n\t\t\t\t//@ts-ignore\r\n\t\t\t\tvisible: `{View>/game/subs/${this.id}/active}`,\r\n\t\t\t\ttext: `{View>/game/subs/${this.id}/Name}`\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.control = new Panel(this.Name.replace(/\\s/g, '') + this.game.getPanelId(), {\r\n\t\t\t\texpanded: true,\r\n\t\t\t\texpandable: true,\r\n\t\t\t\t// bool from binding\r\n\t\t\t\t//@ts-ignore\r\n\t\t\t\tvisible: `{View>/game/subs/${this.id}/active}`,\r\n\t\t\t\theaderText: `{View>/game/subs/${this.id}/Name}`\r\n\t\t\t});\r\n\t\t\tvar mats = this.game.getMaterialsForFactory(this.Name);\r\n\t\t\tfor (const mat of mats) {\r\n\t\t\t\tvar newMat = new treeGood(mat, this.game, this);\r\n\t\t\t\tthis.requiredProducts.push(newMat)\r\n\t\t\t}\r\n\t\t\tfor (var reqMaterial of this.requiredProducts) {\r\n\t\t\t\treqMaterial.buildControl(panellevel);\r\n\t\t\t\t(this.control as Panel).addContent(reqMaterial.control);\r\n\t\t\t\t// used for binding /LaserHead/LaserHeadFactory/Glass/GlassManufacturer/Ore/Name\r\n\t\t\t\t//@ts-ignore\r\n\t\t\t\tthis[reqMaterial.Name.replace(/\\s/g, '')] = reqMaterial;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.game.deathZone.push(this.control);\r\n\t}\r\n}\r\n/*\r\n..######......###....##.....##.########\r\n.##....##....##.##...###...###.##......\r\n.##.........##...##..####.####.##......\r\n.##...####.##.....##.##.###.##.######..\r\n.##....##..#########.##.....##.##......\r\n.##....##..##.....##.##.....##.##......\r\n..######...##.....##.##.....##.########\r\n*/\r\nclass factoryGame extends Game {\r\n\tprivate panelCount: number;\r\n\tthat: ProductionLine;\r\n\tavailableGoods: string[];\r\n\treqFactories: treeFactory[];\r\n\tprodTree: treeGood[];\r\n\tproducts: Product[];\r\n\ttargetFactory: Factory;\r\n\tdeathZone: Control[];\r\n\tsubs: {[k: string]: treeGood};\r\n\r\n\tconstructor(goods: Product[], factories: Factory[]) {\r\n\t\tsuper(goods, factories);\r\n\t\tthis.deathZone = [];\r\n\t\tthis.availableGoods = [];\r\n\t\tthis.reqFactories = [];\r\n\t\tthis.prodTree = [];\r\n\t\tthis.products = [];\r\n\t\tthis.panelCount = 0;\r\n\t\tthis.subs = {};\r\n\t}\r\n\tpublic setTargetFactory(factoryName: string): {[k: string]: treeGood} {\r\n\t\tthis.targetFactory = this.getFactory(factoryName);\r\n\t\tthis.products = this.getMaterialsForFactory(this.targetFactory.Name);\r\n\r\n\t\tfor (const good of this.products) {\r\n\t\t\tvar newGood = new treeGood(good, this, this);\r\n\t\t\tthis.prodTree.push(newGood);\r\n\t\t}\r\n\r\n\t\t// to get a Binding /tree/id/attribut \r\n\t\t// the array need to be changed ot objects \r\n\t\tfor (var treeitem of this.prodTree) {\r\n\t\t\ttreeitem.buildControl(0);\r\n\t\t\tthis.subs[treeitem.id] = treeitem;\r\n\t\t}\r\n\r\n\t\treturn this.subs;\r\n\t}\r\n\tpublic clearDeathZone(): void {\r\n\t\tfor (const control of this.deathZone) {\r\n\t\t\tcontrol.destroy();\r\n\t\t}\r\n\t}\r\n\tpublic getActiveFactories(): string[] {\r\n\t\tvar facs:string[] = [];\r\n\t\tfor (var baseitem of this.prodTree) {\r\n\t\t\tfacs = facs.concat(baseitem.getActiveFactory())\r\n\t\t}\r\n\t\t// only Uniques\r\n\t\tfacs = [...new Set(facs)]\r\n\t\tfor (let index = facs.length - 1; index > -1; index--) {\r\n\t\t\tconst element = facs[index];\r\n\t\t\tif (element == undefined) facs.splice(index, 1);\r\n\t\t}\r\n\t\treturn facs;\r\n\t}\r\n\tpublic getExportTree(): any {\r\n\t\tvar exportTree = {};\r\n\t\tfor (var baseitem of this.prodTree) {\r\n\t\t\t//@ts-ignore\r\n\t\t\texportTree[baseitem.Name] = {\r\n\t\t\t\tName: baseitem.Name,\r\n\t\t\t\tFactory: baseitem.getExportFactory()\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn exportTree;\r\n\t}\r\n\tpublic setBaseFactory(Material:string, newFactoryName:string) {\r\n\t\tfor (var name in this.subs) {\r\n\t\t\tthis.subs[name].setActiveFactoryRecursiv(Material, newFactoryName);\r\n\t\t}\r\n\t}\r\n\tpublic setAvailableGood(Name: string) {\r\n\t\tthis.availableGoods.push(Name);\r\n\t\tvar allGoods:treeGood[] = [];\r\n\t\tfor (const good of this.prodTree) {\r\n\t\t\tallGoods.push(good);\r\n\t\t\tallGoods = allGoods.concat(good.getSubGoods());\r\n\t\t}\r\n\t\t//console.log(allGoods);\r\n\t\tfor (const good of allGoods) {\r\n\t\t\tif (good.Name == Name) {\r\n\t\t\t\tgood.control.addStyleClass(\"dontShowContent\");\r\n\t\t\t\t(good.control as Panel).setExpandable(false);\r\n\t\t\t\tfor (const factory of good.factoryOptions) {\r\n\t\t\t\t\tfactory.active = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\tpublic getPanelId():number {\r\n\t\tthis.panelCount++;\r\n\t\treturn this.panelCount\r\n\t}\r\n}\r\n/*\r\n..######...#######..##....##.########.########...#######..##.......##.......########.########.\r\n.##....##.##.....##.###...##....##....##.....##.##.....##.##.......##.......##.......##.....##\r\n.##.......##.....##.####..##....##....##.....##.##.....##.##.......##.......##.......##.....##\r\n.##.......##.....##.##.##.##....##....########..##.....##.##.......##.......######...########.\r\n.##.......##.....##.##..####....##....##...##...##.....##.##.......##.......##.......##...##..\r\n.##....##.##.....##.##...###....##....##....##..##.....##.##.......##.......##.......##....##.\r\n..######...#######..##....##....##....##.....##..#######..########.########.########.##.....##\r\n*/\r\nexport default class ProductionLine extends BaseController {\r\n\tprivate formatter = formatter;\r\n\tprivate selectDialog: SelectDialog;\r\n\tprivate importDialog: Dialog;\r\n\tpublic onInit(): void {\r\n\t\tvar Model = new JSONModel();\r\n\t\tModel.setData({\r\n\t\t\tTargetFactory: \"\",\r\n\t\t\tproducts: [],\r\n\t\t\t//mainFactory: {},\r\n\t\t\t//deathZone: [],\r\n\t\t\t//tree: [],\r\n\t\t\t//ownedFactories: [],\r\n\t\t\t//requiredFactories: []\r\n\t\t});\r\n\t\tthis.getView().setModel(Model, \"View\");\r\n\t\tthis.getRouter().getRoute(\"productionLine\").attachPatternMatched(this.onPatternMatched, this);\r\n\r\n\t\tvar inputF = this.byId(\"targetFactoryInput\") as Input;\r\n\t\t//@ts-ignore\r\n\t\tinputF.setFilterFunction(function(sTerm: string, oItem: SuggestionItem) {\r\n\t\t\treturn oItem.getText().match(new RegExp(\"^\"+sTerm, \"i\"));\r\n\t\t});\r\n\t}\r\n\t/*\r\n\t.########..########...#######..########..........##.......####.##....##.########\r\n\t.##.....##.##.....##.##.....##.##.....##.........##........##..###...##.##......\r\n\t.##.....##.##.....##.##.....##.##.....##.........##........##..####..##.##......\r\n\t.########..########..##.....##.##.....##.#######.##........##..##.##.##.######..\r\n\t.##........##...##...##.....##.##.....##.........##........##..##..####.##......\r\n\t.##........##....##..##.....##.##.....##.........##........##..##...###.##......\r\n\t.##........##.....##..#######..########..........########.####.##....##.########\r\n\t*/\r\n\tpublic async generateProductionLine(event: Event): Promise<void> {\r\n\t\tvar that = this;\r\n\t\tvar view = this.getView();\r\n\t\tvar viewModel = this.getModel(\"View\") as JSONModel;\r\n\t\tvar game:factoryGame;\r\n\t\ttry {\r\n\t\t\tgame = viewModel.getProperty(\"/game\");\r\n\t\t\tif (game) {\r\n\t\t\t\tgame.clearDeathZone();\r\n\t\t\t}\r\n\t\t\t// Clear\r\n\t\t\tgame = new factoryGame(this.getModel(\"GoodModel\").getProperty(\"/Goods\"), this.getModel(\"FactorieModel\").getProperty(\"/Factories\"));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t\tgame.that = that;\r\n\r\n\t\tvar TargetFactoryName = (view.byId(\"targetFactoryInput\") as Input).getValue();\r\n\t\tviewModel.setProperty(\"/products\", game.getProductsFromFactory(TargetFactoryName));\r\n\t\tgame.setTargetFactory(TargetFactoryName);\r\n\t\tfor (var name in game.subs) {\r\n\t\t\t(that.byId(\"DetailedProdList\") as VBox).addItem(game.subs[name].control);\r\n\t\t\t\r\n\t\t}\r\n\t\t//console.log(xtree);\r\n\t\t\r\n\t\tviewModel.setProperty(\"/game\", game);\r\n\t\tviewModel.setProperty(\"/requiredFactories\", game.getActiveFactories().sort());\r\n\t}\r\n\t/*\r\n\t..######..##.....##....###....##....##..######...########\r\n\t.##....##.##.....##...##.##...###...##.##....##..##......\r\n\t.##.......##.....##..##...##..####..##.##........##......\r\n\t.##.......#########.##.....##.##.##.##.##...####.######..\r\n\t.##.......##.....##.#########.##..####.##....##..##......\r\n\t.##....##.##.....##.##.....##.##...###.##....##..##......\r\n\t..######..##.....##.##.....##.##....##..######...########\r\n\t*/\r\n\tpublic selectFactory(event: Event): void {\r\n\t\tvar select = event.getSource() as Select;\r\n\t\t// getParameters() returns a undefined Object\r\n\t\t//@ts-ignore\r\n\t\tvar item = event.getParameters().selectedItem as Item;\r\n\t\tvar viewModel = this.getModel(\"View\") as JSONModel;\r\n\t\tvar path = select.getBindingPath(\"items\"); // > game/subs/[Material]/.../factoryOptions\r\n\t\tvar factoryOptions = viewModel.getProperty(path);\r\n\t\tfor (var i = 0; i < factoryOptions.length; i++) {\r\n\t\t\tviewModel.setProperty(path+`/${i}/active`, false);\r\n\r\n\t\t\tif (viewModel.getProperty(path+`/${i}/Name`) == item.getText()) {\r\n\t\t\t\tviewModel.setProperty(path+`/${i}/active`, true);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar game = viewModel.getProperty(\"/game\");\r\n\t\tviewModel.setProperty(\"/requiredFactories\", game.getActiveFactories().sort());\r\n\t}\r\n\t/*\r\n\t..######..##.....##....###....##....##..######...########............###....##.......##......\r\n\t.##....##.##.....##...##.##...###...##.##....##..##.................##.##...##.......##......\r\n\t.##.......##.....##..##...##..####..##.##........##................##...##..##.......##......\r\n\t.##.......#########.##.....##.##.##.##.##...####.######...#######.##.....##.##.......##......\r\n\t.##.......##.....##.#########.##..####.##....##..##...............#########.##.......##......\r\n\t.##....##.##.....##.##.....##.##...###.##....##..##...............##.....##.##.......##......\r\n\t..######..##.....##.##.....##.##....##..######...########.........##.....##.########.########\r\n\t*/\r\n\tpublic setBaseFactory(event: Event): void {\r\n\t\tvar viewModel = this.getModel(\"View\") as JSONModel;\t\t\r\n\t\tvar game = viewModel.getProperty(\"/game\") as factoryGame;\r\n\t\tvar button = event.getSource() as Button;\r\n\t\tvar path = button.getBindingPath(\"text\");\r\n\r\n\t\tvar Material = viewModel.getProperty(path);\r\n\t\tvar newFactory = viewModel.getProperty(path.substring(0, path.lastIndexOf(\"/\")));\r\n\t\t// first control is the select\r\n\t\tnewFactory = ((newFactory.control.getContent()[0] as Select).getSelectedItem() as Item).getText();\r\n\t\t// console.log(Material, newFactory);\r\n\t\tgame.setBaseFactory(Material, newFactory);\r\n\t\t\r\n\t\tviewModel.setProperty(\"/game\", game);\r\n\t\tviewModel.setProperty(\"/requiredFactories\", game.getActiveFactories().sort());\r\n\t}\r\n\t/*\r\n\t.########..####....###....##........#######...######..\r\n\t.##.....##..##....##.##...##.......##.....##.##....##.\r\n\t.##.....##..##...##...##..##.......##.....##.##.......\r\n\t.##.....##..##..##.....##.##.......##.....##.##...####\r\n\t.##.....##..##..#########.##.......##.....##.##....##.\r\n\t.##.....##..##..##.....##.##.......##.....##.##....##.\r\n\t.########..####.##.....##.########..#######...######..\r\n\t*/\r\n\tpublic addAvailableGood(event: Event) {\r\n\t\tvar oView = this.getView();\r\n\t\tvar that = this;\r\n\t\ttry {\r\n\t\t\t(that.selectDialog as SelectDialog).open(\"\")\r\n\t\t} catch (error) {\r\n\t\t\tFragment.load({\r\n\t\t\t\tid: \"speccalDialog\",\r\n\t\t\t\tname: \"de.henloh.prodts.view.Dialog\",\r\n\t\t\t\tcontroller: this\r\n\t\t\t}).then(function (dialog: any){\r\n\t\t\t\t(dialog as SelectDialog).setModel(oView.getModel(\"GoodModel\"));\r\n\t\t\t\t(dialog as SelectDialog).open(\"\");\r\n\t\t\t\tthat.selectDialog = dialog;\r\n\t\t\t}.bind(this));\r\n\t\t}\r\n\t}\r\n\tpublic onDialogClose(event: Event) {\r\n\t\tvar aContexts = event.getParameter(\"selectedContexts\");\r\n\t\tvar viewModel = this.getModel(\"View\") as JSONModel;\t\t\r\n\t\tvar game = viewModel.getProperty(\"/game\") as factoryGame;\r\n\t\tif (aContexts && aContexts.length) {\r\n\t\t\taContexts.map(function (oContext: any) { \r\n\t\t\t\ttry {\r\n\t\t\t\t\tgame.setAvailableGood(oContext.getObject().Name)\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.warn(error);\r\n\t\t\t\t} \r\n\t\t\t})\t\r\n\t\t\tviewModel.setProperty(\"/availableGoods\", game.availableGoods);\r\n\t\t\tviewModel.setProperty(\"/game\", game);\r\n\t\t}\r\n\t\t// Binding is not definied. Filtering is possible here\r\n\t\t//@ts-ignore \r\n\t\t(event.getSource() as SelectDialog).getBinding(\"items\").filter([]);\r\n\t\tviewModel.setProperty(\"/requiredFactories\", game.getActiveFactories().sort());\r\n\t}\r\n\tpublic onSearch(event: Event) {\r\n\t\tvar sValue = event.getParameter(\"value\");\r\n\t\tvar oFilter = new Filter(\"Name\", FilterOperator.Contains, sValue);\r\n\t\tvar oBinding = event.getParameter(\"itemsBinding\");\r\n\t\toBinding.filter([oFilter]);\r\n\t}\r\n\t/*\r\n\t.####.##.....##.########.......####.......########.##.....##.########...#######..########..########\r\n\t..##..###...###.##.....##.....##..##......##........##...##..##.....##.##.....##.##.....##....##...\r\n\t..##..####.####.##.....##......####.......##.........##.##...##.....##.##.....##.##.....##....##...\r\n\t..##..##.###.##.########......####........######......###....########..##.....##.########.....##...\r\n\t..##..##.....##.##...........##..##.##....##.........##.##...##........##.....##.##...##......##...\r\n\t..##..##.....##.##...........##...##......##........##...##..##........##.....##.##....##.....##...\r\n\t.####.##.....##.##............####..##....########.##.....##.##.........#######..##.....##....##...\r\n\t*/\r\n\tpublic handleDownloadPress(): void {\t\r\n\t\t// Convert the JSON data to a string\r\n\t\tvar viewModel = this.getModel(\"View\") as JSONModel;\r\n\t\tvar game = viewModel.getProperty(\"/game\") as factoryGame;\r\n\t\tvar data:any = {\r\n\t\t\ttargetFactory:     viewModel.getProperty(\"/TargetFactory\"),\r\n\t\t\tavailableGoods:    viewModel.getProperty(\"/availableGoods\"),\r\n\t\t\trequiredFactories: viewModel.getProperty(\"/requiredFactories\"),\r\n\t\t\tproducts:          viewModel.getProperty(\"/products\"),\r\n\t\t\tbasicTree: \t\t   game.getExportTree()\r\n\t\t};\r\n\t\tvar jsonString = JSON.stringify(data);\r\n\t\r\n\t\t// Use the FileSaver.js library to trigger a download\r\n\t\tFile.save(jsonString, \"data\", \"json\", \"application/json\", \"utf-8\");\r\n\t}\r\n\tpublic openUploadDialog(event: Event) {\r\n\t\t//var oView = this.getView();\r\n\t\tvar that = this;\r\n\t\ttry {\r\n\t\t\t(that.importDialog as Dialog).open()\r\n\t\t} catch (error) {\r\n\t\t\tFragment.load({\r\n\t\t\t\tid: \"speccalDialog2\",\r\n\t\t\t\tname: \"de.henloh.prodts.view.Import\",\r\n\t\t\t\tcontroller: this\r\n\t\t\t}).then(function (dialog: any){\r\n\t\t\t\t//(dialog as Dialog).setModel(oView.getModel(\"GoodModel\"));\r\n\t\t\t\t(dialog as Dialog).open();\r\n\t\t\t\tthat.importDialog = dialog;\r\n\t\t\t}.bind(this));\r\n\t\t}\r\n\t}\r\n\tpublic closeDialog(event: Event): void { \r\n\t\tthis.importDialog.close()\r\n\t}\r\n\tpublic handleUploadPress(event: Event): void {\r\n\t\t// Get the selected file from the input element\r\n\t\tvar file = event.getParameters().item.getFileObject();\r\n\t\tvar that = this;\r\n\t\tvar reader = new FileReader();\r\n\t\tvar viewModel = this.getModel(\"View\") as JSONModel;\r\n\r\n\t\t// Read the file as text\r\n\t\treader.readAsText(file);\r\n\r\n\t\t// When the file has been read, convert it to a JavaScript object\r\n\t\treader.onload = function() {\r\n\t\t\tvar data = JSON.parse(reader.result as string);\r\n\t\t\t//console.log(data);\r\n\t\t\ttry {\r\n\t\t\t\tviewModel.setProperty(\"/TargetFactory\", data.targetFactory);\r\n\t\t\t\tviewModel.setProperty(\"/availableGoods\", data.availableGoods);\r\n\t\t\t\tviewModel.setProperty(\"/requiredFactories\", data.requiredFactories);\r\n\t\t\t\tviewModel.setProperty(\"/products\", data.products);\r\n\r\n\t\t\t\tvar basicTree: any = data.basicTree;\r\n\r\n\t\t\t\tvar game:factoryGame;\r\n\t\t\t\tgame = viewModel.getProperty(\"/game\");\r\n\t\t\t\tif (game) {\r\n\t\t\t\t\tgame.clearDeathZone();\r\n\t\t\t\t}\r\n\t\t\t\t// Clear\r\n\t\t\t\tgame = new factoryGame(that.getModel(\"GoodModel\").getProperty(\"/Goods\"), that.getModel(\"FactorieModel\").getProperty(\"/Factories\"));\r\n\r\n\t\t\t\tgame.that = that;\r\n\t\t\t\tgame.setTargetFactory(data.targetFactory);\r\n\r\n\t\t\t\tfor (var name in game.subs) {\r\n\t\t\t\t\t(that.byId(\"DetailedProdList\") as VBox).addItem(game.subs[name].control);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tviewModel.setProperty(\"/game\", game);\r\n\r\n\t\t\t} catch (error) {\r\n\t\t\t\tMessageBox.show(\"Uploaded data does not contain a production-tree.\")\r\n\t\t\t}\r\n\t\t\t// Do something with the JavaScript object\r\n\t\t}\r\n\t}\r\n\tpublic onPatternMatched(event: Event): void {\r\n\t\t \r\n\t}\r\n}\r\n"],"mappings":";;;;;;QACOA,cAAc,GAAAC,sBAAA,CAAAC,gBAAA;EAAA,MACdC,SAAS,GAAAF,sBAAA,CAAAG,WAAA;EAAA,MAKPC,OAAO,GAAAC,QAAA;EAAA,MAAEC,IAAI,GAAAD,QAAA;EAAA,MAAEE,OAAO,GAAAF,QAAA;EAe/B;AACA;AACA;EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,MAAMG,QAAQ,SAASD,OAAO,CAAC;IAO9BE,WAAWA,CAACC,IAAa,EAAEC,IAAiB,EAAEC,MAAc,EAAE;MAC7D,KAAK,CAACF,IAAI,CAACG,IAAI,EAAEH,IAAI,CAACI,SAAS,EAAEJ,IAAI,CAACK,OAAO,EAAEL,IAAI,CAACM,QAAQ,EAAEN,IAAI,CAACO,KAAK,EAAEP,IAAI,CAACQ,SAAS,EAAER,IAAI,CAACS,YAAY,CAAC;MAE5G,IAAI,CAACP,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACD,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACS,cAAc,GAAG,EAAE;MACxB,IAAI,CAACC,IAAI,GAAG,CAAC,CAAC;IACf;IACOC,KAAKA,CAAA,EAAU;MACrB;MACA;MACA,IAAG,IAAI,CAACV,MAAM,CAACU,KAAK,EAAE;QACrB;QACA,OAAO,IAAI,CAACV,MAAM,CAACU,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAACT,IAAI,CAACU,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;MAChE,CAAC,MAAM;QACN,OAAO,IAAI,CAACV,IAAI,CAACU,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;MACpC;IACD;IACOC,gBAAgBA,CAAA,EAAa;MACnC,IAAIC,IAAa,GAAG,EAAE;MACtB,KAAK,MAAMC,OAAO,IAAI,IAAI,CAACN,cAAc,EAAE;QAC1C,IAAIM,OAAO,CAACC,MAAM,EAAE;UACnBF,IAAI,GAAGA,IAAI,CAACG,MAAM,CAACF,OAAO,CAACG,aAAa,CAAC,CAAC,CAAC;UAC3CJ,IAAI,CAACK,OAAO,CAACJ,OAAO,CAACb,IAAI,CAAC,KAAK,CAAC,CAAC,GAAGY,IAAI,CAACM,IAAI,CAACL,OAAO,CAACb,IAAI,CAAC,GAAG,IAAI;UAClE,OAAOY,IAAI;QACZ;MACD;IACD;IACOO,gBAAgBA,CAAA,EAAQ;MAC9B,IAAIC,MAAU,GAAG,CAAC,CAAC;MACnB,KAAK,MAAMP,OAAO,IAAI,IAAI,CAACN,cAAc,EAAE;QAC1C,IAAIM,OAAO,CAACC,MAAM,EAAE;UACnBM,MAAM,CAACpB,IAAI,GAAGa,OAAO,CAACb,IAAI;UAC1BoB,MAAM,CAACC,gBAAgB,GAAG,EAAE;UAC5B,KAAK,MAAMC,OAAO,IAAIT,OAAO,CAACQ,gBAAgB,EAAE;YAC/CD,MAAM,CAACC,gBAAgB,CAACH,IAAI,CAAC;cAC5BlB,IAAI,EAAEsB,OAAO,CAACtB,IAAI;cAClBT,OAAO,EAAE+B,OAAO,CAACH,gBAAgB,CAAC;YACnC,CAAC,CAAC;UACH;QACD;MACD;MACA,OAAOC,MAAM;IACd;IACOG,WAAWA,CAAA,EAAe;MAChC,IAAIH,MAAiB,GAAG,EAAE;MAC1B,KAAK,MAAMP,OAAO,IAAI,IAAI,CAACN,cAAc,EAAE;QAC1Ca,MAAM,GAAGA,MAAM,CAACL,MAAM,CAACF,OAAO,CAACW,WAAW,CAAC,CAAC,CAAC;MAC9C;MACA,OAAOJ,MAAM;IACd;IACOK,gBAAgBA,CAACzB,IAAY,EAAE;MACrC,IAAG,EAAE,IAAI,CAACO,cAAc,CAACmB,MAAM,GAAG,CAAC,CAAC,EAAE;MACtC,KAAK,MAAMb,OAAO,IAAI,IAAI,CAACN,cAAc,EAAE;QAC1CM,OAAO,CAACC,MAAM,GAAG,KAAK;QACtB,IAAID,OAAO,CAACb,IAAI,IAAIA,IAAI,EAAE;UACzBa,OAAO,CAACC,MAAM,GAAG,IAAI;UACrB,IAAI,IAAI,CAACP,cAAc,CAACmB,MAAM,GAAG,CAAC,EAAE;YACnC;YACA,IAAIC,MAAM,GAAI,IAAI,CAACC,OAAO,CAAWC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAW;YAC9DF,MAAM,CAACG,cAAc,CAACjB,OAAO,CAACb,IAAI,CAACU,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;UACvD;QACD;MACD;IACD;IACA;IACQqB,gBAAgBA,CAAA,EAAe;MACtC,IAAG,IAAI,CAACxB,cAAc,CAACmB,MAAM,IAAI,CAAC,EAAE;QACnC,IAAI,CAACnB,cAAc,CAAC,CAAC,CAAC,CAACO,MAAM,GAAG,IAAI;QACpC,OAAO,IAAI,CAACP,cAAc,CAAC,CAAC,CAAC;MAC9B,CAAC,MAAM,IAAG,IAAI,CAACA,cAAc,CAACmB,MAAM,GAAG,CAAC,EAAE;QACzC,IAAIM,MAAM,GAAG,IAAI,CAACzB,cAAc,CAAC,CAAC,CAAC;QACnC,KAAK,MAAMM,OAAO,IAAI,IAAI,CAACN,cAAc,EAAE;UAC1C,IAAI0B,OAAO,GAAGD,MAAM,CAACE,wBAAwB,CAAC,CAAC;UAC/C,IAAIrB,OAAO,CAACqB,wBAAwB,CAAC,CAAC,GAAGD,OAAO,EAAE;YACjDD,MAAM,GAAGnB,OAAO;UACjB;QACD;QACAmB,MAAM,CAAClB,MAAM,GAAG,IAAI;QACpB,OAAOkB,MAAM;MACd;IACD;IACOG,wBAAwBA,CAACC,QAAgB,EAAEC,cAAsB,EAAE;MACzE,IAAG,IAAI,CAACrC,IAAI,IAAIoC,QAAQ,EAAE;QACzB,IAAI,CAACX,gBAAgB,CAACY,cAAc,CAAC;QACrC;MACD;MACA,IAAG,IAAI,CAAC9B,cAAc,CAACmB,MAAM,GAAG,CAAC,EAAE;QAClC,KAAK,MAAMb,OAAO,IAAI,IAAI,CAACN,cAAc,EAAE;UAC1C;UACAM,OAAO,CAACyB,iBAAiB,CAACF,QAAQ,EAAEC,cAAc,CAAC;QACpD;MACD;IACD;IACOE,YAAYA,CAACC,UAAkB,EAAE;MACvC,IAAI,CAACC,EAAE,GAAG,IAAI,CAAChC,KAAK,CAAC,CAAC;MACtB,IAAI,CAACmB,OAAO,GAAG,IAAIc,KAAK,CAAC,IAAI,CAAC1C,IAAI,CAACU,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,IAAI,CAACZ,IAAI,CAAC6C,UAAU,CAAC,CAAC,EAAE;QAC/EC,QAAQ,EAAE,KAAK;QACfC,UAAU,EAAE,IAAI;QAChBC,UAAU,EAAG,oBAAmB,IAAI,CAACL,EAAG;MACzC,CAAC,CAAC;MACF,IAAI,CAACb,OAAO,CAACmB,aAAa,CAAC,SAAS,GAAGP,UAAU,CAAC;MAClD,IAAI,CAAC1C,IAAI,CAACkD,SAAS,CAAC9B,IAAI,CAAC,IAAI,CAACU,OAAO,CAAC;MAEtCY,UAAU,EAAE;MACZ,IAAIS,SAAS,GAAG,IAAI,CAACnD,IAAI,CAACoD,sBAAsB,CAAC,IAAI,CAAClD,IAAI,CAAC;MAC3D,IAAI;QACH,KAAK,MAAMa,OAAO,IAAIoC,SAAS,EAAE;UAChC,IAAIE,UAAU,GAAG,IAAIC,WAAW,CAACvC,OAAO,EAAE,IAAI,CAACf,IAAI,EAAE,IAAI,CAAC;UAC1D,IAAI,CAACS,cAAc,CAACW,IAAI,CAACiC,UAAU,CAAC;QACrC;MACD,CAAC,CAAC,OAAOE,KAAK,EAAE;QACfC,OAAO,CAACC,IAAI,CAAC,iBAAiB,GAAE,IAAI,CAACvD,IAAI,CAAC;QACzC,IAAI,CAAC4B,OAAO,CAAW4B,aAAa,CAAC,KAAK,CAAC;QAC3C,IAAI,CAAC5B,OAAO,CAAWmB,aAAa,CAAC,iBAAiB,CAAC;MACzD;MACA,IAAI,IAAI,CAACxC,cAAc,CAACmB,MAAM,IAAI,CAAC,EAAE;QACpC,IAAI,CAACnB,cAAc,CAAC,CAAC,CAAC,CAACgC,YAAY,CAAC,IAAI,CAACnC,KAAK,EAAEoC,UAAU,CAAC;QAC1D,IAAI,CAACZ,OAAO,CAAW6B,UAAU,CAAC,IAAI,CAAClD,cAAc,CAAC,CAAC,CAAC,CAACqB,OAAO,CAAC;QAClE;QACA;QACA,IAAI,CAAC,IAAI,CAACrB,cAAc,CAAC,CAAC,CAAC,CAACP,IAAI,CAACU,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,GAAG,IAAI,CAACH,cAAc,CAAC,CAAC,CAAC;QAC7E,IAAI,CAACwB,gBAAgB,CAAC,CAAC;MACxB,CAAC,MAAM,IAAG,IAAI,CAACxB,cAAc,CAACmB,MAAM,GAAG,CAAC,EAAE;QACzC,IAAIgC,SAAS,GAAG,IAAIC,MAAM,CAAC,IAAI,CAAC3D,IAAI,CAACU,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,IAAI,CAACZ,IAAI,CAAC6C,UAAU,CAAC,CAAC,EAAE;UACjFiB,YAAY,EAAG,mBAAkB,IAAI,CAACnB,EAAG,cAAa;UACtDoB,KAAK,EAAE;YACNC,IAAI,EAAG,mBAAkB,IAAI,CAACrB,EAAG,iBAAgB;YACjDsB,QAAQ,EAAE,IAAIC,IAAI,CAAC;cAClBC,IAAI,EAAE,aAAa;cACnBC,GAAG,EAAE;YACN,CAAC,CAAC;YACFC,iBAAiB,EAAE;UACpB,CAAC;UACDC,MAAM,EAAE,IAAI,CAACtE,IAAI,CAACuE,IAAI,CAACC;QACxB,CAAC,CAAC;QACF,IAAI,CAACxE,IAAI,CAACkD,SAAS,CAAC9B,IAAI,CAACwC,SAAS,CAAC;QACnC,IAAI1B,MAAM,GAAG,IAAI,CAACD,gBAAgB,CAAC,CAAC;QACpC2B,SAAS,CAAC5B,cAAc,CAACE,MAAM,CAAChC,IAAI,CAACU,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAExD,IAAI6D,SAAS,GAAG,IAAIC,MAAM,CAAC,IAAI,CAACxE,IAAI,CAACU,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,IAAI,CAACZ,IAAI,CAAC6C,UAAU,CAAC,CAAC,EAAE;UACjFsB,IAAI,EAAG,iCAAgC,IAAI,CAACxB,EAAG,oBAAmB;UAClEgC,KAAK,EAAE,IAAI,CAAC3E,IAAI,CAACuE,IAAI,CAACK;QACvB,CAAC,CAAC,CAAC3B,aAAa,CAAC,uBAAuB,CAAC;QACzC,IAAI,CAACjD,IAAI,CAACkD,SAAS,CAAC9B,IAAI,CAACqD,SAAS,CAAC;QAElC,IAAI,CAAC3C,OAAO,CAAW6B,UAAU,CAACC,SAAS,CAAC;QAC5C,IAAI,CAAC9B,OAAO,CAAW6B,UAAU,CAACc,SAAS,CAAC;QAE7C,KAAK,IAAI1D,OAAO,IAAI,IAAI,CAACN,cAAc,EAAE;UACxCM,OAAO,CAAC0B,YAAY,CAAC,IAAI,CAACnC,KAAK,EAAEoC,UAAU,CAAC;UAC5C;UACA;UACA,IAAI,CAAC3B,OAAO,CAACb,IAAI,CAACU,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,GAAGG,OAAO;UAC9C,IAAI,CAACe,OAAO,CAAW6B,UAAU,CAAC5C,OAAO,CAACe,OAAO,CAAC;QACpD;MACD;IACD;EACD;EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,MAAMwB,WAAW,SAAS7D,OAAO,CAAC;IASjCK,WAAWA,CAACiB,OAAgB,EAAEf,IAAiB,EAAEC,MAAgB,EAAE;MAClE,KAAK,CAACc,OAAO,CAACb,IAAI,EAACa,OAAO,CAAC8D,aAAa,EAAC9D,OAAO,CAAC+D,IAAI,EAAC/D,OAAO,CAACgE,QAAQ,EAAChE,OAAO,CAACiE,SAAS,CAAC;MAEzF,IAAI,CAAC/E,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACD,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACiF,QAAQ,GAAGlE,OAAO,CAACb,IAAI,CAACU,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;MAC/C,IAAI,CAACW,gBAAgB,GAAG,EAAE;MAC1B,IAAI,CAACP,MAAM,GAAG,KAAK;MACnB,IAAI,CAACN,IAAI,GAAG,CAAC,CAAC;IACf;IACOC,KAAKA,CAAA,EAAG;MACd,OAAO,IAAI,CAACV,MAAM,CAACU,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAACT,IAAI,CAACU,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAChE;IACOwB,wBAAwBA,CAAA,EAAW;MACzC,IAAId,MAAc,GAAG,CAAC;MACtB,KAAK,MAAME,OAAO,IAAI,IAAI,CAACwD,SAAS,EAAE;QACrC1D,MAAM,IAAI,IAAI,CAACtB,IAAI,CAACkF,UAAU,CAAC1D,OAAO,CAAC,CAAClB,KAAK;MAC9C;MACA,OAAOgB,MAAM;IACd;IACOI,WAAWA,CAAA,EAAe;MAChC,IAAIyD,QAAmB,GAAG,EAAE;MAC5B,KAAK,MAAMpF,IAAI,IAAI,IAAI,CAACwB,gBAAgB,EAAE;QACzC4D,QAAQ,CAAC/D,IAAI,CAACrB,IAAI,CAAC;QACnBoF,QAAQ,GAAGA,QAAQ,CAAClE,MAAM,CAAClB,IAAI,CAAC0B,WAAW,CAAC,CAAC,CAAC;MAC/C;MACA,OAAO0D,QAAQ;IAChB;IACOjE,aAAaA,CAAA,EAAa;MAChC,IAAIJ,IAAa,GAAG,EAAE;MACtB,KAAK,MAAMsE,eAAe,IAAI,IAAI,CAAC7D,gBAAgB,EAAE;QACpDT,IAAI,GAAGA,IAAI,CAACG,MAAM,CAACmE,eAAe,CAACvE,gBAAgB,CAAC,CAAC,CAAC;MACvD;MACA,OAAOC,IAAI;IACZ;IACO0B,iBAAiBA,CAACF,QAAgB,EAAEC,cAAsB,EAAE;MAClE,IAAI,IAAI,CAACwC,QAAQ,CAAC5D,OAAO,CAACmB,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,CAACtB,MAAM,GAAI,IAAI,CAACd,IAAI,IAAIqC,cAAe;MACrF,KAAK,MAAM6C,eAAe,IAAI,IAAI,CAAC7D,gBAAgB,EAAE;QACpD,IAAG6D,eAAe,CAAClF,IAAI,IAAIoC,QAAQ,EAAE;UACpC8C,eAAe,CAACzD,gBAAgB,CAACY,cAAc,CAAC;QACjD;QACA6C,eAAe,CAAC/C,wBAAwB,CAACC,QAAQ,EAAEC,cAAc,CAAC;MACnE;IACD;IACOE,YAAYA,CAAC4C,OAAe,EAAE3C,UAAkB,EAAE;MACxD,IAAI,CAACC,EAAE,GAAG,IAAI,CAAChC,KAAK,CAAC,CAAC;MACtB,IAAI0E,OAAO,IAAI,CAAC,EAAE;QACjB,IAAI,CAACvD,OAAO,GAAG,IAAIwD,KAAK,CAAC,IAAI,CAACpF,IAAI,CAACU,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,IAAI,CAACZ,IAAI,CAAC6C,UAAU,CAAC,CAAC,EAAE;UAC/E0C,KAAK,EAAE,MAAM;UACb;UACA;UACAC,OAAO,EAAG,oBAAmB,IAAI,CAAC7C,EAAG,UAAS;UAC9CwB,IAAI,EAAG,oBAAmB,IAAI,CAACxB,EAAG;QACnC,CAAC,CAAC;MACH,CAAC,MAAM;QACN,IAAI,CAACb,OAAO,GAAG,IAAIc,KAAK,CAAC,IAAI,CAAC1C,IAAI,CAACU,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,IAAI,CAACZ,IAAI,CAAC6C,UAAU,CAAC,CAAC,EAAE;UAC/EC,QAAQ,EAAE,IAAI;UACdC,UAAU,EAAE,IAAI;UAChB;UACA;UACAyC,OAAO,EAAG,oBAAmB,IAAI,CAAC7C,EAAG,UAAS;UAC9CK,UAAU,EAAG,oBAAmB,IAAI,CAACL,EAAG;QACzC,CAAC,CAAC;QACF,IAAI8C,IAAI,GAAG,IAAI,CAACzF,IAAI,CAAC0F,sBAAsB,CAAC,IAAI,CAACxF,IAAI,CAAC;QACtD,KAAK,MAAMyF,GAAG,IAAIF,IAAI,EAAE;UACvB,IAAIG,MAAM,GAAG,IAAI/F,QAAQ,CAAC8F,GAAG,EAAE,IAAI,CAAC3F,IAAI,EAAE,IAAI,CAAC;UAC/C,IAAI,CAACuB,gBAAgB,CAACH,IAAI,CAACwE,MAAM,CAAC;QACnC;QACA,KAAK,IAAIC,WAAW,IAAI,IAAI,CAACtE,gBAAgB,EAAE;UAC9CsE,WAAW,CAACpD,YAAY,CAACC,UAAU,CAAC;UACnC,IAAI,CAACZ,OAAO,CAAW6B,UAAU,CAACkC,WAAW,CAAC/D,OAAO,CAAC;UACvD;UACA;UACA,IAAI,CAAC+D,WAAW,CAAC3F,IAAI,CAACU,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,GAAGiF,WAAW;QACxD;MACD;MAEA,IAAI,CAAC7F,IAAI,CAACkD,SAAS,CAAC9B,IAAI,CAAC,IAAI,CAACU,OAAO,CAAC;IACvC;EACD;EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,MAAMgE,WAAW,SAASnG,IAAI,CAAC;IAW9BG,WAAWA,CAACiG,KAAgB,EAAE5C,SAAoB,EAAE;MACnD,KAAK,CAAC4C,KAAK,EAAE5C,SAAS,CAAC;MACvB,IAAI,CAACD,SAAS,GAAG,EAAE;MACnB,IAAI,CAAC8C,cAAc,GAAG,EAAE;MACxB,IAAI,CAACC,YAAY,GAAG,EAAE;MACtB,IAAI,CAACC,QAAQ,GAAG,EAAE;MAClB,IAAI,CAACC,QAAQ,GAAG,EAAE;MAClB,IAAI,CAACC,UAAU,GAAG,CAAC;MACnB,IAAI,CAAC1F,IAAI,GAAG,CAAC,CAAC;IACf;IACO2F,gBAAgBA,CAACC,WAAmB,EAA2B;MACrE,IAAI,CAACC,aAAa,GAAG,IAAI,CAACC,UAAU,CAACF,WAAW,CAAC;MACjD,IAAI,CAACH,QAAQ,GAAG,IAAI,CAACT,sBAAsB,CAAC,IAAI,CAACa,aAAa,CAACrG,IAAI,CAAC;MAEpE,KAAK,MAAMH,IAAI,IAAI,IAAI,CAACoG,QAAQ,EAAE;QACjC,IAAIM,OAAO,GAAG,IAAI5G,QAAQ,CAACE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;QAC5C,IAAI,CAACmG,QAAQ,CAAC9E,IAAI,CAACqF,OAAO,CAAC;MAC5B;;MAEA;MACA;MACA,KAAK,IAAIC,QAAQ,IAAI,IAAI,CAACR,QAAQ,EAAE;QACnCQ,QAAQ,CAACjE,YAAY,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC/B,IAAI,CAACgG,QAAQ,CAAC/D,EAAE,CAAC,GAAG+D,QAAQ;MAClC;MAEA,OAAO,IAAI,CAAChG,IAAI;IACjB;IACOiG,cAAcA,CAAA,EAAS;MAC7B,KAAK,MAAM7E,OAAO,IAAI,IAAI,CAACoB,SAAS,EAAE;QACrCpB,OAAO,CAAC8E,OAAO,CAAC,CAAC;MAClB;IACD;IACOC,kBAAkBA,CAAA,EAAa;MACrC,IAAI/F,IAAa,GAAG,EAAE;MACtB,KAAK,IAAIgG,QAAQ,IAAI,IAAI,CAACZ,QAAQ,EAAE;QACnCpF,IAAI,GAAGA,IAAI,CAACG,MAAM,CAAC6F,QAAQ,CAACjG,gBAAgB,CAAC,CAAC,CAAC;MAChD;MACA;MACAC,IAAI,GAAG,CAAC,GAAG,IAAIiG,GAAG,CAACjG,IAAI,CAAC,CAAC;MACzB,KAAK,IAAIkG,KAAK,GAAGlG,IAAI,CAACc,MAAM,GAAG,CAAC,EAAEoF,KAAK,GAAG,CAAC,CAAC,EAAEA,KAAK,EAAE,EAAE;QACtD,MAAMC,OAAO,GAAGnG,IAAI,CAACkG,KAAK,CAAC;QAC3B,IAAIC,OAAO,IAAIC,SAAS,EAAEpG,IAAI,CAACqG,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;MAChD;MACA,OAAOlG,IAAI;IACZ;IACOsG,aAAaA,CAAA,EAAQ;MAC3B,IAAIC,UAAU,GAAG,CAAC,CAAC;MACnB,KAAK,IAAIP,QAAQ,IAAI,IAAI,CAACZ,QAAQ,EAAE;QACnC;QACAmB,UAAU,CAACP,QAAQ,CAAC5G,IAAI,CAAC,GAAG;UAC3BA,IAAI,EAAE4G,QAAQ,CAAC5G,IAAI;UACnBT,OAAO,EAAEqH,QAAQ,CAACzF,gBAAgB,CAAC;QACpC,CAAC;MACF;MACA,OAAOgG,UAAU;IAClB;IACOzC,cAAcA,CAACtC,QAAe,EAAEC,cAAqB,EAAE;MAC7D,KAAK,IAAI+E,IAAI,IAAI,IAAI,CAAC5G,IAAI,EAAE;QAC3B,IAAI,CAACA,IAAI,CAAC4G,IAAI,CAAC,CAACjF,wBAAwB,CAACC,QAAQ,EAAEC,cAAc,CAAC;MACnE;IACD;IACOgF,gBAAgBA,CAACrH,IAAY,EAAE;MACrC,IAAI,CAAC8F,cAAc,CAAC5E,IAAI,CAAClB,IAAI,CAAC;MAC9B,IAAIiF,QAAmB,GAAG,EAAE;MAC5B,KAAK,MAAMpF,IAAI,IAAI,IAAI,CAACmG,QAAQ,EAAE;QACjCf,QAAQ,CAAC/D,IAAI,CAACrB,IAAI,CAAC;QACnBoF,QAAQ,GAAGA,QAAQ,CAAClE,MAAM,CAAClB,IAAI,CAAC0B,WAAW,CAAC,CAAC,CAAC;MAC/C;MACA;MACA,KAAK,MAAM1B,IAAI,IAAIoF,QAAQ,EAAE;QAC5B,IAAIpF,IAAI,CAACG,IAAI,IAAIA,IAAI,EAAE;UACtBH,IAAI,CAAC+B,OAAO,CAACmB,aAAa,CAAC,iBAAiB,CAAC;UAC5ClD,IAAI,CAAC+B,OAAO,CAAW4B,aAAa,CAAC,KAAK,CAAC;UAC5C,KAAK,MAAM3C,OAAO,IAAIhB,IAAI,CAACU,cAAc,EAAE;YAC1CM,OAAO,CAACC,MAAM,GAAG,KAAK;UACvB;QACD;MACD;IAED;IACO6B,UAAUA,CAAA,EAAU;MAC1B,IAAI,CAACuD,UAAU,EAAE;MACjB,OAAO,IAAI,CAACA,UAAU;IACvB;EACD;EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACe,MAAMoB,cAAc,SAASpI,cAAc,CAAC;IAClDG,SAAS,GAAGA,SAAS;IAGtBkI,MAAMA,CAAA,EAAS;MACrB,IAAIC,KAAK,GAAG,IAAIC,SAAS,CAAC,CAAC;MAC3BD,KAAK,CAACE,OAAO,CAAC;QACbC,aAAa,EAAE,EAAE;QACjB1B,QAAQ,EAAE;QACV;QACA;QACA;QACA;QACA;MACD,CAAC,CAAC;;MACF,IAAI,CAAC2B,OAAO,CAAC,CAAC,CAACC,QAAQ,CAACL,KAAK,EAAE,MAAM,CAAC;MACtC,IAAI,CAACM,SAAS,CAAC,CAAC,CAACC,QAAQ,CAAC,gBAAgB,CAAC,CAACC,oBAAoB,CAAC,IAAI,CAACC,gBAAgB,EAAE,IAAI,CAAC;MAE7F,IAAIC,MAAM,GAAG,IAAI,CAACC,IAAI,CAAC,oBAAoB,CAAU;MACrD;MACAD,MAAM,CAACE,iBAAiB,CAAC,UAASC,KAAa,EAAEC,KAAqB,EAAE;QACvE,OAAOA,KAAK,CAACC,OAAO,CAAC,CAAC,CAACC,KAAK,CAAC,IAAIC,MAAM,CAAC,GAAG,GAACJ,KAAK,EAAE,GAAG,CAAC,CAAC;MACzD,CAAC,CAAC;IACH;IACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACC,MAAaK,sBAAsBA,CAACC,KAAY,EAAiB;MAChE,IAAItE,IAAI,GAAG,IAAI;MACf,IAAIuE,IAAI,GAAG,IAAI,CAAChB,OAAO,CAAC,CAAC;MACzB,IAAIiB,SAAS,GAAG,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAc;MAClD,IAAIhJ,IAAgB;MACpB,IAAI;QACHA,IAAI,GAAG+I,SAAS,CAACE,WAAW,CAAC,OAAO,CAAC;QACrC,IAAIjJ,IAAI,EAAE;UACTA,IAAI,CAAC2G,cAAc,CAAC,CAAC;QACtB;QACA;QACA3G,IAAI,GAAG,IAAI8F,WAAW,CAAC,IAAI,CAACkD,QAAQ,CAAC,WAAW,CAAC,CAACC,WAAW,CAAC,QAAQ,CAAC,EAAE,IAAI,CAACD,QAAQ,CAAC,eAAe,CAAC,CAACC,WAAW,CAAC,YAAY,CAAC,CAAC;MACnI,CAAC,CAAC,OAAO1F,KAAK,EAAE;QACfC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACrB;MACAvD,IAAI,CAACuE,IAAI,GAAGA,IAAI;MAEhB,IAAI2E,iBAAiB,GAAIJ,IAAI,CAACT,IAAI,CAAC,oBAAoB,CAAC,CAAWc,QAAQ,CAAC,CAAC;MAC7EJ,SAAS,CAACK,WAAW,CAAC,WAAW,EAAEpJ,IAAI,CAACqJ,sBAAsB,CAACH,iBAAiB,CAAC,CAAC;MAClFlJ,IAAI,CAACqG,gBAAgB,CAAC6C,iBAAiB,CAAC;MACxC,KAAK,IAAI5B,IAAI,IAAItH,IAAI,CAACU,IAAI,EAAE;QAC1B6D,IAAI,CAAC8D,IAAI,CAAC,kBAAkB,CAAC,CAAUiB,OAAO,CAACtJ,IAAI,CAACU,IAAI,CAAC4G,IAAI,CAAC,CAACxF,OAAO,CAAC;MAEzE;MACA;;MAEAiH,SAAS,CAACK,WAAW,CAAC,OAAO,EAAEpJ,IAAI,CAAC;MACpC+I,SAAS,CAACK,WAAW,CAAC,oBAAoB,EAAEpJ,IAAI,CAAC6G,kBAAkB,CAAC,CAAC,CAAC0C,IAAI,CAAC,CAAC,CAAC;IAC9E;IACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ/E,aAAaA,CAACqE,KAAY,EAAQ;MACxC,IAAIhH,MAAM,GAAGgH,KAAK,CAACW,SAAS,CAAC,CAAW;MACxC;MACA;MACA,IAAIC,IAAI,GAAGZ,KAAK,CAACa,aAAa,CAAC,CAAC,CAAC5F,YAAoB;MACrD,IAAIiF,SAAS,GAAG,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAc;MAClD,IAAIhF,IAAI,GAAGnC,MAAM,CAAC8H,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;MAC3C,IAAIlJ,cAAc,GAAGsI,SAAS,CAACE,WAAW,CAACjF,IAAI,CAAC;MAChD,KAAK,IAAI4F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnJ,cAAc,CAACmB,MAAM,EAAEgI,CAAC,EAAE,EAAE;QAC/Cb,SAAS,CAACK,WAAW,CAACpF,IAAI,GAAE,IAAG4F,CAAE,SAAQ,EAAE,KAAK,CAAC;QAEjD,IAAIb,SAAS,CAACE,WAAW,CAACjF,IAAI,GAAE,IAAG4F,CAAE,OAAM,CAAC,IAAIH,IAAI,CAAChB,OAAO,CAAC,CAAC,EAAE;UAC/DM,SAAS,CAACK,WAAW,CAACpF,IAAI,GAAE,IAAG4F,CAAE,SAAQ,EAAE,IAAI,CAAC;QACjD;MACD;MACA,IAAI5J,IAAI,GAAG+I,SAAS,CAACE,WAAW,CAAC,OAAO,CAAC;MACzCF,SAAS,CAACK,WAAW,CAAC,oBAAoB,EAAEpJ,IAAI,CAAC6G,kBAAkB,CAAC,CAAC,CAAC0C,IAAI,CAAC,CAAC,CAAC;IAC9E;IACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ3E,cAAcA,CAACiE,KAAY,EAAQ;MACzC,IAAIE,SAAS,GAAG,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAc;MAClD,IAAIhJ,IAAI,GAAG+I,SAAS,CAACE,WAAW,CAAC,OAAO,CAAgB;MACxD,IAAIY,MAAM,GAAGhB,KAAK,CAACW,SAAS,CAAC,CAAW;MACxC,IAAIxF,IAAI,GAAG6F,MAAM,CAACF,cAAc,CAAC,MAAM,CAAC;MAExC,IAAIrH,QAAQ,GAAGyG,SAAS,CAACE,WAAW,CAACjF,IAAI,CAAC;MAC1C,IAAIX,UAAU,GAAG0F,SAAS,CAACE,WAAW,CAACjF,IAAI,CAAC8F,SAAS,CAAC,CAAC,EAAE9F,IAAI,CAAC+F,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;MAChF;MACA1G,UAAU,GAAKA,UAAU,CAACvB,OAAO,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAYiI,eAAe,CAAC,CAAC,CAAUvB,OAAO,CAAC,CAAC;MACjG;MACAzI,IAAI,CAAC4E,cAAc,CAACtC,QAAQ,EAAEe,UAAU,CAAC;MAEzC0F,SAAS,CAACK,WAAW,CAAC,OAAO,EAAEpJ,IAAI,CAAC;MACpC+I,SAAS,CAACK,WAAW,CAAC,oBAAoB,EAAEpJ,IAAI,CAAC6G,kBAAkB,CAAC,CAAC,CAAC0C,IAAI,CAAC,CAAC,CAAC;IAC9E;IACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQU,gBAAgBA,CAACpB,KAAY,EAAE;MACrC,IAAIqB,KAAK,GAAG,IAAI,CAACpC,OAAO,CAAC,CAAC;MAC1B,IAAIvD,IAAI,GAAG,IAAI;MACf,IAAI;QACFA,IAAI,CAAC4F,YAAY,CAAkBC,IAAI,CAAC,EAAE,CAAC;MAC7C,CAAC,CAAC,OAAO7G,KAAK,EAAE;QACf8G,QAAQ,CAACC,IAAI,CAAC;UACb3H,EAAE,EAAE,eAAe;UACnB2E,IAAI,EAAE,8BAA8B;UACpCiD,UAAU,EAAE;QACb,CAAC,CAAC,CAACC,IAAI,CAAC,UAAUC,MAAW,EAAC;UAC5BA,MAAM,CAAkB1C,QAAQ,CAACmC,KAAK,CAAClB,QAAQ,CAAC,WAAW,CAAC,CAAC;UAC7DyB,MAAM,CAAkBL,IAAI,CAAC,EAAE,CAAC;UACjC7F,IAAI,CAAC4F,YAAY,GAAGM,MAAM;QAC3B,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;MACd;IACD;IACOC,aAAaA,CAAC9B,KAAY,EAAE;MAClC,IAAI+B,SAAS,GAAG/B,KAAK,CAACgC,YAAY,CAAC,kBAAkB,CAAC;MACtD,IAAI9B,SAAS,GAAG,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAc;MAClD,IAAIhJ,IAAI,GAAG+I,SAAS,CAACE,WAAW,CAAC,OAAO,CAAgB;MACxD,IAAI2B,SAAS,IAAIA,SAAS,CAAChJ,MAAM,EAAE;QAClCgJ,SAAS,CAACE,GAAG,CAAC,UAAUC,QAAa,EAAE;UACtC,IAAI;YACH/K,IAAI,CAACuH,gBAAgB,CAACwD,QAAQ,CAACC,SAAS,CAAC,CAAC,CAAC9K,IAAI,CAAC;UACjD,CAAC,CAAC,OAAOqD,KAAK,EAAE;YACfC,OAAO,CAACC,IAAI,CAACF,KAAK,CAAC;UACpB;QACD,CAAC,CAAC;QACFwF,SAAS,CAACK,WAAW,CAAC,iBAAiB,EAAEpJ,IAAI,CAACgG,cAAc,CAAC;QAC7D+C,SAAS,CAACK,WAAW,CAAC,OAAO,EAAEpJ,IAAI,CAAC;MACrC;MACA;MACA;MACC6I,KAAK,CAACW,SAAS,CAAC,CAAC,CAAkByB,UAAU,CAAC,OAAO,CAAC,CAACC,MAAM,CAAC,EAAE,CAAC;MAClEnC,SAAS,CAACK,WAAW,CAAC,oBAAoB,EAAEpJ,IAAI,CAAC6G,kBAAkB,CAAC,CAAC,CAAC0C,IAAI,CAAC,CAAC,CAAC;IAC9E;IACO4B,QAAQA,CAACtC,KAAY,EAAE;MAC7B,IAAIuC,MAAM,GAAGvC,KAAK,CAACgC,YAAY,CAAC,OAAO,CAAC;MACxC,IAAIQ,OAAO,GAAG,IAAIC,MAAM,CAAC,MAAM,EAAEC,cAAc,CAACC,QAAQ,EAAEJ,MAAM,CAAC;MACjE,IAAIK,QAAQ,GAAG5C,KAAK,CAACgC,YAAY,CAAC,cAAc,CAAC;MACjDY,QAAQ,CAACP,MAAM,CAAC,CAACG,OAAO,CAAC,CAAC;IAC3B;IACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQK,mBAAmBA,CAAA,EAAS;MAClC;MACA,IAAI3C,SAAS,GAAG,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAc;MAClD,IAAIhJ,IAAI,GAAG+I,SAAS,CAACE,WAAW,CAAC,OAAO,CAAgB;MACxD,IAAI0C,IAAQ,GAAG;QACdpF,aAAa,EAAMwC,SAAS,CAACE,WAAW,CAAC,gBAAgB,CAAC;QAC1DjD,cAAc,EAAK+C,SAAS,CAACE,WAAW,CAAC,iBAAiB,CAAC;QAC3D2C,iBAAiB,EAAE7C,SAAS,CAACE,WAAW,CAAC,oBAAoB,CAAC;QAC9D9C,QAAQ,EAAW4C,SAAS,CAACE,WAAW,CAAC,WAAW,CAAC;QACrD4C,SAAS,EAAO7L,IAAI,CAACoH,aAAa,CAAC;MACpC,CAAC;MACD,IAAI0E,UAAU,GAAGC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;;MAErC;MACAM,IAAI,CAACC,IAAI,CAACJ,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,kBAAkB,EAAE,OAAO,CAAC;IACnE;IACOK,gBAAgBA,CAACtD,KAAY,EAAE;MACrC;MACA,IAAItE,IAAI,GAAG,IAAI;MACf,IAAI;QACFA,IAAI,CAAC6H,YAAY,CAAYhC,IAAI,CAAC,CAAC;MACrC,CAAC,CAAC,OAAO7G,KAAK,EAAE;QACf8G,QAAQ,CAACC,IAAI,CAAC;UACb3H,EAAE,EAAE,gBAAgB;UACpB2E,IAAI,EAAE,8BAA8B;UACpCiD,UAAU,EAAE;QACb,CAAC,CAAC,CAACC,IAAI,CAAC,UAAUC,MAAW,EAAC;UAC7B;UACCA,MAAM,CAAYL,IAAI,CAAC,CAAC;UACzB7F,IAAI,CAAC6H,YAAY,GAAG3B,MAAM;QAC3B,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;MACd;IACD;IACO2B,WAAWA,CAACxD,KAAY,EAAQ;MACtC,IAAI,CAACuD,YAAY,CAACE,KAAK,CAAC,CAAC;IAC1B;IACOC,iBAAiBA,CAAC1D,KAAY,EAAQ;MAC5C;MACA,IAAI2D,IAAI,GAAG3D,KAAK,CAACa,aAAa,CAAC,CAAC,CAACD,IAAI,CAACgD,aAAa,CAAC,CAAC;MACrD,IAAIlI,IAAI,GAAG,IAAI;MACf,IAAImI,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC7B,IAAI5D,SAAS,GAAG,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAc;;MAElD;MACA0D,MAAM,CAACE,UAAU,CAACJ,IAAI,CAAC;;MAEvB;MACAE,MAAM,CAACG,MAAM,GAAG,YAAW;QAC1B,IAAIlB,IAAI,GAAGI,IAAI,CAACe,KAAK,CAACJ,MAAM,CAACpL,MAAgB,CAAC;QAC9C;QACA,IAAI;UACHyH,SAAS,CAACK,WAAW,CAAC,gBAAgB,EAAEuC,IAAI,CAACpF,aAAa,CAAC;UAC3DwC,SAAS,CAACK,WAAW,CAAC,iBAAiB,EAAEuC,IAAI,CAAC3F,cAAc,CAAC;UAC7D+C,SAAS,CAACK,WAAW,CAAC,oBAAoB,EAAEuC,IAAI,CAACC,iBAAiB,CAAC;UACnE7C,SAAS,CAACK,WAAW,CAAC,WAAW,EAAEuC,IAAI,CAACxF,QAAQ,CAAC;UAEjD,IAAI0F,SAAc,GAAGF,IAAI,CAACE,SAAS;UAEnC,IAAI7L,IAAgB;UACpBA,IAAI,GAAG+I,SAAS,CAACE,WAAW,CAAC,OAAO,CAAC;UACrC,IAAIjJ,IAAI,EAAE;YACTA,IAAI,CAAC2G,cAAc,CAAC,CAAC;UACtB;UACA;UACA3G,IAAI,GAAG,IAAI8F,WAAW,CAACvB,IAAI,CAACyE,QAAQ,CAAC,WAAW,CAAC,CAACC,WAAW,CAAC,QAAQ,CAAC,EAAE1E,IAAI,CAACyE,QAAQ,CAAC,eAAe,CAAC,CAACC,WAAW,CAAC,YAAY,CAAC,CAAC;UAElIjJ,IAAI,CAACuE,IAAI,GAAGA,IAAI;UAChBvE,IAAI,CAACqG,gBAAgB,CAACsF,IAAI,CAACpF,aAAa,CAAC;UAEzC,KAAK,IAAIe,IAAI,IAAItH,IAAI,CAACU,IAAI,EAAE;YAC1B6D,IAAI,CAAC8D,IAAI,CAAC,kBAAkB,CAAC,CAAUiB,OAAO,CAACtJ,IAAI,CAACU,IAAI,CAAC4G,IAAI,CAAC,CAACxF,OAAO,CAAC;UACzE;UAEAiH,SAAS,CAACK,WAAW,CAAC,OAAO,EAAEpJ,IAAI,CAAC;QAErC,CAAC,CAAC,OAAOuD,KAAK,EAAE;UACfwJ,UAAU,CAACC,IAAI,CAAC,mDAAmD,CAAC;QACrE;QACA;MACD,CAAC;IACF;;IACO7E,gBAAgBA,CAACU,KAAY,EAAQ,CAE5C;EACD;EAAC,OAAArB,cAAA;AAAA"}