{"version":3,"file":"Component-preload.js","sections":[{"offset":{"line":1,"column":0},"map":{"version":3,"names":[],"sources":["Component-preload.js?bundle-code-0"],"mappings":"AAAA;AACA","sourcesContent":["sap.ui.require.preload({\n"],"sourceRoot":""}},{"offset":{"line":3,"column":0},"map":{"version":3,"file":"Component.js","names":["support","sap_ui_Device","models","_interopRequireDefault","__models","Component","UIComponent","extend","metadata","manifest","interfaces","init","_init","UIComponent.prototype.init.call","this","GoodModel","JSONModel","FactorieModel","setDefaultBindingMode","setModel","createDeviceModel","getRouter","initialize","getContentDensityClass","_getContentDensityClass","contentDensityClass","undefined","document","body","classList","contains","touch"],"sources":["../src/Component.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-call */\r\n/* eslint-disable no-case-declarations */\r\nimport UIComponent from \"sap/ui/core/UIComponent\";\r\nimport { support } from \"sap/ui/Device\";\r\nimport models from \"./model/models\";\r\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\r\nimport IconPool from \"sap/ui/core/IconPool\";\r\n\r\n// import additional dependencies to bundle them properly\r\nimport \"sap/ui/core/ComponentSupport\";\r\nimport \"sap/ui/core/date/Gregorian\";\r\nimport \"sap/ui/model/type/Date\";\r\nimport Log from \"sap/base/Log\";\r\n\r\n/**\r\n * @namespace de.henloh.prodts\r\n */\r\nexport default class Component extends UIComponent {\r\n\r\n\tpublic static metadata = {\r\n\t\tmanifest: \"json\",\r\n\t\tinterfaces: [\"sap.ui.core.IAsyncContentCreation\"],\r\n\t};\r\n\r\n\tprivate contentDensityClass : string;\r\n\r\n\tpublic init() : void {\r\n\t\t// call the base component's init function\r\n\t\tsuper.init();\r\n\r\n\t\tvar GoodModel = new JSONModel(\"./data/Products.json\")\r\n\t\tvar FactorieModel = new JSONModel(\"./data/Factories.json\")\r\n\t\tGoodModel.setDefaultBindingMode(\"TwoWay\");\r\n\t\tFactorieModel.setDefaultBindingMode(\"TwoWay\");\r\n\r\n\t\tthis.setModel(GoodModel, \"GoodModel\");\r\n\t\tthis.setModel(FactorieModel, \"FactorieModel\");\r\n\t\tthis.setModel(models.createDeviceModel(), \"device\");\r\n\r\n\t\t// create the views based on the url/hash\r\n\t\tthis.getRouter().initialize();\r\n\t}\r\n\r\n\t/**\r\n\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\r\n\t * design mode class should be set, which influences the size appearance of some controls.\r\n\t *\r\n\t * @public\r\n\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\r\n\t */\r\n\tpublic getContentDensityClass() : string {\r\n\t\tif (this.contentDensityClass === undefined) {\r\n\t\t\t// check whether FLP has already set the content density class; do nothing in this case\r\n\t\t\tif (document.body.classList.contains(\"sapUiSizeCozy\") || document.body.classList.contains(\"sapUiSizeCompact\")) {\r\n\t\t\t\tthis.contentDensityClass = \"\";\r\n\t\t\t} else if (!support.touch) { // apply \"compact\" mode if touch is not supported\r\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCompact\";\r\n\t\t\t} else {\r\n\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\r\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCozy\";\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.contentDensityClass;\r\n\t}\r\n\r\n}\r\n"],"mappings":"AAAA,0TAGSA,EAAOC,EAAA,iBACTC,EAAMC,EAAAC,GAUb,MAGqBC,EAAkBC,EAAWC,OAAA,8BAEnCC,SAAW,CACxBC,SAAU,OACVC,WAAY,CAAC,sCAKPC,KAAI,SAAAC,IAEVC,sBAAAC,MAEA,IAAIC,EAAY,IAAIC,EAAU,wBAC9B,IAAIC,EAAgB,IAAID,EAAU,yBAClCD,EAAUG,sBAAsB,UAChCD,EAAcC,sBAAsB,UAEpCJ,KAAKK,SAASJ,EAAW,aACzBD,KAAKK,SAASF,EAAe,iBAC7BH,KAAKK,SAASjB,EAAOkB,oBAAqB,UAG1CN,KAAKO,YAAYC,YAClB,EASOC,uBAAsB,SAAAC,IAC5B,GAAIV,KAAKW,sBAAwBC,UAAW,CAE3C,GAAIC,SAASC,KAAKC,UAAUC,SAAS,kBAAoBH,SAASC,KAAKC,UAAUC,SAAS,oBAAqB,CAC9GhB,KAAKW,oBAAsB,EAC5B,MAAO,IAAKzB,EAAQ+B,MAAO,CAC1BjB,KAAKW,oBAAsB,kBAC5B,KAAO,CAENX,KAAKW,oBAAsB,eAC5B,CACD,CACA,OAAOX,KAAKW,mBACb,IAAC,OA9CmBpB,CAAS","sourceRoot":""}},{"offset":{"line":6,"column":0},"map":{"version":3,"file":"App.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","App","extend","onInit","_onInit","this","getView","addStyleClass","getOwnerComponent","getContentDensityClass"],"sources":["../../src/controller/App.controller.ts"],"sourcesContent":["import BaseController from \"./BaseController\";\r\n\r\n/**\r\n * @namespace de.henloh.prodts.controller\r\n */\r\nexport default class App extends BaseController {\r\n\r\n\tpublic onInit() : void {\r\n\t\t// apply content density mode to root view\r\n\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\r\n\t}\r\n\r\n}\r\n"],"mappings":"AAAA,mJAAOA,EAAcC,EAAAC,GAErB,MAGqBC,EAAYH,EAAcI,OAAA,mCAEvCC,OAAM,SAAAC,IAEZC,KAAKC,UAAUC,cAAcF,KAAKG,oBAAoBC,yBACvD,IAAC,OALmBR,CAAG","sourceRoot":"controller"}},{"offset":{"line":9,"column":0},"map":{"version":3,"file":"BaseController.js","names":["Game","___Types","BaseController","Controller","extend","getOwnerComponent","_getOwnerComponent","Controller.prototype.getOwnerComponent.call","this","getRouter","_getRouter","UIComponent","getRouterFor","getResourceBundle","_getResourceBundle","oModel","getModel","_getModel","sName","getView","setModel","_setModel","navTo","_navTo","oParameters","bReplace","undefined","onNavBack","_onNavBack","sPreviousHash","History","getInstance","getPreviousHash","window","history","go","getData","_getData","products","factories","Goods","Factories"],"sources":["../../src/controller/BaseController.ts"],"sourcesContent":["import Controller from \"sap/ui/core/mvc/Controller\";\r\nimport UIComponent from \"sap/ui/core/UIComponent\";\r\nimport AppComponent from \"../Component\";\r\nimport Model from \"sap/ui/model/Model\";\r\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\r\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\r\nimport Router from \"sap/ui/core/routing/Router\";\r\nimport {Game, Product, Factory} from \"./Types\";\r\nimport History from \"sap/ui/core/routing/History\";\r\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\r\n\r\n/**\r\n * @namespace de.henloh.prodts.controller\r\n */\r\n\r\nexport default abstract class BaseController extends Controller {\r\n\r\n\t/**\r\n\t * Convenience method for accessing the component of the controller's view.\r\n\t * @returns The component of the controller's view\r\n\t */\r\n\tpublic getOwnerComponent(): AppComponent {\r\n\t\treturn (super.getOwnerComponent() as AppComponent);\r\n\t}\r\n\r\n\t/**\r\n\t * Convenience method to get the components' router instance.\r\n\t * @returns The router instance\r\n\t */\r\n\tpublic getRouter() : Router {\r\n\t\treturn UIComponent.getRouterFor(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Convenience method for getting the i18n resource bundle of the component.\r\n\t * @returns The i18n resource bundle of the component\r\n\t */\r\n\tpublic getResourceBundle(): ResourceBundle | Promise<ResourceBundle> {\r\n\t\tconst oModel = this.getOwnerComponent().getModel(\"i18n\") as ResourceModel;\r\n\t\treturn oModel.getResourceBundle();\r\n\t}\r\n\r\n\t/**\r\n\t * Convenience method for getting the view model by name in every controller of the application.\r\n\t * @param [sName] The model name\r\n\t * @returns The model instance\r\n\t */\r\n\tpublic getModel(sName?: string) : Model {\r\n\t\treturn this.getView().getModel(sName);\r\n\t}\r\n\r\n\t/**\r\n\t * Convenience method for setting the view model in every controller of the application.\r\n\t * @param oModel The model instance\r\n\t * @param [sName] The model name\r\n\t * @returns The current base controller instance\r\n\t */\r\n\tpublic setModel(oModel: Model, sName?: string) : BaseController {\r\n\t\tthis.getView().setModel(oModel, sName);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Convenience method for triggering the navigation to a specific target.\r\n\t * @public\r\n\t * @param sName Target name\r\n\t * @param [oParameters] Navigation parameters\r\n\t * @param [bReplace] Defines if the hash should be replaced (no browser history entry) or set (browser history entry)\r\n\t */\r\n\tpublic navTo(sName: string, oParameters?: object, bReplace?: boolean) : void {\r\n\t\tthis.getRouter().navTo(sName, oParameters, undefined, bReplace);\r\n\t}\r\n\r\n\t/**\r\n\t * Convenience event handler for navigating back.\r\n\t * It there is a history entry we go one step back in the browser history\r\n\t * If not, it will replace the current entry of the browser history with the main route.\r\n\t */\r\n\tpublic onNavBack(): void {\r\n\t\tconst sPreviousHash = History.getInstance().getPreviousHash();\r\n\t\tif (sPreviousHash !== undefined) {\r\n\t\t\twindow.history.go(-1);\r\n\t\t} else {\r\n\t\t\tthis.getRouter().navTo(\"main\", {}, undefined, true);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getData(): Game {\r\n\r\n\t\tvar products = this.getOwnerComponent().getModel(\"Goods\") as JSONModel;\r\n\t\tvar factories = this.getOwnerComponent().getModel(\"Factories\") as JSONModel;\r\n\t\t//console.log(products);\r\n\t\t//console.log(\r\n\t\t//\tfactories.getProperty(\"/\"));\r\n\t\t\r\n\t\treturn new Game(\r\n\t\t\tproducts.getData().Goods,\r\n\t\t\tfactories.getData().Factories\r\n\t\t);\r\n\t}\r\n\r\n}\r\n"],"mappings":"AAAA,oJAOQA,EAAIC,EAAA,QAIZ,MAI8BC,EAAuBC,EAAUC,OAAA,8CAMvDC,kBAAiB,SAAAC,IACvB,OAAAC,mCAAAC,KACD,EAMOC,UAAS,SAAAC,IACf,OAAOC,EAAYC,aAAaJ,KACjC,EAMOK,kBAAiB,SAAAC,IACvB,MAAMC,EAASP,KAAKH,oBAAoBW,SAAS,QACjD,OAAOD,EAAOF,mBACf,EAOOG,SAAQ,SAAAC,EAACC,GACf,OAAOV,KAAKW,UAAUH,SAASE,EAChC,EAQOE,SAAQ,SAAAC,EAACN,EAAeG,GAC9BV,KAAKW,UAAUC,SAASL,EAAQG,GAChC,OAAOV,IACR,EASOc,MAAK,SAAAC,EAACL,EAAeM,EAAsBC,GACjDjB,KAAKC,YAAYa,MAAMJ,EAAOM,EAAaE,UAAWD,EACvD,EAOOE,UAAS,SAAAC,IACf,MAAMC,EAAgBC,EAAQC,cAAcC,kBAC5C,GAAIH,IAAkBH,UAAW,CAChCO,OAAOC,QAAQC,IAAI,EACpB,KAAO,CACN3B,KAAKC,YAAYa,MAAM,OAAQ,CAAC,EAAGI,UAAW,KAC/C,CACD,EAEOU,QAAO,SAAAC,IAEb,IAAIC,EAAW9B,KAAKH,oBAAoBW,SAAS,SACjD,IAAIuB,EAAY/B,KAAKH,oBAAoBW,SAAS,aAKlD,OAAO,IAAIhB,EACVsC,EAASF,UAAUI,MACnBD,EAAUH,UAAUK,UAEtB,IAAC,OApF4BvC,CAAc","sourceRoot":"controller"}},{"offset":{"line":12,"column":0},"map":{"version":3,"file":"Main.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","formatter","__formatter","Main","extend","constructor","prototype","apply","this","arguments","onInit","_onInit","Model","JSONModel","setData","Factory","isFactory","Products","Materials","Cost","ProductionCap","Product","isProduct","BoughtBy","ProducedBy","Dangerous","Illegal","AvgPrice","Level","getView","setModel","getRouter","getRoute","attachPatternMatched","onPatternMatched","inputG","byId","inputF","setFilterFunction","sTerm","oItem","getText","match","RegExp","buildProdLine","_buildProdLine","event","navTo","_onPatternMatched","getData","ViewModel","getModel","query","getParameter","factory","setProperty","replace","submitFactory","good","submitGood","error","console","_submitGood","Data","getProduct","getProperty","getCustomersOfProduct","Name","getFactoriesFromProduct","_submitFactory","getFactory","getMaterialsForFactory","getProductsFromFactory","onSelectNewFactory","_onSelectNewFactory","onSelectNewProduct","_onSelectNewProduct","FormatCredits","_FormatCredits","number","format","NumberFormat","getIntegerInstance","groupingEnabled","groupingSize","groupingSeparator","showAllProducts","_showAllProducts","that","data","Goods","showAllFactories","_showAllFactories","Factories"],"sources":["../../src/controller/Main.controller.ts"],"sourcesContent":["import MessageBox from \"sap/m/MessageBox\";\r\nimport BaseController from \"./BaseController\";\r\nimport formatter from \"../model/formatter\";\r\nimport Event from \"sap/ui/base/Event\";\r\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\r\nimport Input from \"sap/m/Input\";\r\nimport SuggestionItem from \"sap/m/SuggestionItem\";\r\nimport NumberFormat from \"sap/ui/core/format/NumberFormat\";\r\n\r\n/**\r\n * @namespace de.henloh.prodts.controller\r\n */\r\nexport default class Main extends BaseController {\r\n\tprivate formatter = formatter;\r\n\r\n\tpublic onInit(): void {\r\n\t\tvar Model = new JSONModel();\r\n\t\tModel.setData({\r\n\t\t\tFactory: \"\",\r\n\t\t\tisFactory: false,\r\n\t\t\tProducts: [],\r\n\t\t\tMaterials: [],\r\n\t\t\tCost: 0,\r\n\t\t\tProductionCap: 0,\r\n\t\t\t\r\n\t\t\tProduct: \"\",\r\n\t\t\tisProduct: false,\r\n\t\t\tBoughtBy: [],\r\n\t\t\tProducedBy: [],\r\n\t\t\tDangerous: false,\r\n\t\t\tIllegal: false,\r\n\t\t\tAvgPrice: 0,\r\n\t\t\tLevel: 0\r\n\t\t});\r\n\t\tthis.getView().setModel(Model, \"View\");\r\n\t\tthis.getRouter().getRoute(\"main\").attachPatternMatched(this.onPatternMatched, this);\r\n\r\n\t\tvar inputG = this.byId(\"productInput\") as Input\r\n\t\tvar inputF = this.byId(\"factoryInput\") as Input\r\n\t\t//@ts-ignore\r\n\t\tinputG.setFilterFunction(function (sTerm: string, oItem:SuggestionItem) {\r\n\t\t\treturn oItem.getText().match(new RegExp(\"^\"+sTerm, \"i\"));\r\n\t\t});\r\n\t\t//@ts-ignore\r\n\t\tinputF.setFilterFunction(function (sTerm: string, oItem:SuggestionItem) {\r\n\t\t\treturn oItem.getText().match(new RegExp(\"^\"+sTerm, \"i\"));\r\n\t\t});\r\n\t}\r\n\tpublic buildProdLine(event: Event): void {\r\n\t\tthis.getRouter().navTo(\"productionLine\");\r\n\t}\r\n\tpublic onPatternMatched(event: Event): void {\r\n\t\tvar Model = new JSONModel()\r\n\t\tModel.setData(this.getData())\r\n\t\tthis.getView().setModel(Model, \"Data\")\r\n\r\n\t\tvar ViewModel = this.getView().getModel(\"View\") as JSONModel;\r\n\r\n\t\ttry {\r\n\t\t\tvar query = event.getParameter(\"arguments\")[\"?query\"];\r\n\t\t\tif (query.factory) {\r\n\t\t\t\tViewModel.setProperty(\"/Factory\", query.factory.replace(\"%2520\", \" \"));\r\n\t\t\t\tthis.submitFactory(event);\r\n\t\t\t}\r\n\t\t\tif (query.good) {\r\n\t\t\t\tViewModel.setProperty(\"/Product\", query.good.replace(\"%2520\", \" \"));\r\n\t\t\t\tthis.submitGood(event);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}\r\n\tpublic submitGood(event: Event): void {\r\n\t\tvar Data = this.getData();\r\n\t\tvar Model = this.getView().getModel(\"View\") as JSONModel;\r\n\t\tvar Product = Data.getProduct(Model.getProperty(\"/Product\"));\r\n\t\tModel.setProperty(\"/isProduct\", true);\r\n\t\tModel.setProperty(\"/isFactory\", false);\r\n\t\tModel.setProperty(\"/Illegal\", Product.Illegal);\r\n\t\tModel.setProperty(\"/Dangerous\", Product.Dangerous);\r\n\t\tModel.setProperty(\"/AvgPrice\", Product.AvgPrice);\r\n\t\tModel.setProperty(\"/Level\", Product.Level);\r\n\t\tModel.setProperty(\"/BoughtBy\", Data.getCustomersOfProduct(Product.Name));\r\n\t\tModel.setProperty(\"/ProducedBy\", Data.getFactoriesFromProduct(Product.Name));\r\n\r\n\t\tthis.getRouter().navTo(\"main\", {query: {\r\n\t\t\tgood: Model.getProperty(\"/Product\")\r\n\t\t\t}}, {}, true)\r\n\t}\r\n\tpublic submitFactory(event: Event): void {\r\n\t\tvar Data = this.getData();\r\n\t\tvar Model = this.getView().getModel(\"View\") as JSONModel;\r\n\t\tvar Factory = Data.getFactory(Model.getProperty(\"/Factory\"));\r\n\t\tModel.setProperty(\"/isProduct\", false);\r\n\t\tModel.setProperty(\"/isFactory\", true);\r\n\t\tModel.setProperty(\"/Cost\", Factory.Cost);\r\n\t\tModel.setProperty(\"/ProductionCap\", Factory.ProductionCap);\r\n\t\tModel.setProperty(\"/Materials\", Data.getMaterialsForFactory(Factory.Name));\r\n\t\tModel.setProperty(\"/Products\", Data.getProductsFromFactory(Factory.Name));\r\n\r\n\t\tthis.getRouter().navTo(\"main\", {query: {\r\n\t\t\tfactory: Model.getProperty(\"/Factory\")\r\n\t\t\t}}, {}, true)\r\n\t}\r\n\tpublic onSelectNewFactory(event: Event, Factory: string) {\r\n\t\tvar Model = this.getView().getModel(\"View\") as JSONModel;\r\n\t\tModel.setProperty(\"/Factory\", Factory);\r\n\t\tthis.submitFactory(event);\r\n\t}\r\n\tpublic onSelectNewProduct(event: Event, Product: string) {\r\n\t\tvar Model = this.getView().getModel(\"View\") as JSONModel;\r\n\t\tModel.setProperty(\"/Product\", Product);\r\n\t\tthis.submitGood(event);\r\n\t}\r\n\tpublic FormatCredits(number: float): string{\r\n\t\tvar format: NumberFormat = NumberFormat.getIntegerInstance({\r\n\t\t\tgroupingEnabled: true,\r\n\t\t\tgroupingSize: 3,\r\n\t\t\tgroupingSeparator: \",\"\r\n\t\t});\r\n\t\treturn format.format(number);\r\n\t}\r\n\tpublic showAllProducts(event: Event): void {\r\n\t\tvar Model = this.getView().getModel(\"View\") as JSONModel;\r\n\t\tvar that = this;\r\n\t\tModel.setProperty(\"/isProduct\", false);\r\n\t\tModel.setProperty(\"/isFactory\", true);\r\n\t\tModel.setProperty(\"/Cost\", \"\");\r\n\t\tModel.setProperty(\"/ProductionCap\", \"\");\r\n\t\tModel.setProperty(\"/Materials\", []);\r\n\t\tvar data = that.getData().Goods;\r\n\t\t//console.log(data);\r\n\t\tModel.setProperty(\"/Products\", data);\r\n\t}\r\n\tpublic showAllFactories(event: Event): void {\r\n\t\tvar Model = this.getView().getModel(\"View\") as JSONModel;\r\n\t\tvar that = this;\r\n\t\tModel.setProperty(\"/isProduct\", true);\r\n\t\tModel.setProperty(\"/isFactory\", false);\r\n\t\tModel.setProperty(\"/Illegal\", false);\r\n\t\tModel.setProperty(\"/Dangerous\", false);\r\n\t\tModel.setProperty(\"/AvgPrice\", \"\");\r\n\t\tModel.setProperty(\"/Level\", \"\");\r\n\t\tModel.setProperty(\"/BoughtBy\", []);\r\n\t\tvar data = that.getData().Factories;\r\n\t\t//console.log(data);\r\n\t\tModel.setProperty(\"/ProducedBy\", data);\r\n\t}\r\n}\r\n"],"mappings":"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","sourceRoot":"controller"}},{"offset":{"line":15,"column":0},"map":{"version":3,"file":"Permutation.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","formatter","__formatter","Permutation","extend","constructor","prototype","apply","this","arguments","onInit","_onInit","Model","JSONModel","document","title","setData","text","getView","setModel","getRouter","getRoute","attachPatternMatched","onPatternMatched","_onPatternMatched","event","zooExample","_zooExample","model","getModel","setProperty","generateCSV","doorExample","_doorExample","clearData","_clearData","downloadCSV","_downloadCSV","csvContent","getProperty","hiddenElement","createElement","href","encodeURI","target","download","click","_generateCSV","data","Final","Obj","JSON","parse","column","columns","dataKeys","Object","keys","rowCount","entry","length","permutatedData","addPart","permutations","options","result","index","permutation","partIndex","resultpart","remainingOptions","stringify","optionData","dataOptionsIndex","permutationOption","optionName","name","columnFillerIndex","columnFillerPartIndex","parts","columnPart","field","hasVoids","row","checkPermutation","checkPermutationText","push","basepermutations","baseoptions","element","fieldname","rows","error","console"],"sources":["../../src/controller/Permutation.controller.ts"],"sourcesContent":["import BaseController from \"./BaseController\";\r\nimport formatter from \"../model/formatter\";\r\nimport Event from \"sap/ui/base/Event\";\r\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\r\nimport Page from \"sap/m/Page\";\r\n\r\n/**\r\n * @namespace de.henloh.prodts.controller\r\n */\r\nexport default class Permutation extends BaseController {\r\n\tprivate formatter = formatter;\r\n\r\n\tpublic onInit(): void {\r\n\t\tvar Model = new JSONModel();\r\n\t\tdocument.title = \"Permutation\";\r\n\t\tModel.setData({text: \"\"});\r\n\t\tthis.getView().setModel(Model, \"View\");\r\n\t\tthis.getRouter().getRoute(\"main\").attachPatternMatched(this.onPatternMatched, this);\r\n\t}\r\n\tpublic onPatternMatched(event: Event): void {\r\n\r\n\t}\r\n\tpublic zooExample(event: Event): void {\r\n\t\tvar model = this.getView().getModel(\"View\") as JSONModel;\r\n\t\tmodel.setProperty(\"/text\", \r\n`{\r\n\t\"columns\": [{\r\n\t\t\"title\": \"Animal\",\r\n\t\t\"parts\": [[\"animals\", \"animal\"],[\"colors\", \"color\"],[\"foods\", \"food\"]]\r\n\t},{\r\n\t\t\"title\": \"Home\",\r\n\t\t\"parts\": [[\"continent\"]]\r\n\t},{\r\n\t\t\"title\": \"Weight and Height\",\r\n\t\t\"parts\": [[\"animals\", \"weight\"],[\"space\"],[\"animals\", \"height\"]]\r\n\t}],\r\n\t\"data\": {\r\n\t\t\"animals\": [\r\n\t\t\t{\"animal\": \"Zebras are \",\r\n\t\t\t\t\"weight\": \"800kg\",\r\n\t\t\t\t\"height\": \"200cm\"},\r\n\t\t\t{\"animal\": \"Lions are \",\r\n\t\t\t\t\"weight\": \"400kg\",\r\n\t\t\t\t\"height\": \"100cm\"}\r\n\t\t],\r\n\t\t\"colors\": [\r\n\t\t\t{\"color\": \"black and white\"},\r\n\t\t\t{\"color\": \"purple\"},\r\n\t\t\t{\"color\": \"green\"}\r\n\t\t],\r\n\t\t\"foods\": [\r\n\t\t\t{\"food\": \" and likes to eat grass.\"},\r\n\t\t\t{\"food\": \" and likes to eat lions.\"},\r\n\t\t\t{\"food\": \" and likes to eat girafes.\"}\r\n\t\t],\r\n\t\t\"continent\": [\"Africa\"],\r\n\t\t\"space\": [\" \"]\r\n\t}\r\n}`\r\n\t\t\t);\r\n\t\tthis.generateCSV(event);\r\n\t}\r\n\tpublic doorExample(event: Event): void {\r\n\t\tvar model = this.getView().getModel(\"View\") as JSONModel;\r\n\t\tmodel.setProperty(\"/text\", \r\n`{\r\n\t\"columns\": [{\r\n\t\t\"title\": \"Year of Production\",\r\n\t\t\"parts\": [[\"yop\"]]\r\n\t},{\r\n\t\t\"title\": \"Part number\",\r\n\t\t\"parts\": [[\"handles\", \"partno\"], [\"frames\", \"partno\"], [\"minus\"], [\"doors\", \"partno\"]]\r\n\t},{\r\n\t\t\"title\": \"Handle\",\r\n\t\t\"parts\": [[\"handles\", \"Name\"]]\r\n\t},{\r\n\t\t\"title\": \"Frame\",\r\n\t\t\"parts\": [[\"frames\", \"Name\"]]\r\n\t},{\r\n\t\t\"title\": \"Door\",\r\n\t\t\"parts\": [[\"doors\", \"Name\"]]\r\n\t}],\r\n\t\"data\": {\r\n\t\t\"yop\": [\"2024\"],\r\n\t\t\"minus\": [\"-\"],\r\n\t\t\"handles\": [\r\n\t\t\t{\"partno\": \"700\",\r\n\t\t\t \"Name\": \"Silver\"},\r\n\t\t\t{\"partno\": \"800\",\r\n\t\t\t \"Name\": \"Gold\"},\r\n\t\t\t{\"partno\": \"801\",\r\n\t\t\t \"Name\": \"Rosegold\"},\r\n\t\t\t{\"partno\": \"900\",\r\n\t\t\t \"Name\": \"Stainless\"},\r\n\t\t\t{\"partno\": \"300\",\r\n\t\t\t \"Name\": \"Brass\"},\r\n\t\t\t{\"partno\": \"600\",\r\n\t\t\t \"Name\": \"No handle\"},\r\n\t\t\t{\"partno\": \"601\",\r\n\t\t\t \"Name\": \"No lock\"}\r\n\t\t],\r\n\t\t\"frames\": [\r\n\t\t\t{\"partno\": \"010\",\r\n\t\t\t \"Name\": \"Ash\"},\r\n\t\t\t{\"partno\": \"020\",\r\n\t\t\t \"Name\": \"Birch\"},\r\n\t\t\t{\"partno\": \"030\",\r\n\t\t\t \"Name\": \"Cherry\"},\r\n\t\t\t{\"partno\": \"040\",\r\n\t\t\t \"Name\": \"Oak\"},\r\n\t\t\t{\"partno\": \"050\",\r\n\t\t\t \"Name\": \"Spruce\"},\r\n\t\t\t{\"partno\": \"060\",\r\n\t\t\t \"Name\": \"Stainless\"},\r\n\t\t\t{\"partno\": \"001\",\r\n\t\t\t \"Name\": \"No frame\"}\r\n\t\t],\r\n\t\t\"doors\": [\r\n\t\t\t{\"partno\": \"888\",\r\n\t\t\t \"Name\": \"Ash\"},\r\n\t\t\t{\"partno\": \"999\",\r\n\t\t\t \"Name\": \"Oak\"},\r\n\t\t\t{\"partno\": \"777\",\r\n\t\t\t \"Name\": \"Birch\"},\r\n\t\t\t{\"partno\": \"444\",\r\n\t\t\t \"Name\": \"Spruce\"},\r\n\t\t\t{\"partno\": \"001\",\r\n\t\t\t \"Name\": \"No door\"}\r\n\t\t]\r\n\t}\r\n}`\r\n\t\t\t);\r\n\t\tthis.generateCSV(event);\r\n\t}\r\n\tpublic clearData(event: Event): void {\r\n\t\tvar model = this.getView().getModel(\"View\") as JSONModel;\r\n\t\tmodel.setProperty(\"/Final\", \" \")\r\n\t\tmodel.setProperty(\"/text\", \" \");\r\n\t}\r\n\tpublic downloadCSV(event: Event): void {\r\n\t\tvar model = this.getView().getModel(\"View\") as JSONModel;\r\n\t\tvar csvContent = model.getProperty(\"/Final\");\r\n\t\t\r\n\t\tvar hiddenElement = document.createElement('a');  \r\n\t\thiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csvContent);  \r\n\t\thiddenElement.target = '_blank';  \r\n\t\t  \r\n\t\t//provide the name for the CSV file to be downloaded  \r\n\t\thiddenElement.download = 'generiert.csv';  \r\n\t\thiddenElement.click();\r\n\t}\r\n\tpublic generateCSV(event: Event): void {\r\n\t\tvar model = this.getView().getModel(\"View\") as JSONModel;\r\n\t\tvar data = model.getProperty(\"/text\");\r\n\t\ttry {\r\n\t\t\t// Head\r\n\t\t\tvar Final = \"\";\r\n\t\t\tvar Obj = JSON.parse(data);\r\n\t\t\tfor (const column of Obj.columns) {\r\n\t\t\t\tFinal += column.title + \";\";\r\n\t\t\t}\r\n\t\t\tFinal += \"\\n\";\r\n\t\t\t// Rows\r\n\t\t\tvar dataKeys: string[] = Object.keys(Obj.data);\r\n\t\t\tvar rowCount: int = 0;\r\n\t\t\tfor (const entry of dataKeys) {\r\n\t\t\t\trowCount == 0 ? rowCount = Obj.data[entry].length : rowCount *= Obj.data[entry].length;\r\n\t\t\t}\r\n\r\n\t\t\t// only permutate once\r\n\t\t\tvar permutatedData:string[] = [];\r\n\r\n\t\t\tvar addPart = function(permutations: any, options: any, result: any) {\r\n\t\t\t\tfor (let index = 0; index < permutations.length; index++) {\r\n\t\t\t\t\tvar permutation = permutations[index];\r\n\t\t\t\t\t//console.log(permutations);\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (let partIndex = 0; partIndex < permutation.length; partIndex++) {\r\n\t\t\t\t\t\tvar resultpart = permutation[partIndex];\r\n\t\t\t\t\t\tvar remainingOptions = JSON.parse(JSON.stringify(options));\r\n\t\t\t\t\t\t// console.log(resultpart);\r\n\t\t\t\t\t\tif (resultpart === null) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// console.log(\"optionName\", optionName);\r\n\t\t\t\t\t\t\tvar optionData = remainingOptions[index][partIndex].data;\r\n\t\t\t\t\t\t\t// console.log(\"optionData\", optionData);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfor (let dataOptionsIndex = 0; dataOptionsIndex < optionData.length; dataOptionsIndex++) {\r\n\t\t\t\t\t\t\t\tvar permutationOption = JSON.parse(JSON.stringify(permutations));\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar optionName = options[index][partIndex].name;\r\n\r\n\t\t\t\t\t\t\t\tfor (let columnFillerIndex = 0; columnFillerIndex < Obj.columns.length; columnFillerIndex++) { \r\n\t\t\t\t\t\t\t\t\tfor (let columnFillerPartIndex = 0; columnFillerPartIndex < Obj.columns[columnFillerIndex].parts.length; columnFillerPartIndex++) { \r\n\t\t\t\t\t\t\t\t\t\tvar columnPart =  Obj.columns[columnFillerIndex].parts[columnFillerPartIndex];\r\n\t\t\t\t\t\t\t\t\t\tvar field = Obj.columns[columnFillerIndex].parts[columnFillerPartIndex][1];\r\n\t\t\t\t\t\t\t\t\t\tif (columnPart[0] === optionName && permutationOption[columnFillerIndex][columnFillerPartIndex] === null) {\r\n\t\t\t\t\t\t\t\t\t\t\t// last level of data\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tpermutationOption[columnFillerIndex][columnFillerPartIndex] = optionData[dataOptionsIndex][field];\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// check if all filled then add to result.\r\n\t\t\t\t\t\t\t\tvar hasVoids = false;\r\n\t\t\t\t\t\t\t\tvar row = \"\";\r\n\t\t\t\t\t\t\t\tfor (const checkPermutation of permutationOption) {\r\n\t\t\t\t\t\t\t\t\tfor (const checkPermutationText of checkPermutation) {\r\n\t\t\t\t\t\t\t\t\t\tif (checkPermutationText === null) {\r\n\t\t\t\t\t\t\t\t\t\t\thasVoids = true;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\trow += checkPermutationText;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(hasVoids) break;\r\n\t\t\t\t\t\t\t\t\trow += \";\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\trow += \"\\n\";\r\n\t\t\t\t\t\t\t\tif (!hasVoids) {\r\n\t\t\t\t\t\t\t\t\tresult.push( row );\r\n\t\t\t\t\t\t\t\t\tpermutatedData.push(optionName);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// remove done perms and call again\r\n\t\t\t\t\t\t\t\tif (dataOptionsIndex === optionData.length -1) {\r\n\t\t\t\t\t\t\t\t\t//remainingOptions[index][partIndex] = null;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t//console.log(JSON.stringify(remainingOptions));\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\taddPart(permutationOption, remainingOptions, result)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar basepermutations = [];\r\n\t\t\tvar baseoptions = [];\r\n\t\t\tfor (let index = 0; index < Obj.columns.length; index++) {\r\n\r\n\t\t\t\tbasepermutations.push([]);\r\n\t\t\t\tbaseoptions.push([]);\r\n\r\n\t\t\t\tfor (let partIndex = 0; partIndex < Obj.columns[index].parts.length; partIndex++) {\r\n\t\t\t\t\tconst element = Obj.columns[index].parts[partIndex];\r\n\t\t\t\t\t// element.length = how deep\r\n\t\t\t\t\t// console.log(element);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (element.length === 1) {\r\n\t\t\t\t\t\t// no baseoptions -> direct filling\r\n\t\t\t\t\t\tbasepermutations[index].push(Obj.data[Obj.columns[index].parts[partIndex][0]][0]);\r\n\t\t\t\t\t\tbaseoptions[index].push(null);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t//console.log(\"option added\", element, dataKeys[Obj.columns[index].parts[partIndex][0]]);\r\n\t\t\t\t\t\tvar fieldname = Obj.columns[index].parts[partIndex][0];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbasepermutations[index].push(null);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbaseoptions[index].push({\r\n\t\t\t\t\t\t\tname: fieldname,\r\n\t\t\t\t\t\t\tdata: Obj.data[fieldname]\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// console.log(JSON.stringify(baseoptions));\r\n\t\t\t\r\n\t\t\t// console.log(basepermutations, baseoptions);\r\n\t\t\t// basepermutations: [ [\"string\"], [null],   [\"string\"] ]\r\n\t\t\t//      baseoptions: [ [null],     [object], [null] ]\r\n\t\t\tvar rows = addPart(basepermutations, baseoptions, []);\r\n\t\t\tfor (const row of rows) {\r\n\t\t\t\tFinal += row;\r\n\t\t\t}\r\n\r\n\t\t\tmodel.setProperty(\"/rowCount\", rowCount);\r\n\t\t\t\r\n\t\t\tmodel.setProperty(\"/Final\", Final);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n}\r\n"],"mappings":"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","sourceRoot":"controller"}},{"offset":{"line":18,"column":0},"map":{"version":3,"file":"ProductionLine.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","formatter","__formatter","Factory","___Types","Game","Product","treeGood","constructor","good","game","parent","super","Name","Dangerous","Illegal","AvgPrice","Level","Customers","Manufacturer","this","factoryOptions","subs","getId","replace","getActiveFactory","facs","factory","active","concat","getActiveSubs","indexOf","push","getExportFactory","result","requiredProducts","product","getSubGoods","getAllGoods","setActiveFactory","length","select","control","getContent","setSelectedKey","setFactoryActive","lowest","compare","getMaterialLevelCombined","setActiveFactoryRecursiv","Material","newFactoryName","checkMaterialList","buildControl","panellevel","id","Panel","getPanelId","expanded","expandable","headerText","addStyleClass","deathZone","factories","getFactoriesForProduct","newFactory","treeFactory","error","console","warn","setExpandable","addContent","newSelect","Select","selectedItem","items","path","template","Item","text","key","templateShareable","change","that","selectFactory","newButton","Button","press","setBaseFactory","ProductionCap","Cost","Products","Materials","selectid","getProduct","allGoods","requiredProduct","goodLvl","Title","width","visible","mats","getMaterialsForFactory","mat","newMat","reqMaterial","factoryGame","goods","availableGoods","reqFactories","prodTree","products","panelCount","setTargetFactory","factoryName","targetFactory","getFactory","newGood","treeitem","clearDeathZone","destroy","getActiveFactories","baseitem","Set","index","element","undefined","splice","getExportTree","exportTree","name","setAvailableGood","ProductionLine","onInit","Model","JSONModel","setData","TargetFactory","getView","setModel","getRouter","getRoute","attachPatternMatched","onPatternMatched","inputF","byId","setFilterFunction","sTerm","oItem","getText","match","RegExp","generateProductionLine","event","view","viewModel","getModel","getProperty","TargetFactoryName","getValue","setProperty","getProductsFromFactory","addItem","sort","getSource","item","getParameters","getBindingPath","i","button","substring","lastIndexOf","getSelectedItem","addAvailableGood","oView","selectDialog","open","Fragment","load","controller","then","dialog","bind","onDialogClose","aContexts","getParameter","map","oContext","getObject","getBinding","filter","onSearch","sValue","oFilter","Filter","FilterOperator","Contains","oBinding","handleDownloadPress","data","requiredFactories","basicTree","jsonString","JSON","stringify","File","save","openUploadDialog","importDialog","closeDialog","close","handleUploadPress","file","getFileObject","reader","FileReader","readAsText","onload","parse","MessageBox","show"],"sources":["../../src/controller/ProductionLine.controller.ts"],"sourcesContent":["import MessageBox from \"sap/m/MessageBox\";\r\nimport BaseController from \"./BaseController\";\r\nimport formatter from \"../model/formatter\";\r\nimport Event from \"sap/ui/base/Event\";\r\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\r\nimport Input from \"sap/m/Input\";\r\nimport SuggestionItem from \"sap/m/SuggestionItem\";\r\nimport { Factory, Game, Product } from \"./Types\";\r\nimport VBox from \"sap/m/VBox\";\r\nimport Control from \"sap/ui/core/Control\";\r\nimport Panel from \"sap/m/Panel\";\r\nimport Select from \"sap/m/Select\";\r\nimport Item from \"sap/ui/core/Item\";\r\nimport Title from \"sap/m/Title\";\r\nimport Button from \"sap/m/Button\";\r\nimport Fragment from \"sap/ui/core/Fragment\";\r\nimport SelectDialog from \"sap/m/SelectDialog\";\r\nimport Filter from \"sap/ui/model/Filter\";\r\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\r\nimport File from \"sap/ui/core/util/File\";\r\nimport Dialog from \"sap/m/Dialog\";\r\n\r\n/**\r\n * @namespace de.henloh.prodts.controller\r\n */\r\n/*\r\n.########..########...#######..########..##.....##..######..########\r\n.##.....##.##.....##.##.....##.##.....##.##.....##.##....##....##...\r\n.##.....##.##.....##.##.....##.##.....##.##.....##.##..........##...\r\n.########..########..##.....##.##.....##.##.....##.##..........##...\r\n.##........##...##...##.....##.##.....##.##.....##.##..........##...\r\n.##........##....##..##.....##.##.....##.##.....##.##....##....##...\r\n.##........##.....##..#######..########...#######...######.....##...\r\n*/\r\nclass treeGood extends Product {\r\n\tfactoryOptions: treeFactory[]; \r\n\tid: string;\r\n\tcontrol: Control;\r\n\tparent: object;\r\n\tsubs: {[k: string]: treeFactory};\r\n\tgame: factoryGame;\r\n\tconstructor(good: Product, game: factoryGame, parent: object) {\r\n\t\tsuper(good.Name, good.Dangerous, good.Illegal, good.AvgPrice, good.Level, good.Customers, good.Manufacturer);\r\n\r\n\t\tthis.parent = parent;\r\n\t\tthis.game = game;\r\n\t\tthis.factoryOptions = [];\r\n\t\tthis.subs = {};\r\n\t}\r\n\tpublic getId():string {\r\n\t\t// Parent ist entweder game oder factory\r\n\t\t//@ts-ignore\r\n\t\tif(this.parent.getId) {\r\n\t\t\t//@ts-ignore\r\n\t\t\treturn this.parent.getId() + \"/\" + this.Name.replace(/\\s/g, '');\r\n\t\t} else {\r\n\t\t\treturn this.Name.replace(/\\s/g, '');\r\n\t\t}\r\n\t}\r\n\tpublic getActiveFactory(): string[] {\r\n\t\tvar facs:string[] = []\r\n\t\tfor (const factory of this.factoryOptions) {\r\n\t\t\tif (factory.active) {\r\n\t\t\t\tfacs = facs.concat(factory.getActiveSubs());\r\n\t\t\t\tfacs.indexOf(factory.Name) === -1 ? facs.push(factory.Name) : null;\r\n\t\t\t\treturn facs;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tpublic getExportFactory(): any { \r\n\t\tvar result:any = {};\r\n\t\tfor (const factory of this.factoryOptions) {\r\n\t\t\tif (factory.active) {\r\n\t\t\t\tresult.Name = factory.Name;\r\n\t\t\t\tresult.requiredProducts = []\r\n\t\t\t\tfor (const product of factory.requiredProducts) {\r\n\t\t\t\t\tresult.requiredProducts.push({\r\n\t\t\t\t\t\tName: product.Name,\r\n\t\t\t\t\t\tFactory: product.getExportFactory()\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tpublic getSubGoods(): treeGood[] {\r\n\t\tvar result:treeGood[] = [];\r\n\t\tfor (const factory of this.factoryOptions) {\r\n\t\t\tresult = result.concat(factory.getAllGoods());\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tpublic setActiveFactory(Name: string) {\r\n\t\tif(!(this.factoryOptions.length > 0)) return;\r\n\t\tfor (const factory of this.factoryOptions) {\r\n\t\t\tfactory.active = false;\r\n\t\t\tif (factory.Name == Name) {\r\n\t\t\t\tfactory.active = true;\r\n\t\t\t\tif (this.factoryOptions.length > 1) {\r\n\t\t\t\t\t// first content is select\r\n\t\t\t\t\tvar select = (this.control as Panel).getContent()[0] as Select;\r\n\t\t\t\t\tselect.setSelectedKey(factory.Name.replace(/\\s/g, ''));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// initial build select one\r\n\tprivate setFactoryActive():treeFactory {\r\n\t\tif(this.factoryOptions.length == 1) {\r\n\t\t\tthis.factoryOptions[0].active = true;\r\n\t\t\treturn this.factoryOptions[0];\r\n\t\t} else if(this.factoryOptions.length > 1) {\r\n\t\t\tvar lowest = this.factoryOptions[0];\r\n\t\t\tfor (const factory of this.factoryOptions) {\r\n\t\t\t\tvar compare = lowest.getMaterialLevelCombined();\r\n\t\t\t\tif (factory.getMaterialLevelCombined() < compare) {\r\n\t\t\t\t\tlowest = factory;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlowest.active = true;\r\n\t\t\treturn lowest;\r\n\t\t}\r\n\t}\r\n\tpublic setActiveFactoryRecursiv(Material: string, newFactoryName: string) {\r\n\t\tif(this.Name == Material) {\r\n\t\t\tthis.setActiveFactory(newFactoryName);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(this.factoryOptions.length > 0) {\r\n\t\t\tfor (const factory of this.factoryOptions) {\r\n\t\t\t\t//console.log(factory.id);\r\n\t\t\t\tfactory.checkMaterialList(Material, newFactoryName);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tpublic buildControl(panellevel: number) {\r\n\t\tthis.id = this.getId();\r\n\t\tthis.control = new Panel(this.Name.replace(/\\s/g, '') + this.game.getPanelId(), {\r\n\t\t\texpanded: false,\r\n\t\t\texpandable: true,\r\n\t\t\theaderText: `{View>/game/subs/${this.id}/Name}`\r\n\t\t});\r\n\t\tthis.control.addStyleClass(\"avlevel\" + panellevel);\r\n\t\tthis.game.deathZone.push(this.control);\r\n\r\n\t\tpanellevel++;\r\n\t\tvar factories = this.game.getFactoriesForProduct(this.Name);\r\n\t\ttry {\r\n\t\t\tfor (const factory of factories) {\r\n\t\t\t\tvar newFactory = new treeFactory(factory, this.game, this);\r\n\t\t\t\tthis.factoryOptions.push(newFactory);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.warn(\"No factory for \"+ this.Name);\r\n\t\t\t(this.control as Panel).setExpandable(false);\r\n\t\t\t(this.control as Panel).addStyleClass(\"dontShowContent\");\r\n\t\t}\r\n\t\tif (this.factoryOptions.length == 1) {\r\n\t\t\tthis.factoryOptions[0].buildControl(this.Level, panellevel);\r\n\t\t\t(this.control as Panel).addContent(this.factoryOptions[0].control);\r\n\t\t\t// used for binding /LaserHead/LaserHeadFactory/Glass/GlassManufacturer/Ore/Name\r\n\t\t\t//@ts-ignore\r\n\t\t\tthis[this.factoryOptions[0].Name.replace(/\\s/g, '')] = this.factoryOptions[0];\r\n\t\t\tthis.setFactoryActive();\r\n\t\t} else if(this.factoryOptions.length > 1) {\r\n\t\t\tvar newSelect = new Select(this.Name.replace(/\\s/g, '') + this.game.getPanelId(), {\r\n\t\t\t\tselectedItem: `View>/game/subs/${this.id}/activeChild`,\r\n\t\t\t\titems: {\r\n\t\t\t\t\tpath: `View>/game/subs/${this.id}/factoryOptions`,\r\n\t\t\t\t\ttemplate: new Item({\r\n\t\t\t\t\t\ttext: \"{View>Name}\",\r\n\t\t\t\t\t\tkey: \"{View>selectid}\"\r\n\t\t\t\t\t}),\r\n\t\t\t\t\ttemplateShareable: true\r\n\t\t\t\t},\r\n\t\t\t\tchange: this.game.that.selectFactory\r\n\t\t\t});\r\n\t\t\tthis.game.deathZone.push(newSelect);\r\n\t\t\tvar lowest = this.setFactoryActive();\r\n\t\t\tnewSelect.setSelectedKey(lowest.Name.replace(/\\s/g, ''));\r\n\r\n\t\t\tvar newButton = new Button(this.Name.replace(/\\s/g, '') + this.game.getPanelId(), {\r\n\t\t\t\ttext: `Apply to all {View>/game/subs/${this.id}/Name} facilities.`,\r\n\t\t\t\tpress: this.game.that.setBaseFactory\r\n\t\t\t}).addStyleClass(\"sapUiSmallMarginBegin\");\r\n\t\t\tthis.game.deathZone.push(newButton);\r\n\r\n\t\t\t(this.control as Panel).addContent(newSelect);\r\n\t\t\t(this.control as Panel).addContent(newButton);\r\n\t\t\t\r\n\t\t\tfor (var factory of this.factoryOptions) {\r\n\t\t\t\tfactory.buildControl(this.Level, panellevel);\r\n\t\t\t\t// used for binding /LaserHead/LaserHeadFactory/Glass/GlassManufacturer/Ore/Name\r\n\t\t\t\t//@ts-ignore\r\n\t\t\t\tthis[factory.Name.replace(/\\s/g, '')] = factory;\r\n\t\t\t\t(this.control as Panel).addContent(factory.control);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n/*\r\n.########....###.....######..########..#######..########..##....##\r\n.##.........##.##...##....##....##....##.....##.##.....##..##..##.\r\n.##........##...##..##..........##....##.....##.##.....##...####..\r\n.######...##.....##.##..........##....##.....##.########.....##...\r\n.##.......#########.##..........##....##.....##.##...##......##...\r\n.##.......##.....##.##....##....##....##.....##.##....##.....##...\r\n.##.......##.....##..######.....##.....#######..##.....##....##...\r\n*/\r\nclass treeFactory extends Factory {\r\n\trequiredProducts: treeGood[];\r\n\tid: string;\r\n\tselectid: string;\r\n\tcontrol: Control;\r\n\tactive: boolean;\r\n\tparent: treeGood;\r\n\tsubs: {[k: string]: treeGood};\r\n\tgame: factoryGame;\r\n\tconstructor(factory: Factory, game: factoryGame, parent: treeGood) {\r\n\t\tsuper(factory.Name,factory.ProductionCap,factory.Cost,factory.Products,factory.Materials);\r\n\r\n\t\tthis.parent = parent;\r\n\t\tthis.game = game;\r\n\t\tthis.selectid = factory.Name.replace(/\\s/g, '');\r\n\t\tthis.requiredProducts = [];\r\n\t\tthis.active = false;\r\n\t\tthis.subs = {};\r\n\t}\r\n\tpublic getId() {\r\n\t\treturn this.parent.getId() + \"/\" + this.Name.replace(/\\s/g, '');\r\n\t}\r\n\tpublic getMaterialLevelCombined(): number {\r\n\t\tvar result: number = 0;\r\n\t\tfor (const product of this.Materials) {\r\n\t\t\tresult += this.game.getProduct(product).Level;\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\tpublic getAllGoods(): treeGood[] {\r\n\t\tvar allGoods:treeGood[] = [];\r\n\t\tfor (const good of this.requiredProducts) {\r\n\t\t\tallGoods.push(good);\r\n\t\t\tallGoods = allGoods.concat(good.getSubGoods())\r\n\t\t}\r\n\t\treturn allGoods;\r\n\t}\r\n\tpublic getActiveSubs(): string[] {\r\n\t\tvar facs:string[] = [];\r\n\t\tfor (const requiredProduct of this.requiredProducts) {\r\n\t\t\tfacs = facs.concat(requiredProduct.getActiveFactory());\r\n\t\t}\r\n\t\treturn facs\r\n\t}\r\n\tpublic checkMaterialList(Material: string, newFactoryName: string) {\r\n\t\tif (this.Products.indexOf(Material) >= 0) this.active = (this.Name == newFactoryName);\r\n\t\tfor (const requiredProduct of this.requiredProducts) {\r\n\t\t\tif(requiredProduct.Name == Material) {\r\n\t\t\t\trequiredProduct.setActiveFactory(newFactoryName);\r\n\t\t\t}\r\n\t\t\trequiredProduct.setActiveFactoryRecursiv(Material, newFactoryName);\r\n\t\t}\r\n\t}\r\n\tpublic buildControl(goodLvl: number, panellevel: number) {\r\n\t\tthis.id = this.getId();\r\n\t\tif (goodLvl == 0) {\r\n\t\t\tthis.control = new Title(this.Name.replace(/\\s/g, '') + this.game.getPanelId(), {\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\t// bool from binding\r\n\t\t\t\t//@ts-ignore\r\n\t\t\t\tvisible: `{View>/game/subs/${this.id}/active}`,\r\n\t\t\t\ttext: `{View>/game/subs/${this.id}/Name}`\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.control = new Panel(this.Name.replace(/\\s/g, '') + this.game.getPanelId(), {\r\n\t\t\t\texpanded: true,\r\n\t\t\t\texpandable: true,\r\n\t\t\t\t// bool from binding\r\n\t\t\t\t//@ts-ignore\r\n\t\t\t\tvisible: `{View>/game/subs/${this.id}/active}`,\r\n\t\t\t\theaderText: `{View>/game/subs/${this.id}/Name}`\r\n\t\t\t});\r\n\t\t\tvar mats = this.game.getMaterialsForFactory(this.Name);\r\n\t\t\tfor (const mat of mats) {\r\n\t\t\t\tvar newMat = new treeGood(mat, this.game, this);\r\n\t\t\t\tthis.requiredProducts.push(newMat)\r\n\t\t\t}\r\n\t\t\tfor (var reqMaterial of this.requiredProducts) {\r\n\t\t\t\treqMaterial.buildControl(panellevel);\r\n\t\t\t\t(this.control as Panel).addContent(reqMaterial.control);\r\n\t\t\t\t// used for binding /LaserHead/LaserHeadFactory/Glass/GlassManufacturer/Ore/Name\r\n\t\t\t\t//@ts-ignore\r\n\t\t\t\tthis[reqMaterial.Name.replace(/\\s/g, '')] = reqMaterial;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.game.deathZone.push(this.control);\r\n\t}\r\n}\r\n/*\r\n..######......###....##.....##.########\r\n.##....##....##.##...###...###.##......\r\n.##.........##...##..####.####.##......\r\n.##...####.##.....##.##.###.##.######..\r\n.##....##..#########.##.....##.##......\r\n.##....##..##.....##.##.....##.##......\r\n..######...##.....##.##.....##.########\r\n*/\r\nclass factoryGame extends Game {\r\n\tprivate panelCount: number;\r\n\tthat: ProductionLine;\r\n\tavailableGoods: string[];\r\n\treqFactories: treeFactory[];\r\n\tprodTree: treeGood[];\r\n\tproducts: Product[];\r\n\ttargetFactory: Factory;\r\n\tdeathZone: Control[];\r\n\tsubs: {[k: string]: treeGood};\r\n\r\n\tconstructor(goods: Product[], factories: Factory[]) {\r\n\t\tsuper(goods, factories);\r\n\t\tthis.deathZone = [];\r\n\t\tthis.availableGoods = [];\r\n\t\tthis.reqFactories = [];\r\n\t\tthis.prodTree = [];\r\n\t\tthis.products = [];\r\n\t\tthis.panelCount = 0;\r\n\t\tthis.subs = {};\r\n\t}\r\n\tpublic setTargetFactory(factoryName: string): {[k: string]: treeGood} {\r\n\t\tthis.targetFactory = this.getFactory(factoryName);\r\n\t\tthis.products = this.getMaterialsForFactory(this.targetFactory.Name);\r\n\r\n\t\tfor (const good of this.products) {\r\n\t\t\tvar newGood = new treeGood(good, this, this);\r\n\t\t\tthis.prodTree.push(newGood);\r\n\t\t}\r\n\r\n\t\t// to get a Binding /tree/id/attribut \r\n\t\t// the array need to be changed ot objects \r\n\t\tfor (var treeitem of this.prodTree) {\r\n\t\t\ttreeitem.buildControl(0);\r\n\t\t\tthis.subs[treeitem.id] = treeitem;\r\n\t\t}\r\n\r\n\t\treturn this.subs;\r\n\t}\r\n\tpublic clearDeathZone(): void {\r\n\t\tfor (const control of this.deathZone) {\r\n\t\t\tcontrol.destroy();\r\n\t\t}\r\n\t}\r\n\tpublic getActiveFactories(): string[] {\r\n\t\tvar facs:string[] = [];\r\n\t\tfor (var baseitem of this.prodTree) {\r\n\t\t\tfacs = facs.concat(baseitem.getActiveFactory())\r\n\t\t}\r\n\t\t// only Uniques\r\n\t\tfacs = [...new Set(facs)]\r\n\t\tfor (let index = facs.length - 1; index > -1; index--) {\r\n\t\t\tconst element = facs[index];\r\n\t\t\tif (element == undefined) facs.splice(index, 1);\r\n\t\t}\r\n\t\treturn facs;\r\n\t}\r\n\tpublic getExportTree(): any {\r\n\t\tvar exportTree = {};\r\n\t\tfor (var baseitem of this.prodTree) {\r\n\t\t\t//@ts-ignore\r\n\t\t\texportTree[baseitem.Name] = {\r\n\t\t\t\tName: baseitem.Name,\r\n\t\t\t\tFactory: baseitem.getExportFactory()\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn exportTree;\r\n\t}\r\n\tpublic setBaseFactory(Material:string, newFactoryName:string) {\r\n\t\tfor (var name in this.subs) {\r\n\t\t\tthis.subs[name].setActiveFactoryRecursiv(Material, newFactoryName);\r\n\t\t}\r\n\t}\r\n\tpublic setAvailableGood(Name: string) {\r\n\t\tthis.availableGoods.push(Name);\r\n\t\tvar allGoods:treeGood[] = [];\r\n\t\tfor (const good of this.prodTree) {\r\n\t\t\tallGoods.push(good);\r\n\t\t\tallGoods = allGoods.concat(good.getSubGoods());\r\n\t\t}\r\n\t\t//console.log(allGoods);\r\n\t\tfor (const good of allGoods) {\r\n\t\t\tif (good.Name == Name) {\r\n\t\t\t\tgood.control.addStyleClass(\"dontShowContent\");\r\n\t\t\t\t(good.control as Panel).setExpandable(false);\r\n\t\t\t\tfor (const factory of good.factoryOptions) {\r\n\t\t\t\t\tfactory.active = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\tpublic getPanelId():number {\r\n\t\tthis.panelCount++;\r\n\t\treturn this.panelCount\r\n\t}\r\n}\r\n/*\r\n..######...#######..##....##.########.########...#######..##.......##.......########.########.\r\n.##....##.##.....##.###...##....##....##.....##.##.....##.##.......##.......##.......##.....##\r\n.##.......##.....##.####..##....##....##.....##.##.....##.##.......##.......##.......##.....##\r\n.##.......##.....##.##.##.##....##....########..##.....##.##.......##.......######...########.\r\n.##.......##.....##.##..####....##....##...##...##.....##.##.......##.......##.......##...##..\r\n.##....##.##.....##.##...###....##....##....##..##.....##.##.......##.......##.......##....##.\r\n..######...#######..##....##....##....##.....##..#######..########.########.########.##.....##\r\n*/\r\nexport default class ProductionLine extends BaseController {\r\n\tprivate formatter = formatter;\r\n\tprivate selectDialog: SelectDialog;\r\n\tprivate importDialog: Dialog;\r\n\tpublic onInit(): void {\r\n\t\tvar Model = new JSONModel();\r\n\t\tModel.setData({\r\n\t\t\tTargetFactory: \"\",\r\n\t\t\tproducts: [],\r\n\t\t\t//mainFactory: {},\r\n\t\t\t//deathZone: [],\r\n\t\t\t//tree: [],\r\n\t\t\t//ownedFactories: [],\r\n\t\t\t//requiredFactories: []\r\n\t\t});\r\n\t\tthis.getView().setModel(Model, \"View\");\r\n\t\tthis.getRouter().getRoute(\"productionLine\").attachPatternMatched(this.onPatternMatched, this);\r\n\r\n\t\tvar inputF = this.byId(\"targetFactoryInput\") as Input;\r\n\t\t//@ts-ignore\r\n\t\tinputF.setFilterFunction(function(sTerm: string, oItem: SuggestionItem) {\r\n\t\t\treturn oItem.getText().match(new RegExp(\"^\"+sTerm, \"i\"));\r\n\t\t});\r\n\t}\r\n\t/*\r\n\t.########..########...#######..########..........##.......####.##....##.########\r\n\t.##.....##.##.....##.##.....##.##.....##.........##........##..###...##.##......\r\n\t.##.....##.##.....##.##.....##.##.....##.........##........##..####..##.##......\r\n\t.########..########..##.....##.##.....##.#######.##........##..##.##.##.######..\r\n\t.##........##...##...##.....##.##.....##.........##........##..##..####.##......\r\n\t.##........##....##..##.....##.##.....##.........##........##..##...###.##......\r\n\t.##........##.....##..#######..########..........########.####.##....##.########\r\n\t*/\r\n\tpublic async generateProductionLine(event: Event): Promise<void> {\r\n\t\tvar that = this;\r\n\t\tvar view = this.getView();\r\n\t\tvar viewModel = this.getModel(\"View\") as JSONModel;\r\n\t\tvar game:factoryGame;\r\n\t\ttry {\r\n\t\t\tgame = viewModel.getProperty(\"/game\");\r\n\t\t\tif (game) {\r\n\t\t\t\tgame.clearDeathZone();\r\n\t\t\t}\r\n\t\t\t// Clear\r\n\t\t\tgame = new factoryGame(this.getModel(\"GoodModel\").getProperty(\"/Goods\"), this.getModel(\"FactorieModel\").getProperty(\"/Factories\"));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t\tgame.that = that;\r\n\r\n\t\tvar TargetFactoryName = (view.byId(\"targetFactoryInput\") as Input).getValue();\r\n\t\tviewModel.setProperty(\"/products\", game.getProductsFromFactory(TargetFactoryName));\r\n\t\tgame.setTargetFactory(TargetFactoryName);\r\n\t\tfor (var name in game.subs) {\r\n\t\t\t(that.byId(\"DetailedProdList\") as VBox).addItem(game.subs[name].control);\r\n\t\t\t\r\n\t\t}\r\n\t\t//console.log(xtree);\r\n\t\t\r\n\t\tviewModel.setProperty(\"/game\", game);\r\n\t\tviewModel.setProperty(\"/requiredFactories\", game.getActiveFactories().sort());\r\n\t}\r\n\t/*\r\n\t..######..##.....##....###....##....##..######...########\r\n\t.##....##.##.....##...##.##...###...##.##....##..##......\r\n\t.##.......##.....##..##...##..####..##.##........##......\r\n\t.##.......#########.##.....##.##.##.##.##...####.######..\r\n\t.##.......##.....##.#########.##..####.##....##..##......\r\n\t.##....##.##.....##.##.....##.##...###.##....##..##......\r\n\t..######..##.....##.##.....##.##....##..######...########\r\n\t*/\r\n\tpublic selectFactory(event: Event): void {\r\n\t\tvar select = event.getSource() as Select;\r\n\t\t// getParameters() returns a undefined Object\r\n\t\t//@ts-ignore\r\n\t\tvar item = event.getParameters().selectedItem as Item;\r\n\t\tvar viewModel = this.getModel(\"View\") as JSONModel;\r\n\t\tvar path = select.getBindingPath(\"items\"); // > game/subs/[Material]/.../factoryOptions\r\n\t\tvar factoryOptions = viewModel.getProperty(path);\r\n\t\tfor (var i = 0; i < factoryOptions.length; i++) {\r\n\t\t\tviewModel.setProperty(path+`/${i}/active`, false);\r\n\r\n\t\t\tif (viewModel.getProperty(path+`/${i}/Name`) == item.getText()) {\r\n\t\t\t\tviewModel.setProperty(path+`/${i}/active`, true);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar game = viewModel.getProperty(\"/game\");\r\n\t\tviewModel.setProperty(\"/requiredFactories\", game.getActiveFactories().sort());\r\n\t}\r\n\t/*\r\n\t..######..##.....##....###....##....##..######...########............###....##.......##......\r\n\t.##....##.##.....##...##.##...###...##.##....##..##.................##.##...##.......##......\r\n\t.##.......##.....##..##...##..####..##.##........##................##...##..##.......##......\r\n\t.##.......#########.##.....##.##.##.##.##...####.######...#######.##.....##.##.......##......\r\n\t.##.......##.....##.#########.##..####.##....##..##...............#########.##.......##......\r\n\t.##....##.##.....##.##.....##.##...###.##....##..##...............##.....##.##.......##......\r\n\t..######..##.....##.##.....##.##....##..######...########.........##.....##.########.########\r\n\t*/\r\n\tpublic setBaseFactory(event: Event): void {\r\n\t\tvar viewModel = this.getModel(\"View\") as JSONModel;\t\t\r\n\t\tvar game = viewModel.getProperty(\"/game\") as factoryGame;\r\n\t\tvar button = event.getSource() as Button;\r\n\t\tvar path = button.getBindingPath(\"text\");\r\n\r\n\t\tvar Material = viewModel.getProperty(path);\r\n\t\tvar newFactory = viewModel.getProperty(path.substring(0, path.lastIndexOf(\"/\")));\r\n\t\t// first control is the select\r\n\t\tnewFactory = ((newFactory.control.getContent()[0] as Select).getSelectedItem() as Item).getText();\r\n\t\t// console.log(Material, newFactory);\r\n\t\tgame.setBaseFactory(Material, newFactory);\r\n\t\t\r\n\t\tviewModel.setProperty(\"/game\", game);\r\n\t\tviewModel.setProperty(\"/requiredFactories\", game.getActiveFactories().sort());\r\n\t}\r\n\t/*\r\n\t.########..####....###....##........#######...######..\r\n\t.##.....##..##....##.##...##.......##.....##.##....##.\r\n\t.##.....##..##...##...##..##.......##.....##.##.......\r\n\t.##.....##..##..##.....##.##.......##.....##.##...####\r\n\t.##.....##..##..#########.##.......##.....##.##....##.\r\n\t.##.....##..##..##.....##.##.......##.....##.##....##.\r\n\t.########..####.##.....##.########..#######...######..\r\n\t*/\r\n\tpublic addAvailableGood(event: Event) {\r\n\t\tvar oView = this.getView();\r\n\t\tvar that = this;\r\n\t\ttry {\r\n\t\t\t(that.selectDialog as SelectDialog).open(\"\")\r\n\t\t} catch (error) {\r\n\t\t\tFragment.load({\r\n\t\t\t\tid: \"speccalDialog\",\r\n\t\t\t\tname: \"de.henloh.prodts.view.Dialog\",\r\n\t\t\t\tcontroller: this\r\n\t\t\t}).then(function (dialog: any){\r\n\t\t\t\t(dialog as SelectDialog).setModel(oView.getModel(\"GoodModel\"));\r\n\t\t\t\t(dialog as SelectDialog).open(\"\");\r\n\t\t\t\tthat.selectDialog = dialog;\r\n\t\t\t}.bind(this));\r\n\t\t}\r\n\t}\r\n\tpublic onDialogClose(event: Event) {\r\n\t\tvar aContexts = event.getParameter(\"selectedContexts\");\r\n\t\tvar viewModel = this.getModel(\"View\") as JSONModel;\t\t\r\n\t\tvar game = viewModel.getProperty(\"/game\") as factoryGame;\r\n\t\tif (aContexts && aContexts.length) {\r\n\t\t\taContexts.map(function (oContext: any) { \r\n\t\t\t\ttry {\r\n\t\t\t\t\tgame.setAvailableGood(oContext.getObject().Name)\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.warn(error);\r\n\t\t\t\t} \r\n\t\t\t})\t\r\n\t\t\tviewModel.setProperty(\"/availableGoods\", game.availableGoods);\r\n\t\t\tviewModel.setProperty(\"/game\", game);\r\n\t\t}\r\n\t\t// Binding is not definied. Filtering is possible here\r\n\t\t//@ts-ignore \r\n\t\t(event.getSource() as SelectDialog).getBinding(\"items\").filter([]);\r\n\t\tviewModel.setProperty(\"/requiredFactories\", game.getActiveFactories().sort());\r\n\t}\r\n\tpublic onSearch(event: Event) {\r\n\t\tvar sValue = event.getParameter(\"value\");\r\n\t\tvar oFilter = new Filter(\"Name\", FilterOperator.Contains, sValue);\r\n\t\tvar oBinding = event.getParameter(\"itemsBinding\");\r\n\t\toBinding.filter([oFilter]);\r\n\t}\r\n\t/*\r\n\t.####.##.....##.########.......####.......########.##.....##.########...#######..########..########\r\n\t..##..###...###.##.....##.....##..##......##........##...##..##.....##.##.....##.##.....##....##...\r\n\t..##..####.####.##.....##......####.......##.........##.##...##.....##.##.....##.##.....##....##...\r\n\t..##..##.###.##.########......####........######......###....########..##.....##.########.....##...\r\n\t..##..##.....##.##...........##..##.##....##.........##.##...##........##.....##.##...##......##...\r\n\t..##..##.....##.##...........##...##......##........##...##..##........##.....##.##....##.....##...\r\n\t.####.##.....##.##............####..##....########.##.....##.##.........#######..##.....##....##...\r\n\t*/\r\n\tpublic handleDownloadPress(): void {\t\r\n\t\t// Convert the JSON data to a string\r\n\t\tvar viewModel = this.getModel(\"View\") as JSONModel;\r\n\t\tvar game = viewModel.getProperty(\"/game\") as factoryGame;\r\n\t\tvar data:any = {\r\n\t\t\ttargetFactory:     viewModel.getProperty(\"/TargetFactory\"),\r\n\t\t\tavailableGoods:    viewModel.getProperty(\"/availableGoods\"),\r\n\t\t\trequiredFactories: viewModel.getProperty(\"/requiredFactories\"),\r\n\t\t\tproducts:          viewModel.getProperty(\"/products\"),\r\n\t\t\tbasicTree: \t\t   game.getExportTree()\r\n\t\t};\r\n\t\tvar jsonString = JSON.stringify(data);\r\n\t\r\n\t\t// Use the FileSaver.js library to trigger a download\r\n\t\tFile.save(jsonString, \"data\", \"json\", \"application/json\", \"utf-8\");\r\n\t}\r\n\tpublic openUploadDialog(event: Event) {\r\n\t\t//var oView = this.getView();\r\n\t\tvar that = this;\r\n\t\ttry {\r\n\t\t\t(that.importDialog as Dialog).open()\r\n\t\t} catch (error) {\r\n\t\t\tFragment.load({\r\n\t\t\t\tid: \"speccalDialog2\",\r\n\t\t\t\tname: \"de.henloh.prodts.view.Import\",\r\n\t\t\t\tcontroller: this\r\n\t\t\t}).then(function (dialog: any){\r\n\t\t\t\t//(dialog as Dialog).setModel(oView.getModel(\"GoodModel\"));\r\n\t\t\t\t(dialog as Dialog).open();\r\n\t\t\t\tthat.importDialog = dialog;\r\n\t\t\t}.bind(this));\r\n\t\t}\r\n\t}\r\n\tpublic closeDialog(event: Event): void { \r\n\t\tthis.importDialog.close()\r\n\t}\r\n\tpublic handleUploadPress(event: Event): void {\r\n\t\t// Get the selected file from the input element\r\n\t\tvar file = event.getParameters().item.getFileObject();\r\n\t\tvar that = this;\r\n\t\tvar reader = new FileReader();\r\n\t\tvar viewModel = this.getModel(\"View\") as JSONModel;\r\n\r\n\t\t// Read the file as text\r\n\t\treader.readAsText(file);\r\n\r\n\t\t// When the file has been read, convert it to a JavaScript object\r\n\t\treader.onload = function() {\r\n\t\t\tvar data = JSON.parse(reader.result as string);\r\n\t\t\t//console.log(data);\r\n\t\t\ttry {\r\n\t\t\t\tviewModel.setProperty(\"/TargetFactory\", data.targetFactory);\r\n\t\t\t\tviewModel.setProperty(\"/availableGoods\", data.availableGoods);\r\n\t\t\t\tviewModel.setProperty(\"/requiredFactories\", data.requiredFactories);\r\n\t\t\t\tviewModel.setProperty(\"/products\", data.products);\r\n\r\n\t\t\t\tvar basicTree: any = data.basicTree;\r\n\r\n\t\t\t\tvar game:factoryGame;\r\n\t\t\t\tgame = viewModel.getProperty(\"/game\");\r\n\t\t\t\tif (game) {\r\n\t\t\t\t\tgame.clearDeathZone();\r\n\t\t\t\t}\r\n\t\t\t\t// Clear\r\n\t\t\t\tgame = new factoryGame(that.getModel(\"GoodModel\").getProperty(\"/Goods\"), that.getModel(\"FactorieModel\").getProperty(\"/Factories\"));\r\n\r\n\t\t\t\tgame.that = that;\r\n\t\t\t\tgame.setTargetFactory(data.targetFactory);\r\n\r\n\t\t\t\tfor (var name in game.subs) {\r\n\t\t\t\t\t(that.byId(\"DetailedProdList\") as VBox).addItem(game.subs[name].control);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tviewModel.setProperty(\"/game\", game);\r\n\r\n\t\t\t} catch (error) {\r\n\t\t\t\tMessageBox.show(\"Uploaded data does not contain a production-tree.\")\r\n\t\t\t}\r\n\t\t\t// Do something with the JavaScript object\r\n\t\t}\r\n\t}\r\n\tpublic onPatternMatched(event: Event): void {\r\n\t\t \r\n\t}\r\n}\r\n"],"mappings":"AAAA,6aACOA,EAAcC,EAAAC,GAAA,MACdC,EAASF,EAAAG,GAAA,MAKPC,EAAOC,EAAA,iBAAEC,EAAID,EAAA,cAAEE,EAAOF,EAAA,WA2B/B,MAAMG,UAAiBD,EAOtBE,YAAYC,EAAeC,EAAmBC,GAC7CC,MAAMH,EAAKI,KAAMJ,EAAKK,UAAWL,EAAKM,QAASN,EAAKO,SAAUP,EAAKQ,MAAOR,EAAKS,UAAWT,EAAKU,cAE/FC,KAAKT,OAASA,EACdS,KAAKV,KAAOA,EACZU,KAAKC,eAAiB,GACtBD,KAAKE,KAAO,CAAC,CACd,CACOC,QAGN,GAAGH,KAAKT,OAAOY,MAAO,CAErB,OAAOH,KAAKT,OAAOY,QAAU,IAAMH,KAAKP,KAAKW,QAAQ,MAAO,GAC7D,KAAO,CACN,OAAOJ,KAAKP,KAAKW,QAAQ,MAAO,GACjC,CACD,CACOC,mBACN,IAAIC,EAAgB,GACpB,IAAK,MAAMC,KAAWP,KAAKC,eAAgB,CAC1C,GAAIM,EAAQC,OAAQ,CACnBF,EAAOA,EAAKG,OAAOF,EAAQG,iBAC3BJ,EAAKK,QAAQJ,EAAQd,SAAW,EAAIa,EAAKM,KAAKL,EAAQd,MAAQ,KAC9D,OAAOa,CACR,CACD,CACD,CACOO,mBACN,IAAIC,EAAa,CAAC,EAClB,IAAK,MAAMP,KAAWP,KAAKC,eAAgB,CAC1C,GAAIM,EAAQC,OAAQ,CACnBM,EAAOrB,KAAOc,EAAQd,KACtBqB,EAAOC,iBAAmB,GAC1B,IAAK,MAAMC,KAAWT,EAAQQ,iBAAkB,CAC/CD,EAAOC,iBAAiBH,KAAK,CAC5BnB,KAAMuB,EAAQvB,KACdV,QAASiC,EAAQH,oBAEnB,CACD,CACD,CACA,OAAOC,CACR,CACOG,cACN,IAAIH,EAAoB,GACxB,IAAK,MAAMP,KAAWP,KAAKC,eAAgB,CAC1Ca,EAASA,EAAOL,OAAOF,EAAQW,cAChC,CACA,OAAOJ,CACR,CACOK,iBAAiB1B,GACvB,KAAKO,KAAKC,eAAemB,OAAS,GAAI,OACtC,IAAK,MAAMb,KAAWP,KAAKC,eAAgB,CAC1CM,EAAQC,OAAS,MACjB,GAAID,EAAQd,MAAQA,EAAM,CACzBc,EAAQC,OAAS,KACjB,GAAIR,KAAKC,eAAemB,OAAS,EAAG,CAEnC,IAAIC,EAAUrB,KAAKsB,QAAkBC,aAAa,GAClDF,EAAOG,eAAejB,EAAQd,KAAKW,QAAQ,MAAO,IACnD,CACD,CACD,CACD,CAEQqB,mBACP,GAAGzB,KAAKC,eAAemB,QAAU,EAAG,CACnCpB,KAAKC,eAAe,GAAGO,OAAS,KAChC,OAAOR,KAAKC,eAAe,EAC5B,MAAO,GAAGD,KAAKC,eAAemB,OAAS,EAAG,CACzC,IAAIM,EAAS1B,KAAKC,eAAe,GACjC,IAAK,MAAMM,KAAWP,KAAKC,eAAgB,CAC1C,IAAI0B,EAAUD,EAAOE,2BACrB,GAAIrB,EAAQqB,2BAA6BD,EAAS,CACjDD,EAASnB,CACV,CACD,CACAmB,EAAOlB,OAAS,KAChB,OAAOkB,CACR,CACD,CACOG,yBAAyBC,EAAkBC,GACjD,GAAG/B,KAAKP,MAAQqC,EAAU,CACzB9B,KAAKmB,iBAAiBY,GACtB,MACD,CACA,GAAG/B,KAAKC,eAAemB,OAAS,EAAG,CAClC,IAAK,MAAMb,KAAWP,KAAKC,eAAgB,CAE1CM,EAAQyB,kBAAkBF,EAAUC,EACrC,CACD,CACD,CACOE,aAAaC,GACnBlC,KAAKmC,GAAKnC,KAAKG,QACfH,KAAKsB,QAAU,IAAIc,EAAMpC,KAAKP,KAAKW,QAAQ,MAAO,IAAMJ,KAAKV,KAAK+C,aAAc,CAC/EC,SAAU,MACVC,WAAY,KACZC,WAAa,oBAAmBxC,KAAKmC,aAEtCnC,KAAKsB,QAAQmB,cAAc,UAAYP,GACvClC,KAAKV,KAAKoD,UAAU9B,KAAKZ,KAAKsB,SAE9BY,IACA,IAAIS,EAAY3C,KAAKV,KAAKsD,uBAAuB5C,KAAKP,MACtD,IACC,IAAK,MAAMc,KAAWoC,EAAW,CAChC,IAAIE,EAAa,IAAIC,EAAYvC,EAASP,KAAKV,KAAMU,MACrDA,KAAKC,eAAeW,KAAKiC,EAC1B,CACD,CAAE,MAAOE,GACRC,QAAQC,KAAK,kBAAmBjD,KAAKP,MACpCO,KAAKsB,QAAkB4B,cAAc,OACrClD,KAAKsB,QAAkBmB,cAAc,kBACvC,CACA,GAAIzC,KAAKC,eAAemB,QAAU,EAAG,CACpCpB,KAAKC,eAAe,GAAGgC,aAAajC,KAAKH,MAAOqC,GAC/ClC,KAAKsB,QAAkB6B,WAAWnD,KAAKC,eAAe,GAAGqB,SAG1DtB,KAAKA,KAAKC,eAAe,GAAGR,KAAKW,QAAQ,MAAO,KAAOJ,KAAKC,eAAe,GAC3ED,KAAKyB,kBACN,MAAO,GAAGzB,KAAKC,eAAemB,OAAS,EAAG,CACzC,IAAIgC,EAAY,IAAIC,EAAOrD,KAAKP,KAAKW,QAAQ,MAAO,IAAMJ,KAAKV,KAAK+C,aAAc,CACjFiB,aAAe,mBAAkBtD,KAAKmC,iBACtCoB,MAAO,CACNC,KAAO,mBAAkBxD,KAAKmC,oBAC9BsB,SAAU,IAAIC,EAAK,CAClBC,KAAM,cACNC,IAAK,oBAENC,kBAAmB,MAEpBC,OAAQ9D,KAAKV,KAAKyE,KAAKC,gBAExBhE,KAAKV,KAAKoD,UAAU9B,KAAKwC,GACzB,IAAI1B,EAAS1B,KAAKyB,mBAClB2B,EAAU5B,eAAeE,EAAOjC,KAAKW,QAAQ,MAAO,KAEpD,IAAI6D,EAAY,IAAIC,EAAOlE,KAAKP,KAAKW,QAAQ,MAAO,IAAMJ,KAAKV,KAAK+C,aAAc,CACjFsB,KAAO,iCAAgC3D,KAAKmC,uBAC5CgC,MAAOnE,KAAKV,KAAKyE,KAAKK,iBACpB3B,cAAc,yBACjBzC,KAAKV,KAAKoD,UAAU9B,KAAKqD,GAExBjE,KAAKsB,QAAkB6B,WAAWC,GAClCpD,KAAKsB,QAAkB6B,WAAWc,GAEnC,IAAK,IAAI1D,KAAWP,KAAKC,eAAgB,CACxCM,EAAQ0B,aAAajC,KAAKH,MAAOqC,GAGjClC,KAAKO,EAAQd,KAAKW,QAAQ,MAAO,KAAOG,EACvCP,KAAKsB,QAAkB6B,WAAW5C,EAAQe,QAC5C,CACD,CACD,EAWD,MAAMwB,UAAoB/D,EASzBK,YAAYmB,EAAkBjB,EAAmBC,GAChDC,MAAMe,EAAQd,KAAKc,EAAQ8D,cAAc9D,EAAQ+D,KAAK/D,EAAQgE,SAAShE,EAAQiE,WAE/ExE,KAAKT,OAASA,EACdS,KAAKV,KAAOA,EACZU,KAAKyE,SAAWlE,EAAQd,KAAKW,QAAQ,MAAO,IAC5CJ,KAAKe,iBAAmB,GACxBf,KAAKQ,OAAS,MACdR,KAAKE,KAAO,CAAC,CACd,CACOC,QACN,OAAOH,KAAKT,OAAOY,QAAU,IAAMH,KAAKP,KAAKW,QAAQ,MAAO,GAC7D,CACOwB,2BACN,IAAId,EAAiB,EACrB,IAAK,MAAME,KAAWhB,KAAKwE,UAAW,CACrC1D,GAAUd,KAAKV,KAAKoF,WAAW1D,GAASnB,KACzC,CACA,OAAOiB,CACR,CACOI,cACN,IAAIyD,EAAsB,GAC1B,IAAK,MAAMtF,KAAQW,KAAKe,iBAAkB,CACzC4D,EAAS/D,KAAKvB,GACdsF,EAAWA,EAASlE,OAAOpB,EAAK4B,cACjC,CACA,OAAO0D,CACR,CACOjE,gBACN,IAAIJ,EAAgB,GACpB,IAAK,MAAMsE,KAAmB5E,KAAKe,iBAAkB,CACpDT,EAAOA,EAAKG,OAAOmE,EAAgBvE,mBACpC,CACA,OAAOC,CACR,CACO0B,kBAAkBF,EAAkBC,GAC1C,GAAI/B,KAAKuE,SAAS5D,QAAQmB,IAAa,EAAG9B,KAAKQ,OAAUR,KAAKP,MAAQsC,EACtE,IAAK,MAAM6C,KAAmB5E,KAAKe,iBAAkB,CACpD,GAAG6D,EAAgBnF,MAAQqC,EAAU,CACpC8C,EAAgBzD,iBAAiBY,EAClC,CACA6C,EAAgB/C,yBAAyBC,EAAUC,EACpD,CACD,CACOE,aAAa4C,EAAiB3C,GACpClC,KAAKmC,GAAKnC,KAAKG,QACf,GAAI0E,GAAW,EAAG,CACjB7E,KAAKsB,QAAU,IAAIwD,EAAM9E,KAAKP,KAAKW,QAAQ,MAAO,IAAMJ,KAAKV,KAAK+C,aAAc,CAC/E0C,MAAO,OAGPC,QAAU,oBAAmBhF,KAAKmC,aAClCwB,KAAO,oBAAmB3D,KAAKmC,YAEjC,KAAO,CACNnC,KAAKsB,QAAU,IAAIc,EAAMpC,KAAKP,KAAKW,QAAQ,MAAO,IAAMJ,KAAKV,KAAK+C,aAAc,CAC/EC,SAAU,KACVC,WAAY,KAGZyC,QAAU,oBAAmBhF,KAAKmC,aAClCK,WAAa,oBAAmBxC,KAAKmC,aAEtC,IAAI8C,EAAOjF,KAAKV,KAAK4F,uBAAuBlF,KAAKP,MACjD,IAAK,MAAM0F,KAAOF,EAAM,CACvB,IAAIG,EAAS,IAAIjG,EAASgG,EAAKnF,KAAKV,KAAMU,MAC1CA,KAAKe,iBAAiBH,KAAKwE,EAC5B,CACA,IAAK,IAAIC,KAAerF,KAAKe,iBAAkB,CAC9CsE,EAAYpD,aAAaC,GACxBlC,KAAKsB,QAAkB6B,WAAWkC,EAAY/D,SAG/CtB,KAAKqF,EAAY5F,KAAKW,QAAQ,MAAO,KAAOiF,CAC7C,CACD,CAEArF,KAAKV,KAAKoD,UAAU9B,KAAKZ,KAAKsB,QAC/B,EAWD,MAAMgE,UAAoBrG,EAWzBG,YAAYmG,EAAkB5C,GAC7BnD,MAAM+F,EAAO5C,GACb3C,KAAK0C,UAAY,GACjB1C,KAAKwF,eAAiB,GACtBxF,KAAKyF,aAAe,GACpBzF,KAAK0F,SAAW,GAChB1F,KAAK2F,SAAW,GAChB3F,KAAK4F,WAAa,EAClB5F,KAAKE,KAAO,CAAC,CACd,CACO2F,iBAAiBC,GACvB9F,KAAK+F,cAAgB/F,KAAKgG,WAAWF,GACrC9F,KAAK2F,SAAW3F,KAAKkF,uBAAuBlF,KAAK+F,cAActG,MAE/D,IAAK,MAAMJ,KAAQW,KAAK2F,SAAU,CACjC,IAAIM,EAAU,IAAI9G,EAASE,EAAMW,KAAMA,MACvCA,KAAK0F,SAAS9E,KAAKqF,EACpB,CAIA,IAAK,IAAIC,KAAYlG,KAAK0F,SAAU,CACnCQ,EAASjE,aAAa,GACtBjC,KAAKE,KAAKgG,EAAS/D,IAAM+D,CAC1B,CAEA,OAAOlG,KAAKE,IACb,CACOiG,iBACN,IAAK,MAAM7E,KAAWtB,KAAK0C,UAAW,CACrCpB,EAAQ8E,SACT,CACD,CACOC,qBACN,IAAI/F,EAAgB,GACpB,IAAK,IAAIgG,KAAYtG,KAAK0F,SAAU,CACnCpF,EAAOA,EAAKG,OAAO6F,EAASjG,mBAC7B,CAEAC,EAAO,IAAI,IAAIiG,IAAIjG,IACnB,IAAK,IAAIkG,EAAQlG,EAAKc,OAAS,EAAGoF,GAAS,EAAGA,IAAS,CACtD,MAAMC,EAAUnG,EAAKkG,GACrB,GAAIC,GAAWC,UAAWpG,EAAKqG,OAAOH,EAAO,EAC9C,CACA,OAAOlG,CACR,CACOsG,gBACN,IAAIC,EAAa,CAAC,EAClB,IAAK,IAAIP,KAAYtG,KAAK0F,SAAU,CAEnCmB,EAAWP,EAAS7G,MAAQ,CAC3BA,KAAM6G,EAAS7G,KACfV,QAASuH,EAASzF,mBAEpB,CACA,OAAOgG,CACR,CACOzC,eAAetC,EAAiBC,GACtC,IAAK,IAAI+E,KAAQ9G,KAAKE,KAAM,CAC3BF,KAAKE,KAAK4G,GAAMjF,yBAAyBC,EAAUC,EACpD,CACD,CACOgF,iBAAiBtH,GACvBO,KAAKwF,eAAe5E,KAAKnB,GACzB,IAAIkF,EAAsB,GAC1B,IAAK,MAAMtF,KAAQW,KAAK0F,SAAU,CACjCf,EAAS/D,KAAKvB,GACdsF,EAAWA,EAASlE,OAAOpB,EAAK4B,cACjC,CAEA,IAAK,MAAM5B,KAAQsF,EAAU,CAC5B,GAAItF,EAAKI,MAAQA,EAAM,CACtBJ,EAAKiC,QAAQmB,cAAc,mBAC1BpD,EAAKiC,QAAkB4B,cAAc,OACtC,IAAK,MAAM3C,KAAWlB,EAAKY,eAAgB,CAC1CM,EAAQC,OAAS,KAClB,CACD,CACD,CAED,CACO6B,aACNrC,KAAK4F,aACL,OAAO5F,KAAK4F,UACb,EAWc,MAAMoB,UAAuBtI,EACnCG,UAAYA,EAGboI,SACN,IAAIC,EAAQ,IAAIC,EAChBD,EAAME,QAAQ,CACbC,cAAe,GACf1B,SAAU,KAOX3F,KAAKsH,UAAUC,SAASL,EAAO,QAC/BlH,KAAKwH,YAAYC,SAAS,kBAAkBC,qBAAqB1H,KAAK2H,iBAAkB3H,MAExF,IAAI4H,EAAS5H,KAAK6H,KAAK,sBAEvBD,EAAOE,kBAAkB,SAASC,EAAeC,GAChD,OAAOA,EAAMC,UAAUC,MAAM,IAAIC,OAAO,IAAIJ,EAAO,KACpD,EACD,CAUA,4BAAaK,CAAuBC,GACnC,IAAItE,EAAO/D,KACX,IAAIsI,EAAOtI,KAAKsH,UAChB,IAAIiB,EAAYvI,KAAKwI,SAAS,QAC9B,IAAIlJ,EACJ,IACCA,EAAOiJ,EAAUE,YAAY,SAC7B,GAAInJ,EAAM,CACTA,EAAK6G,gBACN,CAEA7G,EAAO,IAAIgG,EAAYtF,KAAKwI,SAAS,aAAaC,YAAY,UAAWzI,KAAKwI,SAAS,iBAAiBC,YAAY,cACrH,CAAE,MAAO1F,GACRC,QAAQD,MAAMA,EACf,CACAzD,EAAKyE,KAAOA,EAEZ,IAAI2E,EAAqBJ,EAAKT,KAAK,sBAAgCc,WACnEJ,EAAUK,YAAY,YAAatJ,EAAKuJ,uBAAuBH,IAC/DpJ,EAAKuG,iBAAiB6C,GACtB,IAAK,IAAI5B,KAAQxH,EAAKY,KAAM,CAC1B6D,EAAK8D,KAAK,oBAA6BiB,QAAQxJ,EAAKY,KAAK4G,GAAMxF,QAEjE,CAGAiH,EAAUK,YAAY,QAAStJ,GAC/BiJ,EAAUK,YAAY,qBAAsBtJ,EAAK+G,qBAAqB0C,OACvE,CAUO/E,cAAcqE,GACpB,IAAIhH,EAASgH,EAAMW,YAGnB,IAAIC,EAAOZ,EAAMa,gBAAgB5F,aACjC,IAAIiF,EAAYvI,KAAKwI,SAAS,QAC9B,IAAIhF,EAAOnC,EAAO8H,eAAe,SACjC,IAAIlJ,EAAiBsI,EAAUE,YAAYjF,GAC3C,IAAK,IAAI4F,EAAI,EAAGA,EAAInJ,EAAemB,OAAQgI,IAAK,CAC/Cb,EAAUK,YAAYpF,EAAM,IAAG4F,WAAY,OAE3C,GAAIb,EAAUE,YAAYjF,EAAM,IAAG4F,WAAaH,EAAKhB,UAAW,CAC/DM,EAAUK,YAAYpF,EAAM,IAAG4F,WAAY,KAC5C,CACD,CACA,IAAI9J,EAAOiJ,EAAUE,YAAY,SACjCF,EAAUK,YAAY,qBAAsBtJ,EAAK+G,qBAAqB0C,OACvE,CAUO3E,eAAeiE,GACrB,IAAIE,EAAYvI,KAAKwI,SAAS,QAC9B,IAAIlJ,EAAOiJ,EAAUE,YAAY,SACjC,IAAIY,EAAShB,EAAMW,YACnB,IAAIxF,EAAO6F,EAAOF,eAAe,QAEjC,IAAIrH,EAAWyG,EAAUE,YAAYjF,GACrC,IAAIX,EAAa0F,EAAUE,YAAYjF,EAAK8F,UAAU,EAAG9F,EAAK+F,YAAY,OAE1E1G,EAAeA,EAAWvB,QAAQC,aAAa,GAAciI,kBAA2BvB,UAExF3I,EAAK8E,eAAetC,EAAUe,GAE9B0F,EAAUK,YAAY,QAAStJ,GAC/BiJ,EAAUK,YAAY,qBAAsBtJ,EAAK+G,qBAAqB0C,OACvE,CAUOU,iBAAiBpB,GACvB,IAAIqB,EAAQ1J,KAAKsH,UACjB,IAAIvD,EAAO/D,KACX,IACE+D,EAAK4F,aAA8BC,KAAK,GAC1C,CAAE,MAAO7G,GACR8G,EAASC,KAAK,CACb3H,GAAI,gBACJ2E,KAAM,+BACNiD,WAAY/J,OACVgK,KAAK,SAAUC,GAChBA,EAAwB1C,SAASmC,EAAMlB,SAAS,cAChDyB,EAAwBL,KAAK,IAC9B7F,EAAK4F,aAAeM,CACrB,EAAEC,KAAKlK,MACR,CACD,CACOmK,cAAc9B,GACpB,IAAI+B,EAAY/B,EAAMgC,aAAa,oBACnC,IAAI9B,EAAYvI,KAAKwI,SAAS,QAC9B,IAAIlJ,EAAOiJ,EAAUE,YAAY,SACjC,GAAI2B,GAAaA,EAAUhJ,OAAQ,CAClCgJ,EAAUE,IAAI,SAAUC,GACvB,IACCjL,EAAKyH,iBAAiBwD,EAASC,YAAY/K,KAC5C,CAAE,MAAOsD,GACRC,QAAQC,KAAKF,EACd,CACD,GACAwF,EAAUK,YAAY,kBAAmBtJ,EAAKkG,gBAC9C+C,EAAUK,YAAY,QAAStJ,EAChC,CAGC+I,EAAMW,YAA6ByB,WAAW,SAASC,OAAO,IAC/DnC,EAAUK,YAAY,qBAAsBtJ,EAAK+G,qBAAqB0C,OACvE,CACO4B,SAAStC,GACf,IAAIuC,EAASvC,EAAMgC,aAAa,SAChC,IAAIQ,EAAU,IAAIC,EAAO,OAAQC,EAAeC,SAAUJ,GAC1D,IAAIK,EAAW5C,EAAMgC,aAAa,gBAClCY,EAASP,OAAO,CAACG,GAClB,CAUOK,sBAEN,IAAI3C,EAAYvI,KAAKwI,SAAS,QAC9B,IAAIlJ,EAAOiJ,EAAUE,YAAY,SACjC,IAAI0C,EAAW,CACdpF,cAAmBwC,EAAUE,YAAY,kBACzCjD,eAAmB+C,EAAUE,YAAY,mBACzC2C,kBAAmB7C,EAAUE,YAAY,sBACzC9C,SAAmB4C,EAAUE,YAAY,aACzC4C,UAAgB/L,EAAKsH,iBAEtB,IAAI0E,EAAaC,KAAKC,UAAUL,GAGhCM,EAAKC,KAAKJ,EAAY,OAAQ,OAAQ,mBAAoB,QAC3D,CACOK,iBAAiBtD,GAEvB,IAAItE,EAAO/D,KACX,IACE+D,EAAK6H,aAAwBhC,MAC/B,CAAE,MAAO7G,GACR8G,EAASC,KAAK,CACb3H,GAAI,iBACJ2E,KAAM,+BACNiD,WAAY/J,OACVgK,KAAK,SAAUC,GAEhBA,EAAkBL,OACnB7F,EAAK6H,aAAe3B,CACrB,EAAEC,KAAKlK,MACR,CACD,CACO6L,YAAYxD,GAClBrI,KAAK4L,aAAaE,OACnB,CACOC,kBAAkB1D,GAExB,IAAI2D,EAAO3D,EAAMa,gBAAgBD,KAAKgD,gBACtC,IAAIlI,EAAO/D,KACX,IAAIkM,EAAS,IAAIC,WACjB,IAAI5D,EAAYvI,KAAKwI,SAAS,QAG9B0D,EAAOE,WAAWJ,GAGlBE,EAAOG,OAAS,WACf,IAAIlB,EAAOI,KAAKe,MAAMJ,EAAOpL,QAE7B,IACCyH,EAAUK,YAAY,iBAAkBuC,EAAKpF,eAC7CwC,EAAUK,YAAY,kBAAmBuC,EAAK3F,gBAC9C+C,EAAUK,YAAY,qBAAsBuC,EAAKC,mBACjD7C,EAAUK,YAAY,YAAauC,EAAKxF,UAExC,IAAI0F,EAAiBF,EAAKE,UAE1B,IAAI/L,EACJA,EAAOiJ,EAAUE,YAAY,SAC7B,GAAInJ,EAAM,CACTA,EAAK6G,gBACN,CAEA7G,EAAO,IAAIgG,EAAYvB,EAAKyE,SAAS,aAAaC,YAAY,UAAW1E,EAAKyE,SAAS,iBAAiBC,YAAY,eAEpHnJ,EAAKyE,KAAOA,EACZzE,EAAKuG,iBAAiBsF,EAAKpF,eAE3B,IAAK,IAAIe,KAAQxH,EAAKY,KAAM,CAC1B6D,EAAK8D,KAAK,oBAA6BiB,QAAQxJ,EAAKY,KAAK4G,GAAMxF,QACjE,CAEAiH,EAAUK,YAAY,QAAStJ,EAEhC,CAAE,MAAOyD,GACRwJ,EAAWC,KAAK,oDACjB,CAED,CACD,CACO7E,iBAAiBU,GAExB,EACA,OAAArB,CAAA","sourceRoot":"controller"}},{"offset":{"line":21,"column":0},"map":{"version":3,"file":"Types.js","names":["Product","constructor","Name","Dangerous","Illegal","AvgPrice","Level","Customers","Manufacturer","this","Factory","ProductionCap","Cost","Products","Materials","Game","Goods","Factories","getFactory","factory","getProduct","product","getProductsFromFactory","result","productName","push","getMaterialsForFactory","getFactoriesFromProduct","factoryName","getFactoriesForProduct","ProductName","getCustomersOfProduct","__exports","__esModule"],"sources":["../../src/controller/Types.ts"],"sourcesContent":["export class Product {\r\n\tName: string;\r\n\tDangerous: boolean;\r\n\tIllegal: boolean;\r\n\tAvgPrice: number;\r\n\tLevel: number;\r\n\tCustomers: string[];\r\n\tManufacturer: string[];\r\n\r\n\tconstructor(Name: string,Dangerous: boolean,Illegal: boolean,AvgPrice: number,Level: number,Customers: string[],Manufacturer: string[]) {\r\n\t\tthis.Name = Name\r\n\t\tthis.Dangerous = Dangerous\r\n\t\tthis.Illegal = Illegal\r\n\t\tthis.AvgPrice = AvgPrice\r\n\t\tthis.Level = Level\r\n\t\tthis.Customers = Customers\r\n\t\tthis.Manufacturer = Manufacturer\r\n\t}\r\n}\r\nexport class Factory {\r\n\tName: string;\r\n\tProductionCap: number;\r\n\tCost: number;\r\n\tProducts: string[];\r\n\tMaterials: string[];\r\n\r\n\tconstructor(Name: string,ProductionCap: number,Cost: number,Products: string[],Materials: string[]) {\r\n\t\tthis.Name = Name\r\n\t\tthis.ProductionCap = ProductionCap\r\n\t\tthis.Cost = Cost\r\n\t\tthis.Products = Products\r\n\t\tthis.Materials = Materials\r\n\t}\r\n} \r\nexport class Game {\r\n\tFactories: Factory[];\r\n\tGoods: Product[];\r\n\r\n\tconstructor(Goods: Product[],Factories: Factory[]) {\r\n\t\tthis.Goods = Goods;\r\n\t\tthis.Factories = Factories;\r\n\t}\r\n\tpublic getFactory(Name: string): Factory {\r\n\t\tfor (const factory of this.Factories) {\r\n\t\t\tif (factory.Name == Name) return factory;\r\n\t\t}\r\n\t}\r\n\tpublic getProduct(Name: string): Product {\r\n\t\tfor (const product of this.Goods) {\r\n\t\t\tif (product.Name == Name) return product;\r\n\t\t}\r\n\t}\r\n\tpublic getProductsFromFactory(Name: string): Product[] {\r\n\t\tvar result: Product[] = [];\r\n\t\tconst factory = this.getFactory(Name);\r\n\t\tfor (const productName of factory.Products) {\r\n\t\t\tresult.push(this.getProduct(productName));\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tpublic getMaterialsForFactory(Name: string): Product[] {\r\n\t\tvar result: Product[] = [];\r\n\t\tconst factory = this.getFactory(Name);\r\n\t\tfor (const productName of factory.Materials) {\r\n\t\t\tresult.push(this.getProduct(productName));\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tpublic getFactoriesFromProduct(Name: string): Factory[] {\r\n\t\tvar result: Factory[] = [];\r\n\t\tconst product = this.getProduct(Name);\r\n\t\tfor (const factoryName of product.Manufacturer) {\r\n\t\t\tresult.push(this.getFactory(factoryName));\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tpublic getFactoriesForProduct(ProductName: string): Factory[] {\r\n\t\tvar result: Factory[] = [];\r\n\t\tconst product = this.getProduct(ProductName);\r\n\t\tfor (const factoryName of product.Manufacturer) {\r\n\t\t\tresult.push(this.getFactory(factoryName));\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tpublic getCustomersOfProduct(Name: string): Factory[] {\r\n\t\tvar result: Factory[] = [];\r\n\t\tconst product = this.getProduct(Name);\r\n\t\tfor (const factoryName of product.Customers) {\r\n\t\t\tresult.push(this.getFactory(factoryName));\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n}"],"mappings":"AAAA,yCAAO,MAAMA,EASZC,YAAYC,EAAaC,EAAmBC,EAAiBC,EAAiBC,EAAcC,EAAoBC,GAC/GC,KAAKP,KAAOA,EACZO,KAAKN,UAAYA,EACjBM,KAAKL,QAAUA,EACfK,KAAKJ,SAAWA,EAChBI,KAAKH,MAAQA,EACbG,KAAKF,UAAYA,EACjBE,KAAKD,aAAeA,CACrB,EAEM,MAAME,EAOZT,YAAYC,EAAaS,EAAsBC,EAAaC,EAAmBC,GAC9EL,KAAKP,KAAOA,EACZO,KAAKE,cAAgBA,EACrBF,KAAKG,KAAOA,EACZH,KAAKI,SAAWA,EAChBJ,KAAKK,UAAYA,CAClB,EAEM,MAAMC,EAIZd,YAAYe,EAAiBC,GAC5BR,KAAKO,MAAQA,EACbP,KAAKQ,UAAYA,CAClB,CACOC,WAAWhB,GACjB,IAAK,MAAMiB,KAAWV,KAAKQ,UAAW,CACrC,GAAIE,EAAQjB,MAAQA,EAAM,OAAOiB,CAClC,CACD,CACOC,WAAWlB,GACjB,IAAK,MAAMmB,KAAWZ,KAAKO,MAAO,CACjC,GAAIK,EAAQnB,MAAQA,EAAM,OAAOmB,CAClC,CACD,CACOC,uBAAuBpB,GAC7B,IAAIqB,EAAoB,GACxB,MAAMJ,EAAUV,KAAKS,WAAWhB,GAChC,IAAK,MAAMsB,KAAeL,EAAQN,SAAU,CAC3CU,EAAOE,KAAKhB,KAAKW,WAAWI,GAC7B,CACA,OAAOD,CACR,CACOG,uBAAuBxB,GAC7B,IAAIqB,EAAoB,GACxB,MAAMJ,EAAUV,KAAKS,WAAWhB,GAChC,IAAK,MAAMsB,KAAeL,EAAQL,UAAW,CAC5CS,EAAOE,KAAKhB,KAAKW,WAAWI,GAC7B,CACA,OAAOD,CACR,CACOI,wBAAwBzB,GAC9B,IAAIqB,EAAoB,GACxB,MAAMF,EAAUZ,KAAKW,WAAWlB,GAChC,IAAK,MAAM0B,KAAeP,EAAQb,aAAc,CAC/Ce,EAAOE,KAAKhB,KAAKS,WAAWU,GAC7B,CACA,OAAOL,CACR,CACOM,uBAAuBC,GAC7B,IAAIP,EAAoB,GACxB,MAAMF,EAAUZ,KAAKW,WAAWU,GAChC,IAAK,MAAMF,KAAeP,EAAQb,aAAc,CAC/Ce,EAAOE,KAAKhB,KAAKS,WAAWU,GAC7B,CACA,OAAOL,CACR,CACOQ,sBAAsB7B,GAC5B,IAAIqB,EAAoB,GACxB,MAAMF,EAAUZ,KAAKW,WAAWlB,GAChC,IAAK,MAAM0B,KAAeP,EAAQd,UAAW,CAC5CgB,EAAOE,KAAKhB,KAAKS,WAAWU,GAC7B,CACA,OAAOL,CACR,EACA,IAAAS,EAAA,CAAAC,WAAA,MAAAD,EAAAhC,UAAAgC,EAAAtB,UAAAsB,EAAAjB,OAAA,OAAAiB,CAAA","sourceRoot":"controller"}},{"offset":{"line":26,"column":0},"map":{"version":3,"file":"formatter.js","names":["formatValue","value","parseFloat","toFixed","error","__exports"],"sources":["../../src/model/formatter.ts"],"sourcesContent":["export default {\r\n\t/**\r\n\t * Rounds the currency value to 2 digits\r\n\t *\r\n\t * @public\r\n\t * @param {string} value value to be formatted\r\n\t * @returns {string} formatted currency value with 2 digits\r\n\t */\r\n\tformatValue: (value:string) => {\r\n\t\tif (!value) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t\ttry {\r\n\t\t\treturn parseFloat(value).toFixed(2);\r\n\t\t} catch (error) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n}"],"mappings":"AAAA,+CAAe,CAQdA,YAAcC,IACb,IAAKA,EAAO,CACX,MAAO,EACR,CACA,IACC,OAAOC,WAAWD,GAAOE,QAAQ,EAClC,CAAE,MAAOC,GACR,OAAOH,CACR,IAED,OAAAI,CAAA","sourceRoot":"model"}},{"offset":{"line":29,"column":0},"map":{"version":3,"file":"models.js","names":["createDeviceModel","oModel","JSONModel","Device","setDefaultBindingMode","BindingMode","OneWay","__exports"],"sources":["../../src/model/models.ts"],"sourcesContent":["import JSONModel from \"sap/ui/model/json/JSONModel\";\r\nimport BindingMode from \"sap/ui/model/BindingMode\";\r\nimport * as Device from \"sap/ui/Device\";\r\n\r\nexport default {\r\n\r\n\tcreateDeviceModel : () => {\r\n\t\tconst oModel = new JSONModel(Device);\r\n\t\toModel.setDefaultBindingMode(BindingMode.OneWay);\r\n\t\treturn oModel;\r\n\t}\r\n\r\n};"],"mappings":"AAAA,4HAIe,CAEdA,kBAAoBA,KACnB,MAAMC,EAAS,IAAIC,EAAUC,GAC7BF,EAAOG,sBAAsBC,EAAYC,QACzC,OAAOL,CAAM,GAGd,OAAAM,CAAA","sourceRoot":"model"}}]}