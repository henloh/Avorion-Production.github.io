{"version":3,"file":"Component.js","names":["support","sap_ui_Device","models","_interopRequireDefault","__models","Component","UIComponent","extend","metadata","manifest","interfaces","init","_init","UIComponent.prototype.init.call","this","GoodModel","JSONModel","FactorieModel","setDefaultBindingMode","setModel","createDeviceModel","getRouter","initialize","getContentDensityClass","_getContentDensityClass","contentDensityClass","undefined","document","body","classList","contains","touch"],"sources":["../src/Component.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-call */\r\n/* eslint-disable no-case-declarations */\r\nimport UIComponent from \"sap/ui/core/UIComponent\";\r\nimport { support } from \"sap/ui/Device\";\r\nimport models from \"./model/models\";\r\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\r\nimport IconPool from \"sap/ui/core/IconPool\";\r\n\r\n// import additional dependencies to bundle them properly\r\nimport \"sap/ui/core/ComponentSupport\";\r\nimport \"sap/ui/core/date/Gregorian\";\r\nimport \"sap/ui/model/type/Date\";\r\nimport Log from \"sap/base/Log\";\r\n\r\n/**\r\n * @namespace de.henloh.prodts\r\n */\r\nexport default class Component extends UIComponent {\r\n\r\n\tpublic static metadata = {\r\n\t\tmanifest: \"json\",\r\n\t\tinterfaces: [\"sap.ui.core.IAsyncContentCreation\"],\r\n\t};\r\n\r\n\tprivate contentDensityClass : string;\r\n\r\n\tpublic init() : void {\r\n\t\t// call the base component's init function\r\n\t\tsuper.init();\r\n\r\n\t\tvar GoodModel = new JSONModel(\"./data/Products.json\")\r\n\t\tvar FactorieModel = new JSONModel(\"./data/Factories.json\")\r\n\t\tGoodModel.setDefaultBindingMode(\"TwoWay\");\r\n\t\tFactorieModel.setDefaultBindingMode(\"TwoWay\");\r\n\r\n\t\tthis.setModel(GoodModel, \"GoodModel\");\r\n\t\tthis.setModel(FactorieModel, \"FactorieModel\");\r\n\t\tthis.setModel(models.createDeviceModel(), \"device\");\r\n\r\n\t\t// create the views based on the url/hash\r\n\t\tthis.getRouter().initialize();\r\n\t}\r\n\r\n\t/**\r\n\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\r\n\t * design mode class should be set, which influences the size appearance of some controls.\r\n\t *\r\n\t * @public\r\n\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\r\n\t */\r\n\tpublic getContentDensityClass() : string {\r\n\t\tif (this.contentDensityClass === undefined) {\r\n\t\t\t// check whether FLP has already set the content density class; do nothing in this case\r\n\t\t\tif (document.body.classList.contains(\"sapUiSizeCozy\") || document.body.classList.contains(\"sapUiSizeCompact\")) {\r\n\t\t\t\tthis.contentDensityClass = \"\";\r\n\t\t\t} else if (!support.touch) { // apply \"compact\" mode if touch is not supported\r\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCompact\";\r\n\t\t\t} else {\r\n\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\r\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCozy\";\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.contentDensityClass;\r\n\t}\r\n\r\n}\r\n"],"mappings":"0TAGSA,EAAOC,EAAA,iBACTC,EAAMC,EAAAC,GAUb,MAGqBC,EAAkBC,EAAWC,OAAA,8BAEnCC,SAAW,CACxBC,SAAU,OACVC,WAAY,CAAC,sCAKPC,KAAI,SAAAC,IAEVC,sBAAAC,MAEA,IAAIC,EAAY,IAAIC,EAAU,wBAC9B,IAAIC,EAAgB,IAAID,EAAU,yBAClCD,EAAUG,sBAAsB,UAChCD,EAAcC,sBAAsB,UAEpCJ,KAAKK,SAASJ,EAAW,aACzBD,KAAKK,SAASF,EAAe,iBAC7BH,KAAKK,SAASjB,EAAOkB,oBAAqB,UAG1CN,KAAKO,YAAYC,YAClB,EASOC,uBAAsB,SAAAC,IAC5B,GAAIV,KAAKW,sBAAwBC,UAAW,CAE3C,GAAIC,SAASC,KAAKC,UAAUC,SAAS,kBAAoBH,SAASC,KAAKC,UAAUC,SAAS,oBAAqB,CAC9GhB,KAAKW,oBAAsB,EAC5B,MAAO,IAAKzB,EAAQ+B,MAAO,CAC1BjB,KAAKW,oBAAsB,kBAC5B,KAAO,CAENX,KAAKW,oBAAsB,eAC5B,CACD,CACA,OAAOX,KAAKW,mBACb,IAAC,OA9CmBpB,CAAS"}