{"version":3,"file":"Component.js","names":["support","models","Component","UIComponent","metadata","manifest","interfaces","init","setModel","createDeviceModel","getRouter","initialize","getContentDensityClass","contentDensityClass","undefined","document","body","classList","contains","touch"],"sources":["../src/Component.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-call */\r\n/* eslint-disable no-case-declarations */\r\nimport UIComponent from \"sap/ui/core/UIComponent\";\r\nimport { support } from \"sap/ui/Device\";\r\nimport models from \"./model/models\";\r\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\r\nimport IconPool from \"sap/ui/core/IconPool\";\r\n\r\n// import additional dependencies to bundle them properly\r\nimport \"sap/ui/core/ComponentSupport\";\r\nimport \"sap/ui/core/date/Gregorian\";\r\nimport \"sap/ui/model/type/Date\";\r\nimport Log from \"sap/base/Log\";\r\n\r\n/**\r\n * @namespace de.henloh.prodts\r\n */\r\nexport default class Component extends UIComponent {\r\n\r\n\tpublic static metadata = {\r\n\t\tmanifest: \"json\",\r\n\t\tinterfaces: [\"sap.ui.core.IAsyncContentCreation\"],\r\n\t};\r\n\r\n\tprivate contentDensityClass : string;\r\n\r\n\tpublic init() : void {\r\n\t\t// call the base component's init function\r\n\t\tsuper.init();\r\n\r\n\t\tthis.setModel(models.createDeviceModel(), \"device\");\r\n\r\n\t\t// create the views based on the url/hash\r\n\t\tthis.getRouter().initialize();\r\n\t}\r\n\r\n\t/**\r\n\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\r\n\t * design mode class should be set, which influences the size appearance of some controls.\r\n\t *\r\n\t * @public\r\n\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\r\n\t */\r\n\tpublic getContentDensityClass() : string {\r\n\t\tif (this.contentDensityClass === undefined) {\r\n\t\t\t// check whether FLP has already set the content density class; do nothing in this case\r\n\t\t\tif (document.body.classList.contains(\"sapUiSizeCozy\") || document.body.classList.contains(\"sapUiSizeCompact\")) {\r\n\t\t\t\tthis.contentDensityClass = \"\";\r\n\t\t\t} else if (!support.touch) { // apply \"compact\" mode if touch is not supported\r\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCompact\";\r\n\t\t\t} else {\r\n\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\r\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCozy\";\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.contentDensityClass;\r\n\t}\r\n\r\n}\r\n"],"mappings":";;;;;QAGSA,O;;QACFC,M;;EAUP;AACA;AACA;QACqBC,S,GAAkBC,W;IAExBC,Q,EAAW;MACxBC,QAAQ,EAAE,MADc;MAExBC,UAAU,EAAE,CAAC,mCAAD;IAFY,C;IAOlBC,I,mBAAc;MACpB;MACA;MAEA,KAAKC,QAAL,CAAcP,MAAM,CAACQ,iBAAP,EAAd,EAA0C,QAA1C,EAJoB,CAMpB;;MACA,KAAKC,SAAL,GAAiBC,UAAjB;IACA,C;IASMC,sB,qCAAkC;MACxC,IAAI,KAAKC,mBAAL,KAA6BC,SAAjC,EAA4C;QAC3C;QACA,IAAIC,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,QAAxB,CAAiC,eAAjC,KAAqDH,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,QAAxB,CAAiC,kBAAjC,CAAzD,EAA+G;UAC9G,KAAKL,mBAAL,GAA2B,EAA3B;QACA,CAFD,MAEO,IAAI,CAACb,OAAO,CAACmB,KAAb,EAAoB;UAAE;UAC5B,KAAKN,mBAAL,GAA2B,kBAA3B;QACA,CAFM,MAEA;UACN;UACA,KAAKA,mBAAL,GAA2B,eAA3B;QACA;MACD;;MACD,OAAO,KAAKA,mBAAZ;IACA;;SAvCmBX,S"}